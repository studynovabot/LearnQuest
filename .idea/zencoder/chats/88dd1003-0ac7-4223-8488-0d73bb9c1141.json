{
    "checksum": "32936f6b688075b5bac54baba5e72f315d952cde7851e9e90181435913b2844f",
    "data": {
    "id": "88dd1003-0ac7-4223-8488-0d73bb9c1141",
    "createdAt": 1750419536263,
    "updatedAt": 1750420605355,
    "title": "NPM Installation Guide",
    "messages": [
        {
            "id": "6d455159-ac2b-4ef1-ae88-83628ccdec86",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "run npm install"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750419536264,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "run npm install"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "760e736b-2ec9-4978-940d-f7ce063600ac",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "I'll help you run the npm install command. Let me execute that for you."
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_017ZNZ6jBmXSFWj1N8Read1Q",
                    "status": "IN_PROGRESS",
                    "isHidden": true,
                    "localResult": "{\"status\":\"SUCCESS\",\"exitCode\":0,\"output\":\"\\u001b[?9001h\\u001b[?1004h\\u001b[?25l\\u001b[2J\\u001b[m\\u001b[H\\u001b]0;npm\\u0007\\u001b[?25h\\u001b[?25l\\u001b[8;3;158t\\u001b[K\\r\\n\\u001b[K\\r\\n\\u001b[K\\u001b[H\\u001b[?25h\\u001b]0;npm install\\u0007\\\\\\u001b[K\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H/\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H-\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\\\\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H/\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H-\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\\\\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H/\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H-\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\\\\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H/\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H-\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\\\\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H/\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H-\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\\\\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H/\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H-\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\\\\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H|\\u001b[K\\u001b[?25h\\u001b[?25l\\u001b[H\\u001b[K\\r\\n> learnquest@1.0.0 prepare\\r\\n> npx husky install\\r\\u001b[?25h\\n\\n\\u001b]0;npm\\u0007\\u001b]0;npm exec husky install\\u0007\\\\\\u001b[K\\r\\u001b[K\\u001b]0;C:\\\\WINDOWS\\\\system32\\\\cmd.exe \\u0007husky - install command is DEPRECATED\\r\\n\\u001b[K\\\\\\u001b[K\\r\\u001b[K\\nup to date, audited 1294 packages in 15s\\r\\n\\n220 packages are looking for funding\\r\\n  run `npm fund` for details\\r\\n\\\\\\r\\u001b[K\\n\\u001b[31m\\u001b[1m13\\u001b[m vulnerabilities (1 \\u001b[1mlow\\u001b[22m, 12 \\u001b[33m\\u001b[1mmoderate\\u001b[m)\\u001b[K\\r\\n\\nTo address issues that do not require attention, run:\\r\\n  npm audit fix\\r\\n\\nTo address all issues (including breaking changes), run:\\r\\n  npm audit fix --force\\r\\n\\nRun `npm audit` for details.\\r\\n\\u001b]0;C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\u0007\"}"
                },
                {
                    "type": "shellCommand",
                    "command": "npm install",
                    "id": "6da2d1d4-a4ba-4ca5-b894-088b1a2eee8d",
                    "status": "SUCCESS",
                    "toolCallId": "toolu_017ZNZ6jBmXSFWj1N8Read1Q",
                    "commandsRequiringConfirmation": [],
                    "exitCode": 0,
                    "output": "\u001b[?9001h\u001b[?1004h\u001b[?25l\u001b[2J\u001b[m\u001b[H\u001b]0;npm\u0007\u001b[?25h\u001b[?25l\u001b[8;3;158t\u001b[K\r\n\u001b[K\r\n\u001b[K\u001b[H\u001b[?25h\u001b]0;npm install\u0007\\\u001b[K\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H/\u001b[K\u001b[?25h\u001b[?25l\u001b[H-\u001b[K\u001b[?25h\u001b[?25l\u001b[H\\\u001b[K\u001b[?25h\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H/\u001b[K\u001b[?25h\u001b[?25l\u001b[H-\u001b[K\u001b[?25h\u001b[?25l\u001b[H\\\u001b[K\u001b[?25h\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H/\u001b[K\u001b[?25h\u001b[?25l\u001b[H-\u001b[K\u001b[?25h\u001b[?25l\u001b[H\\\u001b[K\u001b[?25h\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H/\u001b[K\u001b[?25h\u001b[?25l\u001b[H-\u001b[K\u001b[?25h\u001b[?25l\u001b[H\\\u001b[K\u001b[?25h\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H/\u001b[K\u001b[?25h\u001b[?25l\u001b[H-\u001b[K\u001b[?25h\u001b[?25l\u001b[H\\\u001b[K\u001b[?25h\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H/\u001b[K\u001b[?25h\u001b[?25l\u001b[H-\u001b[K\u001b[?25h\u001b[?25l\u001b[H\\\u001b[K\u001b[?25h\u001b[?25l\u001b[H|\u001b[K\u001b[?25h\u001b[?25l\u001b[H\u001b[K\r\n> learnquest@1.0.0 prepare\r\n> npx husky install\r\u001b[?25h\n\n\u001b]0;npm\u0007\u001b]0;npm exec husky install\u0007\\\u001b[K\r\u001b[K\u001b]0;C:\\WINDOWS\\system32\\cmd.exe \u0007husky - install command is DEPRECATED\r\n\u001b[K\\\u001b[K\r\u001b[K\nup to date, audited 1294 packages in 15s\r\n\n220 packages are looking for funding\r\n  run `npm fund` for details\r\n\\\r\u001b[K\n\u001b[31m\u001b[1m13\u001b[m vulnerabilities (1 \u001b[1mlow\u001b[22m, 12 \u001b[33m\u001b[1mmoderate\u001b[m)\u001b[K\r\n\nTo address issues that do not require attention, run:\r\n  npm audit fix\r\n\nTo address all issues (including breaking changes), run:\r\n  npm audit fix --force\r\n\nRun `npm audit` for details.\r\n\u001b]0;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0007"
                }
            ],
            "context": {
                "author": "Coding Agent",
                "operationId": "1bf88d9a-2d81-440b-a2ed-29cde6c41f3f"
            },
            "createdAt": 1750419539146,
            "isInternal": false
        },
        {
            "id": "b0122c63-2bca-48de-83f0-66cd87bf05b8",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "The npm install command has completed successfully. Here's a summary of what happened:\n\n1. All packages were installed successfully\n2. The installation process audited 1294 packages in 15 seconds\n3. The husky pre-commit hooks were set up (though there was a deprecation notice for the husky install command)\n4. There are some vulnerabilities reported:\n   - 1 low severity vulnerability\n   - 12 moderate severity vulnerabilities\n\nThese vulnerabilities don't require immediate attention, but you can address them if needed by running:\n- `npm audit fix` for non-breaking changes\n- `npm audit fix --force` for all issues (including breaking changes)\n\nIs there anything specific you'd like to do next with your project?"
                }
            ],
            "context": {
                "author": "Coding Agent",
                "operationId": "a0025ef3-ded5-4256-a7d5-d2583e93661e"
            },
            "createdAt": 1750419572733,
            "isInternal": false
        },
        {
            "id": "cababc85-dc9a-4e3d-9a3c-86ef59039ecc",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Let me continue implementing the Smart PDF Upload system. Now I'll update the upload dialog to include the smart PDF upload functionality:"
                },
                {
                    "type": "text",
                    "text": "--- client/src/pages/AdminSolutions.tsx"
                },
                {
                    "type": "text",
                    "text": "+++ client/src/pages/AdminSolutions.tsx"
                },
                {
                    "type": "text",
                    "text": "@@ -731,7 +731,7 @@"
                },
                {
                    "type": "text",
                    "text": "       {/* Upload Dialog */}"
                },
                {
                    "type": "text",
                    "text": "       <Dialog open={isUploadDialogOpen} onOpenChange={setIsUploadDialogOpen}>"
                },
                {
                    "type": "text",
                    "text": "         <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">"
                },
                {
                    "type": "text",
                    "text": "-          <DialogHeader>"
                },
                {
                    "type": "text",
                    "text": "+          <DialogHeader className=\"mb-4\">"
                },
                {
                    "type": "text",
                    "text": "             <DialogTitle className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "               <Upload className=\"h-5 w-5\" />"
                },
                {
                    "type": "text",
                    "text": "               Upload NCERT Solution"
                },
                {
                    "type": "text",
                    "text": "@@ -740,6 +740,123 @@"
                },
                {
                    "type": "text",
                    "text": "               Add a new NCERT solution to the database"
                },
                {
                    "type": "text",
                    "text": "             </DialogDescription>"
                },
                {
                    "type": "text",
                    "text": "           </DialogHeader>"
                },
                {
                    "type": "text",
                    "text": "+          "
                },
                {
                    "type": "text",
                    "text": "+          <Tabs defaultValue=\"smart-upload\" className=\"w-full\">"
                },
                {
                    "type": "text",
                    "text": "+            <TabsList className=\"grid w-full grid-cols-2\">"
                },
                {
                    "type": "text",
                    "text": "+              <TabsTrigger value=\"smart-upload\" className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+                <Brain className=\"h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+                Smart PDF Upload"
                },
                {
                    "type": "text",
                    "text": "+              </TabsTrigger>"
                },
                {
                    "type": "text",
                    "text": "+              <TabsTrigger value=\"manual-upload\" className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+                <FileText className=\"h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+                Manual Upload"
                },
                {
                    "type": "text",
                    "text": "+              </TabsTrigger>"
                },
                {
                    "type": "text",
                    "text": "+            </TabsList>"
                },
                {
                    "type": "text",
                    "text": "+            "
                },
                {
                    "type": "text",
                    "text": "+            {/* Smart PDF Upload Tab */}"
                },
                {
                    "type": "text",
                    "text": "+            <TabsContent value=\"smart-upload\" className=\"mt-4\">"
                },
                {
                    "type": "text",
                    "text": "+              <div className=\"space-y-4\">"
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                    <Label htmlFor=\"smart-board\">Board</Label>"
                },
                {
                    "type": "text",
                    "text": "+                    <Select"
                },
                {
                    "type": "text",
                    "text": "+                      value={smartUploadData.board}"
                },
                {
                    "type": "text",
                    "text": "+                      onValueChange={(value) => setSmartUploadData({...smartUploadData, board: value})}"
                },
                {
                    "type": "text",
                    "text": "+                    >"
                },
                {
                    "type": "text",
                    "text": "+                      <SelectTrigger id=\"smart-board\">"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectValue placeholder=\"Select Board\" />"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                      <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"CBSE\">CBSE</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"ICSE\">ICSE</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"State\">State Board</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                    </Select>"
                },
                {
                    "type": "text",
                    "text": "+                  </div>"
                },
                {
                    "type": "text",
                    "text": "+                  "
                },
                {
                    "type": "text",
                    "text": "+                  <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                    <Label htmlFor=\"smart-class\">Class</Label>"
                },
                {
                    "type": "text",
                    "text": "+                    <Select"
                },
                {
                    "type": "text",
                    "text": "+                      value={smartUploadData.class}"
                },
                {
                    "type": "text",
                    "text": "+                      onValueChange={(value) => setSmartUploadData({...smartUploadData, class: value})}"
                },
                {
                    "type": "text",
                    "text": "+                    >"
                },
                {
                    "type": "text",
                    "text": "+                      <SelectTrigger id=\"smart-class\">"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectValue placeholder=\"Select Class\" />"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                      <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                        {[...Array(12)].map((_, i) => ("
                },
                {
                    "type": "text",
                    "text": "+                          <SelectItem key={i + 1} value={(i + 1).toString()}>"
                },
                {
                    "type": "text",
                    "text": "+                            Class {i + 1}"
                },
                {
                    "type": "text",
                    "text": "+                          </SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        ))}"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                    </Select>"
                },
                {
                    "type": "text",
                    "text": "+                  </div>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+                "
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                    <Label htmlFor=\"smart-subject\">Subject</Label>"
                },
                {
                    "type": "text",
                    "text": "+                    <Select"
                },
                {
                    "type": "text",
                    "text": "+                      value={smartUploadData.subject}"
                },
                {
                    "type": "text",
                    "text": "+                      onValueChange={(value) => setSmartUploadData({...smartUploadData, subject: value})}"
                },
                {
                    "type": "text",
                    "text": "+                    >"
                },
                {
                    "type": "text",
                    "text": "+                      <SelectTrigger id=\"smart-subject\">"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectValue placeholder=\"Select Subject\" />"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                      <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Mathematics\">Mathematics</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Science\">Science</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Physics\">Physics</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Chemistry\">Chemistry</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Biology\">Biology</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"English\">English</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Hindi\">Hindi</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Social Science\">Social Science</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"History\">History</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Geography\">Geography</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Civics\">Civics</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                        <SelectItem value=\"Economics\">Economics</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                    </Select>"
                },
                {
                    "type": "text",
                    "text": "+                  </div>"
                },
                {
                    "type": "text",
                    "text": "+                  "
                },
                {
                    "type": "text",
                    "text": "+                  <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                    <Label htmlFor=\"smart-chapter\">Chapter</Label>"
                },
                {
                    "type": "text",
                    "text": "+                    <Input"
                },
                {
                    "type": "text",
                    "text": "+                      id=\"smart-chapter\""
                },
                {
                    "type": "text",
                    "text": "+                      placeholder=\"Enter Chapter Name\""
                },
                {
                    "type": "text",
                    "text": "+                      value={smartUploadData.chapter}"
                },
                {
                    "type": "text",
                    "text": "+                      onChange={(e) => setSmartUploadData({...smartUploadData, chapter: e.target.value})}"
                },
                {
                    "type": "text",
                    "text": "+                    />"
                },
                {
                    "type": "text",
                    "text": "+                  </div>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+                "
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <Label htmlFor=\"smart-pdf-file\">PDF File</Label>"
                },
                {
                    "type": "text",
                    "text": "+                  <Input"
                },
                {
                    "type": "text",
                    "text": "+                    id=\"smart-pdf-file\""
                },
                {
                    "type": "text",
                    "text": "+                    type=\"file\""
                },
                {
                    "type": "text",
                    "text": "+                    accept=\".pdf\""
                },
                {
                    "type": "text",
                    "text": "+                    onChange={(e) => {"
                },
                {
                    "type": "text",
                    "text": "+                      const file = e.target.files?.[0] || null;"
                },
                {
                    "type": "text",
                    "text": "+                      setSmartUploadData({...smartUploadData, pdfFile: file});"
                },
                {
                    "type": "text",
                    "text": "+                    }}"
                },
                {
                    "type": "text",
                    "text": "+                  />"
                },
                {
                    "type": "text",
                    "text": "+                  <p className=\"text-sm text-muted-foreground\">"
                },
                {
                    "type": "text",
                    "text": "+                    Upload a PDF file containing NCERT solutions. The system will automatically extract questions and answers."
                },
                {
                    "type": "text",
                    "text": "+                  </p>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+                "
                },
                {
                    "type": "text",
                    "text": "+                <Button "
                },
                {
                    "type": "text",
                    "text": "+                  className=\"w-full\" "
                },
                {
                    "type": "text",
                    "text": "+                  onClick={handleSmartPDFUpload}"
                },
                {
                    "type": "text",
                    "text": "+                  disabled={uploadLoading}"
                },
                {
                    "type": "text",
                    "text": "+                >"
                },
                {
                    "type": "text",
                    "text": "+                  {uploadLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Brain className=\"mr-2 h-4 w-4\" />}"
                },
                {
                    "type": "text",
                    "text": "+                  Process PDF & Extract Q&A Pairs"
                },
                {
                    "type": "text",
                    "text": "+                </Button>"
                },
                {
                    "type": "text",
                    "text": "+              </div>"
                },
                {
                    "type": "text",
                    "text": "+            </TabsContent>"
                },
                {
                    "type": "text",
                    "text": " "
                },
                {
                    "type": "text",
                    "text": "+            {/* Manual Upload Tab */}"
                },
                {
                    "type": "text",
                    "text": "+            <TabsContent value=\"manual-upload\" className=\"mt-4\">"
                },
                {
                    "type": "text",
                    "text": "Now let me add the manual upload tab content and the review dialog:"
                },
                {
                    "type": "text",
                    "text": "--- client/src/pages/AdminSolutions.tsx"
                },
                {
                    "type": "text",
                    "text": "+++ client/src/pages/AdminSolutions.tsx"
                },
                {
                    "type": "text",
                    "text": "@@ -859,6 +859,7 @@"
                },
                {
                    "type": "text",
                    "text": "               </div>"
                },
                {
                    "type": "text",
                    "text": "             </TabsContent>"
                },
                {
                    "type": "text",
                    "text": " "
                },
                {
                    "type": "text",
                    "text": "+            {/* Manual Upload Tab */}"
                },
                {
                    "type": "text",
                    "text": "             <TabsContent value=\"manual-upload\" className=\"mt-4\">"
                },
                {
                    "type": "text",
                    "text": "           <div className=\"space-y-4\">"
                },
                {
                    "type": "text",
                    "text": "             <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">"
                },
                {
                    "type": "text",
                    "text": "@@ -1007,6 +1008,108 @@"
                },
                {
                    "type": "text",
                    "text": "               Upload Solution"
                },
                {
                    "type": "text",
                    "text": "             </Button>"
                },
                {
                    "type": "text",
                    "text": "           </div>"
                },
                {
                    "type": "text",
                    "text": "+            </TabsContent>"
                },
                {
                    "type": "text",
                    "text": "+          </Tabs>"
                },
                {
                    "type": "text",
                    "text": "+        </DialogContent>"
                },
                {
                    "type": "text",
                    "text": "+      </Dialog>"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+      {/* Review Dialog */}"
                },
                {
                    "type": "text",
                    "text": "+      <Dialog open={isReviewDialogOpen} onOpenChange={setIsReviewDialogOpen}>"
                },
                {
                    "type": "text",
                    "text": "+        <DialogContent className=\"max-w-5xl max-h-[90vh] overflow-y-auto\">"
                },
                {
                    "type": "text",
                    "text": "+          <DialogHeader>"
                },
                {
                    "type": "text",
                    "text": "+            <DialogTitle className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+              <Brain className=\"h-5 w-5\" />"
                },
                {
                    "type": "text",
                    "text": "+              Review Extracted Q&A Pairs"
                },
                {
                    "type": "text",
                    "text": "+            </DialogTitle>"
                },
                {
                    "type": "text",
                    "text": "+            <DialogDescription>"
                },
                {
                    "type": "text",
                    "text": "+              {selectedSession && ("
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"flex flex-col gap-1 mt-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <p>"
                },
                {
                    "type": "text",
                    "text": "+                    <strong>PDF:</strong> {selectedSession.metadata.originalFilename}"
                },
                {
                    "type": "text",
                    "text": "+                  </p>"
                },
                {
                    "type": "text",
                    "text": "+                  <p>"
                },
                {
                    "type": "text",
                    "text": "+                    <strong>Details:</strong> {selectedSession.metadata.board} | Class {selectedSession.metadata.class} | {selectedSession.metadata.subject} | {selectedSession.metadata.chapter}"
                },
                {
                    "type": "text",
                    "text": "+                  </p>"
                },
                {
                    "type": "text",
                    "text": "+                  <p>"
                },
                {
                    "type": "text",
                    "text": "+                    <strong>Extracted:</strong> {selectedSession.totalQuestions} Q&A pairs"
                },
                {
                    "type": "text",
                    "text": "+                  </p>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+              )}"
                },
                {
                    "type": "text",
                    "text": "+            </DialogDescription>"
                },
                {
                    "type": "text",
                    "text": "+          </DialogHeader>"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+          {selectedSession && ("
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"space-y-6 mt-4\">"
                },
                {
                    "type": "text",
                    "text": "+              <div className=\"flex justify-between items-center\">"
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <Badge variant=\"outline\" className=\"text-sm\">"
                },
                {
                    "type": "text",
                    "text": "+                    {selectedSession.qaPairs.length} Q&A Pairs"
                },
                {
                    "type": "text",
                    "text": "+                  </Badge>"
                },
                {
                    "type": "text",
                    "text": "+                  <Badge variant={"
                },
                {
                    "type": "text",
                    "text": "+                    selectedSession.status === 'pending_review' ? 'default' :"
                },
                {
                    "type": "text",
                    "text": "+                    selectedSession.status === 'uploaded_to_database' ? 'secondary' : 'destructive'"
                },
                {
                    "type": "text",
                    "text": "+                  }>"
                },
                {
                    "type": "text",
                    "text": "+                    {selectedSession.status === 'pending_review' ? 'Pending Review' :"
                },
                {
                    "type": "text",
                    "text": "+                     selectedSession.status === 'uploaded_to_database' ? 'Uploaded' : 'Rejected'}"
                },
                {
                    "type": "text",
                    "text": "+                  </Badge>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+                "
                },
                {
                    "type": "text",
                    "text": "+                {selectedSession.status === 'pending_review' && ("
                },
                {
                    "type": "text",
                    "text": "+                  <Button "
                },
                {
                    "type": "text",
                    "text": "+                    onClick={() => handleUploadToDatabase(selectedSession.sessionId)}"
                },
                {
                    "type": "text",
                    "text": "+                    disabled={uploadingToDatabase}"
                },
                {
                    "type": "text",
                    "text": "+                  >"
                },
                {
                    "type": "text",
                    "text": "+                    {uploadingToDatabase ? ("
                },
                {
                    "type": "text",
                    "text": "+                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />"
                },
                {
                    "type": "text",
                    "text": "+                    ) : ("
                },
                {
                    "type": "text",
                    "text": "+                      <Database className=\"mr-2 h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+                    )}"
                },
                {
                    "type": "text",
                    "text": "+                    Upload All to Database"
                },
                {
                    "type": "text",
                    "text": "+                  </Button>"
                },
                {
                    "type": "text",
                    "text": "+                )}"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750419784657,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Let me continue implementing the Smart PDF Upload system. Now I'll update the upload dialog to include the smart PDF upload functionality:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- client/src/pages/AdminSolutions.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ client/src/pages/AdminSolutions.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -731,7 +731,7 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "       {/* Upload Dialog */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "       <Dialog open={isUploadDialogOpen} onOpenChange={setIsUploadDialogOpen}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "         <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "-          <DialogHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <DialogHeader className=\"mb-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <DialogTitle className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               <Upload className=\"h-5 w-5\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               Upload NCERT Solution"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -740,6 +740,123 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               Add a new NCERT solution to the database"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             </DialogDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "           </DialogHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <Tabs defaultValue=\"smart-upload\" className=\"w-full\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <TabsList className=\"grid w-full grid-cols-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <TabsTrigger value=\"smart-upload\" className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <Brain className=\"h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                Smart PDF Upload"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </TabsTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <TabsTrigger value=\"manual-upload\" className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <FileText className=\"h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                Manual Upload"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </TabsTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </TabsList>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            {/* Smart PDF Upload Tab */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <TabsContent value=\"smart-upload\" className=\"mt-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <div className=\"space-y-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Label htmlFor=\"smart-board\">Board</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      value={smartUploadData.board}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      onValueChange={(value) => setSmartUploadData({...smartUploadData, board: value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectTrigger id=\"smart-board\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectValue placeholder=\"Select Board\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"CBSE\">CBSE</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"ICSE\">ICSE</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"State\">State Board</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Label htmlFor=\"smart-class\">Class</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      value={smartUploadData.class}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      onValueChange={(value) => setSmartUploadData({...smartUploadData, class: value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectTrigger id=\"smart-class\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectValue placeholder=\"Select Class\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        {[...Array(12)].map((_, i) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <SelectItem key={i + 1} value={(i + 1).toString()}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            Class {i + 1}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          </SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        ))}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Label htmlFor=\"smart-subject\">Subject</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      value={smartUploadData.subject}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      onValueChange={(value) => setSmartUploadData({...smartUploadData, subject: value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectTrigger id=\"smart-subject\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectValue placeholder=\"Select Subject\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Mathematics\">Mathematics</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Science\">Science</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Physics\">Physics</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Chemistry\">Chemistry</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Biology\">Biology</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"English\">English</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Hindi\">Hindi</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Social Science\">Social Science</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"History\">History</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Geography\">Geography</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Civics\">Civics</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <SelectItem value=\"Economics\">Economics</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Label htmlFor=\"smart-chapter\">Chapter</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <Input"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      id=\"smart-chapter\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      placeholder=\"Enter Chapter Name\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      value={smartUploadData.chapter}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      onChange={(e) => setSmartUploadData({...smartUploadData, chapter: e.target.value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Label htmlFor=\"smart-pdf-file\">PDF File</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Input"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    id=\"smart-pdf-file\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    type=\"file\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    accept=\".pdf\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    onChange={(e) => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      const file = e.target.files?.[0] || null;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      setSmartUploadData({...smartUploadData, pdfFile: file});"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    }}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p className=\"text-sm text-muted-foreground\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    Upload a PDF file containing NCERT solutions. The system will automatically extract questions and answers."
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <Button "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  className=\"w-full\" "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  onClick={handleSmartPDFUpload}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  disabled={uploadLoading}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  {uploadLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Brain className=\"mr-2 h-4 w-4\" />}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  Process PDF & Extract Q&A Pairs"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </TabsContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            {/* Manual Upload Tab */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <TabsContent value=\"manual-upload\" className=\"mt-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Now let me add the manual upload tab content and the review dialog:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- client/src/pages/AdminSolutions.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ client/src/pages/AdminSolutions.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -859,6 +859,7 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             </TabsContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            {/* Manual Upload Tab */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <TabsContent value=\"manual-upload\" className=\"mt-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "           <div className=\"space-y-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -1007,6 +1008,108 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               Upload Solution"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "           </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </TabsContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </Tabs>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </DialogContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      </Dialog>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      {/* Review Dialog */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      <Dialog open={isReviewDialogOpen} onOpenChange={setIsReviewDialogOpen}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <DialogContent className=\"max-w-5xl max-h-[90vh] overflow-y-auto\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <DialogHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <DialogTitle className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Brain className=\"h-5 w-5\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              Review Extracted Q&A Pairs"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </DialogTitle>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <DialogDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              {selectedSession && ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"flex flex-col gap-1 mt-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <strong>PDF:</strong> {selectedSession.metadata.originalFilename}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <strong>Details:</strong> {selectedSession.metadata.board} | Class {selectedSession.metadata.class} | {selectedSession.metadata.subject} | {selectedSession.metadata.chapter}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <strong>Extracted:</strong> {selectedSession.totalQuestions} Q&A pairs"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </DialogDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </DialogHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          {selectedSession && ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"space-y-6 mt-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <div className=\"flex justify-between items-center\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Badge variant=\"outline\" className=\"text-sm\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {selectedSession.qaPairs.length} Q&A Pairs"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </Badge>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Badge variant={"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    selectedSession.status === 'pending_review' ? 'default' :"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    selectedSession.status === 'uploaded_to_database' ? 'secondary' : 'destructive'"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  }>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {selectedSession.status === 'pending_review' ? 'Pending Review' :"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                     selectedSession.status === 'uploaded_to_database' ? 'Uploaded' : 'Rejected'}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </Badge>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                {selectedSession.status === 'pending_review' && ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Button "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    onClick={() => handleUploadToDatabase(selectedSession.sessionId)}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    disabled={uploadingToDatabase}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {uploadingToDatabase ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <Database className=\"mr-2 h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    Upload All to Database"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph"
                    }
                ]
            }
        },
        {
            "id": "f0a4d301-f933-4f82-b5fe-503048413db6",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "+              </div>"
                },
                {
                    "type": "text",
                    "text": "+              "
                },
                {
                    "type": "text",
                    "text": "+              <div className=\"border rounded-md\">"
                },
                {
                    "type": "text",
                    "text": "+                <Table>"
                },
                {
                    "type": "text",
                    "text": "+                  <TableHeader>"
                },
                {
                    "type": "text",
                    "text": "+                    <TableRow>"
                },
                {
                    "type": "text",
                    "text": "+                      <TableHead className=\"w-[80px]\">#</TableHead>"
                },
                {
                    "type": "text",
                    "text": "+                      <TableHead className=\"w-[40%]\">Question</TableHead>"
                },
                {
                    "type": "text",
                    "text": "+                      <TableHead>Answer</TableHead>"
                },
                {
                    "type": "text",
                    "text": "+                    </TableRow>"
                },
                {
                    "type": "text",
                    "text": "+                  </TableHeader>"
                },
                {
                    "type": "text",
                    "text": "+                  <TableBody>"
                },
                {
                    "type": "text",
                    "text": "+                    {selectedSession.qaPairs.map((pair, index) => ("
                },
                {
                    "type": "text",
                    "text": "+                      <TableRow key={index}>"
                },
                {
                    "type": "text",
                    "text": "+                        <TableCell className=\"font-medium\">"
                },
                {
                    "type": "text",
                    "text": "+                          {pair.questionNumber || index + 1}"
                },
                {
                    "type": "text",
                    "text": "+                        </TableCell>"
                },
                {
                    "type": "text",
                    "text": "+                        <TableCell className=\"align-top\">"
                },
                {
                    "type": "text",
                    "text": "+                          <div className=\"max-h-[200px] overflow-y-auto\">"
                },
                {
                    "type": "text",
                    "text": "+                            {pair.question}"
                },
                {
                    "type": "text",
                    "text": "+                          </div>"
                },
                {
                    "type": "text",
                    "text": "+                        </TableCell>"
                },
                {
                    "type": "text",
                    "text": "+                        <TableCell className=\"align-top\">"
                },
                {
                    "type": "text",
                    "text": "+                          <div className=\"max-h-[200px] overflow-y-auto\">"
                },
                {
                    "type": "text",
                    "text": "+                            {pair.answer}"
                },
                {
                    "type": "text",
                    "text": "+                          </div>"
                },
                {
                    "type": "text",
                    "text": "+                        </TableCell>"
                },
                {
                    "type": "text",
                    "text": "+                      </TableRow>"
                },
                {
                    "type": "text",
                    "text": "+                    ))}"
                },
                {
                    "type": "text",
                    "text": "+                  </TableBody>"
                },
                {
                    "type": "text",
                    "text": "+                </Table>"
                },
                {
                    "type": "text",
                    "text": "+              </div>"
                },
                {
                    "type": "text",
                    "text": "+              "
                },
                {
                    "type": "text",
                    "text": "+              <div className=\"flex justify-end gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+                <Button variant=\"outline\" onClick={() => setIsReviewDialogOpen(false)}>"
                },
                {
                    "type": "text",
                    "text": "+                  Close"
                },
                {
                    "type": "text",
                    "text": "+                </Button>"
                },
                {
                    "type": "text",
                    "text": "+                {selectedSession.status === 'pending_review' && ("
                },
                {
                    "type": "text",
                    "text": "+                  <Button onClick={() => handleUploadToDatabase(selectedSession.sessionId)} disabled={uploadingToDatabase}>"
                },
                {
                    "type": "text",
                    "text": "+                    {uploadingToDatabase ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Database className=\"mr-2 h-4 w-4\" />}"
                },
                {
                    "type": "text",
                    "text": "+                    Upload to Database"
                },
                {
                    "type": "text",
                    "text": "+                  </Button>"
                },
                {
                    "type": "text",
                    "text": "+                )}"
                },
                {
                    "type": "text",
                    "text": "+              </div>"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+          )}"
                },
                {
                    "type": "text",
                    "text": "         </DialogContent>"
                },
                {
                    "type": "text",
                    "text": "       </Dialog>"
                },
                {
                    "type": "text",
                    "text": "Now let me create the NCERT Solutions page for users to view the uploaded solutions:"
                },
                {
                    "type": "text",
                    "text": "--- client/src/pages/NCERTSolutions.tsx"
                },
                {
                    "type": "text",
                    "text": "+++ client/src/pages/NCERTSolutions.tsx"
                },
                {
                    "type": "text",
                    "text": "@@ -0,0 +1,290 @@"
                },
                {
                    "type": "text",
                    "text": "+import React, { useState, useEffect } from 'react';"
                },
                {
                    "type": "text",
                    "text": "+import { useAuth } from '@/hooks/use-auth';"
                },
                {
                    "type": "text",
                    "text": "+import { useToast } from '@/hooks/use-toast';"
                },
                {
                    "type": "text",
                    "text": "+import config from '@/config/config';"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+import {"
                },
                {
                    "type": "text",
                    "text": "+  Card,"
                },
                {
                    "type": "text",
                    "text": "+  CardContent,"
                },
                {
                    "type": "text",
                    "text": "+  CardDescription,"
                },
                {
                    "type": "text",
                    "text": "+  CardFooter,"
                },
                {
                    "type": "text",
                    "text": "+  CardHeader,"
                },
                {
                    "type": "text",
                    "text": "+  CardTitle,"
                },
                {
                    "type": "text",
                    "text": "+} from \"@/components/ui/card\";"
                },
                {
                    "type": "text",
                    "text": "+import {"
                },
                {
                    "type": "text",
                    "text": "+  Select,"
                },
                {
                    "type": "text",
                    "text": "+  SelectContent,"
                },
                {
                    "type": "text",
                    "text": "+  SelectItem,"
                },
                {
                    "type": "text",
                    "text": "+  SelectTrigger,"
                },
                {
                    "type": "text",
                    "text": "+  SelectValue,"
                },
                {
                    "type": "text",
                    "text": "+} from \"@/components/ui/select\";"
                },
                {
                    "type": "text",
                    "text": "+import {"
                },
                {
                    "type": "text",
                    "text": "+  Accordion,"
                },
                {
                    "type": "text",
                    "text": "+  AccordionContent,"
                },
                {
                    "type": "text",
                    "text": "+  AccordionItem,"
                },
                {
                    "type": "text",
                    "text": "+  AccordionTrigger,"
                },
                {
                    "type": "text",
                    "text": "+} from \"@/components/ui/accordion\";"
                },
                {
                    "type": "text",
                    "text": "+import { Button } from '@/components/ui/button';"
                },
                {
                    "type": "text",
                    "text": "+import { Input } from '@/components/ui/input';"
                },
                {
                    "type": "text",
                    "text": "+import { Label } from '@/components/ui/label';"
                },
                {
                    "type": "text",
                    "text": "+import { Badge } from '@/components/ui/badge';"
                },
                {
                    "type": "text",
                    "text": "+import { Separator } from '@/components/ui/separator';"
                },
                {
                    "type": "text",
                    "text": "+import { Skeleton } from '@/components/ui/skeleton';"
                },
                {
                    "type": "text",
                    "text": "+import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+import {"
                },
                {
                    "type": "text",
                    "text": "+  Book,"
                },
                {
                    "type": "text",
                    "text": "+  BookOpen,"
                },
                {
                    "type": "text",
                    "text": "+  Search,"
                },
                {
                    "type": "text",
                    "text": "+  Filter,"
                },
                {
                    "type": "text",
                    "text": "+  Loader2,"
                },
                {
                    "type": "text",
                    "text": "+  ChevronRight,"
                },
                {
                    "type": "text",
                    "text": "+  Brain,"
                },
                {
                    "type": "text",
                    "text": "+  Sparkles,"
                },
                {
                    "type": "text",
                    "text": "+  Lock,"
                },
                {
                    "type": "text",
                    "text": "+} from 'lucide-react';"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+interface NCERTSolution {"
                },
                {
                    "type": "text",
                    "text": "+  id: string;"
                },
                {
                    "type": "text",
                    "text": "+  board: string;"
                },
                {
                    "type": "text",
                    "text": "+  class: number;"
                },
                {
                    "type": "text",
                    "text": "+  subject: string;"
                },
                {
                    "type": "text",
                    "text": "+  chapter: string;"
                },
                {
                    "type": "text",
                    "text": "+  questionNumber: number;"
                },
                {
                    "type": "text",
                    "text": "+  question: string;"
                },
                {
                    "type": "text",
                    "text": "+  answer: string;"
                },
                {
                    "type": "text",
                    "text": "+  difficulty?: 'easy' | 'medium' | 'hard';"
                },
                {
                    "type": "text",
                    "text": "+  tags?: string[];"
                },
                {
                    "type": "text",
                    "text": "+  views: number;"
                },
                {
                    "type": "text",
                    "text": "+  likes: number;"
                },
                {
                    "type": "text",
                    "text": "+}"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+const NCERTSolutions: React.FC = () => {"
                },
                {
                    "type": "text",
                    "text": "+  const { user } = useAuth();"
                },
                {
                    "type": "text",
                    "text": "+  const { toast } = useToast();"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Filter state"
                },
                {
                    "type": "text",
                    "text": "+  const [filters, setFilters] = useState({"
                },
                {
                    "type": "text",
                    "text": "+    board: '',"
                },
                {
                    "type": "text",
                    "text": "+    class: '',"
                },
                {
                    "type": "text",
                    "text": "+    subject: '',"
                },
                {
                    "type": "text",
                    "text": "+    chapter: '',"
                },
                {
                    "type": "text",
                    "text": "+  });"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Data state"
                },
                {
                    "type": "text",
                    "text": "+  const [solutions, setSolutions] = useState<NCERTSolution[]>([]);"
                },
                {
                    "type": "text",
                    "text": "+  const [loading, setLoading] = useState(false);"
                },
                {
                    "type": "text",
                    "text": "+  const [chapters, setChapters] = useState<string[]>([]);"
                },
                {
                    "type": "text",
                    "text": "+  const [subjects, setSubjects] = useState<string[]>([]);"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // AI explanation state"
                },
                {
                    "type": "text",
                    "text": "+  const [aiExplanations, setAiExplanations] = useState<Record<string, string>>({});"
                },
                {
                    "type": "text",
                    "text": "+  const [loadingExplanation, setLoadingExplanation] = useState<Record<string, boolean>>({});"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Fetch solutions based on filters"
                },
                {
                    "type": "text",
                    "text": "+  const fetchSolutions = async () => {"
                },
                {
                    "type": "text",
                    "text": "+    if (!filters.board || !filters.class || !filters.subject) {"
                },
                {
                    "type": "text",
                    "text": "+      return;"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    setLoading(true);"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    try {"
                },
                {
                    "type": "text",
                    "text": "+      const queryParams = new URLSearchParams({"
                },
                {
                    "type": "text",
                    "text": "+        board: filters.board,"
                },
                {
                    "type": "text",
                    "text": "+        class: filters.class,"
                },
                {
                    "type": "text",
                    "text": "+        subject: filters.subject,"
                },
                {
                    "type": "text",
                    "text": "+        ...(filters.chapter && { chapter: filters.chapter }),"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      const response = await fetch(`${config.apiUrl}/api/ncert-solutions?${queryParams}`);"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      if (!response.ok) {"
                },
                {
                    "type": "text",
                    "text": "+        throw new Error('Failed to fetch solutions');"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      const data = await response.json();"
                },
                {
                    "type": "text",
                    "text": "+      setSolutions(data.solutions || []);"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      // Extract unique chapters if not already filtered by chapter"
                },
                {
                    "type": "text",
                    "text": "+      if (!filters.chapter) {"
                },
                {
                    "type": "text",
                    "text": "+        const uniqueChapters = [...new Set(data.solutions.map((s: NCERTSolution) => s.chapter))];"
                },
                {
                    "type": "text",
                    "text": "+        setChapters(uniqueChapters);"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+    } catch (error) {"
                },
                {
                    "type": "text",
                    "text": "+      console.error('Error fetching solutions:', error);"
                },
                {
                    "type": "text",
                    "text": "+      toast({"
                },
                {
                    "type": "text",
                    "text": "+        title: \"Error\","
                },
                {
                    "type": "text",
                    "text": "+        description: \"Failed to fetch NCERT solutions\","
                },
                {
                    "type": "text",
                    "text": "+        variant: \"destructive\","
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+    } finally {"
                },
                {
                    "type": "text",
                    "text": "+      setLoading(false);"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+  };"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Fetch subjects for selected board and class"
                },
                {
                    "type": "text",
                    "text": "+  const fetchSubjects = async () => {"
                },
                {
                    "type": "text",
                    "text": "+    if (!filters.board || !filters.class) {"
                },
                {
                    "type": "text",
                    "text": "+      setSubjects([]);"
                },
                {
                    "type": "text",
                    "text": "+      return;"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    try {"
                },
                {
                    "type": "text",
                    "text": "+      const queryParams = new URLSearchParams({"
                },
                {
                    "type": "text",
                    "text": "+        board: filters.board,"
                },
                {
                    "type": "text",
                    "text": "+        class: filters.class,"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      const response = await fetch(`${config.apiUrl}/api/ncert-solutions/subjects?${queryParams}`);"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      if (!response.ok) {"
                },
                {
                    "type": "text",
                    "text": "+        throw new Error('Failed to fetch subjects');"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      const data = await response.json();"
                },
                {
                    "type": "text",
                    "text": "+      setSubjects(data.subjects || []);"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+    } catch (error) {"
                },
                {
                    "type": "text",
                    "text": "+      console.error('Error fetching subjects:', error);"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+  };"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Get AI explanation for a question"
                },
                {
                    "type": "text",
                    "text": "+  const getAIExplanation = async (solutionId: string, question: string, answer: string) => {"
                },
                {
                    "type": "text",
                    "text": "+    if (aiExplanations[solutionId]) {"
                },
                {
                    "type": "text",
                    "text": "+      return; // Already have explanation"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    // Check if user has Pro/Goat subscription"
                },
                {
                    "type": "text",
                    "text": "+    if (!user || (user.subscription !== 'pro' && user.subscription !== 'goat')) {"
                },
                {
                    "type": "text",
                    "text": "+      toast({"
                },
                {
                    "type": "text",
                    "text": "+        title: \"Subscription Required\","
                },
                {
                    "type": "text",
                    "text": "+        description: \"AI explanations are available only for Pro and Goat users\","
                },
                {
                    "type": "text",
                    "text": "+        variant: \"default\","
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+      return;"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    setLoadingExplanation(prev => ({ ...prev, [solutionId]: true }));"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    try {"
                },
                {
                    "type": "text",
                    "text": "+      const response = await fetch(`${config.apiUrl}/api/ai/explain`, {"
                },
                {
                    "type": "text",
                    "text": "+        method: 'POST',"
                },
                {
                    "type": "text",
                    "text": "+        headers: {"
                },
                {
                    "type": "text",
                    "text": "+          'Content-Type': 'application/json',"
                },
                {
                    "type": "text",
                    "text": "+        },"
                },
                {
                    "type": "text",
                    "text": "+        body: JSON.stringify({"
                },
                {
                    "type": "text",
                    "text": "+          question,"
                },
                {
                    "type": "text",
                    "text": "+          answer,"
                },
                {
                    "type": "text",
                    "text": "+          userClass: filters.class,"
                },
                {
                    "type": "text",
                    "text": "+          subject: filters.subject,"
                },
                {
                    "type": "text",
                    "text": "+        }),"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      if (!response.ok) {"
                },
                {
                    "type": "text",
                    "text": "+        throw new Error('Failed to get AI explanation');"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      const data = await response.json();"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      setAiExplanations(prev => ({"
                },
                {
                    "type": "text",
                    "text": "+        ...prev,"
                },
                {
                    "type": "text",
                    "text": "+        [solutionId]: data.explanation,"
                },
                {
                    "type": "text",
                    "text": "+      }));"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+    } catch (error) {"
                },
                {
                    "type": "text",
                    "text": "+      console.error('Error getting AI explanation:', error);"
                },
                {
                    "type": "text",
                    "text": "+      toast({"
                },
                {
                    "type": "text",
                    "text": "+        title: \"Error\","
                },
                {
                    "type": "text",
                    "text": "+        description: \"Failed to get AI explanation\","
                },
                {
                    "type": "text",
                    "text": "+        variant: \"destructive\","
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+    } finally {"
                },
                {
                    "type": "text",
                    "text": "+      setLoadingExplanation(prev => ({ ...prev, [solutionId]: false }));"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+  };"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Effect to fetch subjects when board or class changes"
                },
                {
                    "type": "text",
                    "text": "+  useEffect(() => {"
                },
                {
                    "type": "text",
                    "text": "+    fetchSubjects();"
                },
                {
                    "type": "text",
                    "text": "+    // Reset subject and chapter when board or class changes"
                },
                {
                    "type": "text",
                    "text": "+    setFilters(prev => ({ ...prev, subject: '', chapter: '' }));"
                },
                {
                    "type": "text",
                    "text": "+  }, [filters.board, filters.class]);"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  // Effect to fetch solutions when filters change"
                },
                {
                    "type": "text",
                    "text": "+  useEffect(() => {"
                },
                {
                    "type": "text",
                    "text": "+    if (filters.board && filters.class && filters.subject) {"
                },
                {
                    "type": "text",
                    "text": "+      fetchSolutions();"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+  }, [filters.board, filters.class, filters.subject, filters.chapter]);"
                },
                {
                    "type": "text",
                    "text": "+  "
                },
                {
                    "type": "text",
                    "text": "+  return ("
                },
                {
                    "type": "text",
                    "text": "+    <div className=\"container mx-auto py-6 space-y-6\">"
                },
                {
                    "type": "text",
                    "text": "+      <div className=\"flex flex-col space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+        <h1 className=\"text-3xl font-bold tracking-tight flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+          <BookOpen className=\"h-8 w-8\" />"
                },
                {
                    "type": "text",
                    "text": "+          NCERT Solutions"
                },
                {
                    "type": "text",
                    "text": "+        </h1>"
                },
                {
                    "type": "text",
                    "text": "+        <p className=\"text-muted-foreground\">"
                },
                {
                    "type": "text",
                    "text": "+          Access comprehensive NCERT solutions for all subjects and classes"
                },
                {
                    "type": "text",
                    "text": "+        </p>"
                },
                {
                    "type": "text",
                    "text": "+      </div>"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      {/* Filters */}"
                },
                {
                    "type": "text",
                    "text": "+      <Card>"
                },
                {
                    "type": "text",
                    "text": "+        <CardHeader>"
                },
                {
                    "type": "text",
                    "text": "+          <CardTitle className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+            <Filter className=\"h-5 w-5\" />"
                },
                {
                    "type": "text",
                    "text": "+            Select Filters"
                },
                {
                    "type": "text",
                    "text": "+          </CardTitle>"
                },
                {
                    "type": "text",
                    "text": "+          <CardDescription>"
                },
                {
                    "type": "text",
                    "text": "+            Choose your board, class, subject, and chapter to find solutions"
                },
                {
                    "type": "text",
                    "text": "+          </CardDescription>"
                },
                {
                    "type": "text",
                    "text": "+        </CardHeader>"
                },
                {
                    "type": "text",
                    "text": "+        <CardContent>"
                },
                {
                    "type": "text",
                    "text": "+          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">"
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+              <Label htmlFor=\"board\">Board</Label>"
                },
                {
                    "type": "text",
                    "text": "+              <Select"
                },
                {
                    "type": "text",
                    "text": "+                value={filters.board}"
                },
                {
                    "type": "text",
                    "text": "+                onValueChange={(value) => setFilters({...filters, board: value})}"
                },
                {
                    "type": "text",
                    "text": "+              >"
                },
                {
                    "type": "text",
                    "text": "+                <SelectTrigger id=\"board\">"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectValue placeholder=\"Select Board\" />"
                },
                {
                    "type": "text",
                    "text": "+                </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectItem value=\"CBSE\">CBSE</SelectItem>"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750419835987,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <div className=\"border rounded-md\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <Table>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <TableHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <TableRow>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <TableHead className=\"w-[80px]\">#</TableHead>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <TableHead className=\"w-[40%]\">Question</TableHead>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <TableHead>Answer</TableHead>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </TableRow>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </TableHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <TableBody>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {selectedSession.qaPairs.map((pair, index) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <TableRow key={index}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <TableCell className=\"font-medium\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          {pair.questionNumber || index + 1}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        </TableCell>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <TableCell className=\"align-top\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <div className=\"max-h-[200px] overflow-y-auto\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            {pair.question}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        </TableCell>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <TableCell className=\"align-top\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <div className=\"max-h-[200px] overflow-y-auto\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            {pair.answer}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        </TableCell>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </TableRow>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    ))}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </TableBody>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </Table>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <div className=\"flex justify-end gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <Button variant=\"outline\" onClick={() => setIsReviewDialogOpen(false)}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  Close"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                {selectedSession.status === 'pending_review' && ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Button onClick={() => handleUploadToDatabase(selectedSession.sessionId)} disabled={uploadingToDatabase}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {uploadingToDatabase ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Database className=\"mr-2 h-4 w-4\" />}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    Upload to Database"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "         </DialogContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "       </Dialog>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Now let me create the NCERT Solutions page for users to view the uploaded solutions:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- client/src/pages/NCERTSolutions.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ client/src/pages/NCERTSolutions.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -0,0 +1,290 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import React, { useState, useEffect } from 'react';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { useAuth } from '@/hooks/use-auth';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { useToast } from '@/hooks/use-toast';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import config from '@/config/config';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Card,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  CardContent,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  CardDescription,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  CardFooter,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  CardHeader,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  CardTitle,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+} from \"@/components/ui/card\";"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Select,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  SelectContent,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  SelectItem,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  SelectTrigger,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  SelectValue,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+} from \"@/components/ui/select\";"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Accordion,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  AccordionContent,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  AccordionItem,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  AccordionTrigger,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+} from \"@/components/ui/accordion\";"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Button } from '@/components/ui/button';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Input } from '@/components/ui/input';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Label } from '@/components/ui/label';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Badge } from '@/components/ui/badge';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Separator } from '@/components/ui/separator';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Skeleton } from '@/components/ui/skeleton';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Book,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  BookOpen,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Search,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Filter,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Loader2,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  ChevronRight,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Brain,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Sparkles,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  Lock,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+} from 'lucide-react';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+interface NCERTSolution {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  id: string;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  board: string;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  class: number;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  subject: string;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  chapter: string;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  questionNumber: number;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  question: string;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  answer: string;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  difficulty?: 'easy' | 'medium' | 'hard';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  tags?: string[];"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  views: number;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  likes: number;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+const NCERTSolutions: React.FC = () => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const { user } = useAuth();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const { toast } = useToast();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Filter state"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [filters, setFilters] = useState({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    board: '',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    class: '',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    subject: '',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    chapter: '',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Data state"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [solutions, setSolutions] = useState<NCERTSolution[]>([]);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [loading, setLoading] = useState(false);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [chapters, setChapters] = useState<string[]>([]);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [subjects, setSubjects] = useState<string[]>([]);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // AI explanation state"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [aiExplanations, setAiExplanations] = useState<Record<string, string>>({});"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const [loadingExplanation, setLoadingExplanation] = useState<Record<string, boolean>>({});"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Fetch solutions based on filters"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const fetchSolutions = async () => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!filters.board || !filters.class || !filters.subject) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    setLoading(true);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    try {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const queryParams = new URLSearchParams({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        board: filters.board,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        class: filters.class,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        subject: filters.subject,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        ...(filters.chapter && { chapter: filters.chapter }),"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const response = await fetch(`${config.apiUrl}/api/ncert-solutions?${queryParams}`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      if (!response.ok) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        throw new Error('Failed to fetch solutions');"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const data = await response.json();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      setSolutions(data.solutions || []);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      // Extract unique chapters if not already filtered by chapter"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      if (!filters.chapter) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        const uniqueChapters = [...new Set(data.solutions.map((s: NCERTSolution) => s.chapter))];"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        setChapters(uniqueChapters);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    } catch (error) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      console.error('Error fetching solutions:', error);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      toast({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        title: \"Error\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        description: \"Failed to fetch NCERT solutions\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        variant: \"destructive\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    } finally {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      setLoading(false);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  };"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Fetch subjects for selected board and class"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const fetchSubjects = async () => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!filters.board || !filters.class) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      setSubjects([]);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    try {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const queryParams = new URLSearchParams({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        board: filters.board,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        class: filters.class,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const response = await fetch(`${config.apiUrl}/api/ncert-solutions/subjects?${queryParams}`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      if (!response.ok) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        throw new Error('Failed to fetch subjects');"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const data = await response.json();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      setSubjects(data.subjects || []);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    } catch (error) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      console.error('Error fetching subjects:', error);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  };"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Get AI explanation for a question"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  const getAIExplanation = async (solutionId: string, question: string, answer: string) => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (aiExplanations[solutionId]) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return; // Already have explanation"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Check if user has Pro/Goat subscription"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!user || (user.subscription !== 'pro' && user.subscription !== 'goat')) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      toast({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        title: \"Subscription Required\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        description: \"AI explanations are available only for Pro and Goat users\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        variant: \"default\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    setLoadingExplanation(prev => ({ ...prev, [solutionId]: true }));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    try {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const response = await fetch(`${config.apiUrl}/api/ai/explain`, {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        method: 'POST',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        headers: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          'Content-Type': 'application/json',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        body: JSON.stringify({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          question,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          answer,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          userClass: filters.class,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          subject: filters.subject,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        }),"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      if (!response.ok) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        throw new Error('Failed to get AI explanation');"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const data = await response.json();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      setAiExplanations(prev => ({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        ...prev,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        [solutionId]: data.explanation,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    } catch (error) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      console.error('Error getting AI explanation:', error);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      toast({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        title: \"Error\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        description: \"Failed to get AI explanation\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        variant: \"destructive\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    } finally {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      setLoadingExplanation(prev => ({ ...prev, [solutionId]: false }));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  };"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Effect to fetch subjects when board or class changes"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  useEffect(() => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    fetchSubjects();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Reset subject and chapter when board or class changes"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    setFilters(prev => ({ ...prev, subject: '', chapter: '' }));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }, [filters.board, filters.class]);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  // Effect to fetch solutions when filters change"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  useEffect(() => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (filters.board && filters.class && filters.subject) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      fetchSolutions();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }, [filters.board, filters.class, filters.subject, filters.chapter]);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  return ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    <div className=\"container mx-auto py-6 space-y-6\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      <div className=\"flex flex-col space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <h1 className=\"text-3xl font-bold tracking-tight flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <BookOpen className=\"h-8 w-8\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          NCERT Solutions"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </h1>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <p className=\"text-muted-foreground\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          Access comprehensive NCERT solutions for all subjects and classes"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      {/* Filters */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      <Card>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <CardHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <CardTitle className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <Filter className=\"h-5 w-5\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            Select Filters"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </CardTitle>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <CardDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            Choose your board, class, subject, and chapter to find solutions"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </CardDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </CardHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <CardContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Label htmlFor=\"board\">Board</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                value={filters.board}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                onValueChange={(value) => setFilters({...filters, board: value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectTrigger id=\"board\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectValue placeholder=\"Select Board\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectItem value=\"CBSE\">CBSE</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph"
                    }
                ]
            }
        },
        {
            "id": "f79ff6c7-18f3-4a9f-abb5-ae186f70f864",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "+                  <SelectItem value=\"ICSE\">ICSE</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectItem value=\"State\">State Board</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+              </Select>"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+            "
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+              <Label htmlFor=\"class\">Class</Label>"
                },
                {
                    "type": "text",
                    "text": "+              <Select"
                },
                {
                    "type": "text",
                    "text": "+                value={filters.class}"
                },
                {
                    "type": "text",
                    "text": "+                onValueChange={(value) => setFilters({...filters, class: value})}"
                },
                {
                    "type": "text",
                    "text": "+                disabled={!filters.board}"
                },
                {
                    "type": "text",
                    "text": "+              >"
                },
                {
                    "type": "text",
                    "text": "+                <SelectTrigger id=\"class\">"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectValue placeholder=\"Select Class\" />"
                },
                {
                    "type": "text",
                    "text": "+                </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                  {[...Array(12)].map((_, i) => ("
                },
                {
                    "type": "text",
                    "text": "+                    <SelectItem key={i + 1} value={(i + 1).toString()}>"
                },
                {
                    "type": "text",
                    "text": "+                      Class {i + 1}"
                },
                {
                    "type": "text",
                    "text": "+                    </SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                  ))}"
                },
                {
                    "type": "text",
                    "text": "+                </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+              </Select>"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+            "
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+              <Label htmlFor=\"subject\">Subject</Label>"
                },
                {
                    "type": "text",
                    "text": "+              <Select"
                },
                {
                    "type": "text",
                    "text": "+                value={filters.subject}"
                },
                {
                    "type": "text",
                    "text": "+                onValueChange={(value) => setFilters({...filters, subject: value, chapter: ''})}"
                },
                {
                    "type": "text",
                    "text": "+                disabled={!filters.board || !filters.class || subjects.length === 0}"
                },
                {
                    "type": "text",
                    "text": "+              >"
                },
                {
                    "type": "text",
                    "text": "+                <SelectTrigger id=\"subject\">"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectValue placeholder=\"Select Subject\" />"
                },
                {
                    "type": "text",
                    "text": "+                </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                  {subjects.length > 0 ? ("
                },
                {
                    "type": "text",
                    "text": "+                    subjects.map((subject) => ("
                },
                {
                    "type": "text",
                    "text": "+                      <SelectItem key={subject} value={subject}>"
                },
                {
                    "type": "text",
                    "text": "+                        {subject}"
                },
                {
                    "type": "text",
                    "text": "+                      </SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                    ))"
                },
                {
                    "type": "text",
                    "text": "+                  ) : ("
                },
                {
                    "type": "text",
                    "text": "+                    <SelectItem value=\"\" disabled>"
                },
                {
                    "type": "text",
                    "text": "+                      No subjects available"
                },
                {
                    "type": "text",
                    "text": "+                    </SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                  )}"
                },
                {
                    "type": "text",
                    "text": "+                </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+              </Select>"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+            "
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+              <Label htmlFor=\"chapter\">Chapter (Optional)</Label>"
                },
                {
                    "type": "text",
                    "text": "+              <Select"
                },
                {
                    "type": "text",
                    "text": "+                value={filters.chapter}"
                },
                {
                    "type": "text",
                    "text": "+                onValueChange={(value) => setFilters({...filters, chapter: value})}"
                },
                {
                    "type": "text",
                    "text": "+                disabled={!filters.board || !filters.class || !filters.subject || chapters.length === 0}"
                },
                {
                    "type": "text",
                    "text": "+              >"
                },
                {
                    "type": "text",
                    "text": "+                <SelectTrigger id=\"chapter\">"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectValue placeholder=\"All Chapters\" />"
                },
                {
                    "type": "text",
                    "text": "+                </SelectTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                <SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+                  <SelectItem value=\"\">All Chapters</SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                  {chapters.map((chapter) => ("
                },
                {
                    "type": "text",
                    "text": "+                    <SelectItem key={chapter} value={chapter}>"
                },
                {
                    "type": "text",
                    "text": "+                      {chapter}"
                },
                {
                    "type": "text",
                    "text": "+                    </SelectItem>"
                },
                {
                    "type": "text",
                    "text": "+                  ))}"
                },
                {
                    "type": "text",
                    "text": "+                </SelectContent>"
                },
                {
                    "type": "text",
                    "text": "+              </Select>"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+          </div>"
                },
                {
                    "type": "text",
                    "text": "+        </CardContent>"
                },
                {
                    "type": "text",
                    "text": "+      </Card>"
                },
                {
                    "type": "text",
                    "text": "+      "
                },
                {
                    "type": "text",
                    "text": "+      {/* Solutions */}"
                },
                {
                    "type": "text",
                    "text": "+      <Card>"
                },
                {
                    "type": "text",
                    "text": "+        <CardHeader>"
                },
                {
                    "type": "text",
                    "text": "+          <CardTitle className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+            <Book className=\"h-5 w-5\" />"
                },
                {
                    "type": "text",
                    "text": "+            {loading ? 'Loading Solutions...' : "
                },
                {
                    "type": "text",
                    "text": "+              solutions.length > 0 ? `${solutions.length} Solutions Found` : 'NCERT Solutions'}"
                },
                {
                    "type": "text",
                    "text": "+          </CardTitle>"
                },
                {
                    "type": "text",
                    "text": "+          <CardDescription>"
                },
                {
                    "type": "text",
                    "text": "+            {filters.board && filters.class && filters.subject ? "
                },
                {
                    "type": "text",
                    "text": "+              `${filters.board} | Class ${filters.class} | ${filters.subject}${filters.chapter ? ` | ${filters.chapter}` : ''}` : "
                },
                {
                    "type": "text",
                    "text": "+              'Select filters to view solutions'}"
                },
                {
                    "type": "text",
                    "text": "+          </CardDescription>"
                },
                {
                    "type": "text",
                    "text": "+        </CardHeader>"
                },
                {
                    "type": "text",
                    "text": "+        <CardContent>"
                },
                {
                    "type": "text",
                    "text": "+          {loading ? ("
                },
                {
                    "type": "text",
                    "text": "+            // Loading skeletons"
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"space-y-4\">"
                },
                {
                    "type": "text",
                    "text": "+              {[...Array(5)].map((_, i) => ("
                },
                {
                    "type": "text",
                    "text": "+                <div key={i} className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <Skeleton className=\"h-6 w-full max-w-[80%]\" />"
                },
                {
                    "type": "text",
                    "text": "+                  <Skeleton className=\"h-24 w-full\" />"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+              ))}"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+          ) : solutions.length > 0 ? ("
                },
                {
                    "type": "text",
                    "text": "+            <Accordion type=\"single\" collapsible className=\"w-full\">"
                },
                {
                    "type": "text",
                    "text": "+              {solutions.map((solution) => ("
                },
                {
                    "type": "text",
                    "text": "+                <AccordionItem key={solution.id} value={solution.id}>"
                },
                {
                    "type": "text",
                    "text": "+                  <AccordionTrigger className=\"text-left\">"
                },
                {
                    "type": "text",
                    "text": "+                    <div className=\"flex flex-col gap-1\">"
                },
                {
                    "type": "text",
                    "text": "+                      <div className=\"font-medium\">"
                },
                {
                    "type": "text",
                    "text": "+                        Q{solution.questionNumber}: {solution.question}"
                },
                {
                    "type": "text",
                    "text": "+                      </div>"
                },
                {
                    "type": "text",
                    "text": "+                      <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">"
                },
                {
                    "type": "text",
                    "text": "+                        <Badge variant=\"outline\" className=\"text-xs\">"
                },
                {
                    "type": "text",
                    "text": "+                          {solution.chapter}"
                },
                {
                    "type": "text",
                    "text": "+                        </Badge>"
                },
                {
                    "type": "text",
                    "text": "+                        {solution.difficulty && ("
                },
                {
                    "type": "text",
                    "text": "+                          <Badge variant={"
                },
                {
                    "type": "text",
                    "text": "+                            solution.difficulty === 'easy' ? 'secondary' :"
                },
                {
                    "type": "text",
                    "text": "+                            solution.difficulty === 'medium' ? 'default' : 'destructive'"
                },
                {
                    "type": "text",
                    "text": "+                          } className=\"text-xs\">"
                },
                {
                    "type": "text",
                    "text": "+                            {solution.difficulty}"
                },
                {
                    "type": "text",
                    "text": "+                          </Badge>"
                },
                {
                    "type": "text",
                    "text": "+                        )}"
                },
                {
                    "type": "text",
                    "text": "+                      </div>"
                },
                {
                    "type": "text",
                    "text": "+                    </div>"
                },
                {
                    "type": "text",
                    "text": "+                  </AccordionTrigger>"
                },
                {
                    "type": "text",
                    "text": "+                  <AccordionContent className=\"space-y-4\">"
                },
                {
                    "type": "text",
                    "text": "+                    <div className=\"rounded-md bg-muted p-4\">"
                },
                {
                    "type": "text",
                    "text": "+                      <h4 className=\"font-medium mb-2\">Answer:</h4>"
                },
                {
                    "type": "text",
                    "text": "+                      <div className=\"whitespace-pre-line\">{solution.answer}</div>"
                },
                {
                    "type": "text",
                    "text": "+                    </div>"
                },
                {
                    "type": "text",
                    "text": "+                    "
                },
                {
                    "type": "text",
                    "text": "+                    {/* AI Explanation Button - Only for Pro/Goat users */}"
                },
                {
                    "type": "text",
                    "text": "+                    {(user?.subscription === 'pro' || user?.subscription === 'goat') ? ("
                },
                {
                    "type": "text",
                    "text": "+                      <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                        {!aiExplanations[solution.id] ? ("
                },
                {
                    "type": "text",
                    "text": "+                          <Button "
                },
                {
                    "type": "text",
                    "text": "+                            variant=\"outline\" "
                },
                {
                    "type": "text",
                    "text": "+                            className=\"w-full\""
                },
                {
                    "type": "text",
                    "text": "+                            onClick={() => getAIExplanation(solution.id, solution.question, solution.answer)}"
                },
                {
                    "type": "text",
                    "text": "+                            disabled={loadingExplanation[solution.id]}"
                },
                {
                    "type": "text",
                    "text": "+                          >"
                },
                {
                    "type": "text",
                    "text": "+                            {loadingExplanation[solution.id] ? ("
                },
                {
                    "type": "text",
                    "text": "+                              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />"
                },
                {
                    "type": "text",
                    "text": "+                            ) : ("
                },
                {
                    "type": "text",
                    "text": "+                              <Brain className=\"mr-2 h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+                            )}"
                },
                {
                    "type": "text",
                    "text": "+                            Get AI Help 🧠✨"
                },
                {
                    "type": "text",
                    "text": "+                          </Button>"
                },
                {
                    "type": "text",
                    "text": "+                        ) : ("
                },
                {
                    "type": "text",
                    "text": "+                          <div className=\"rounded-md bg-secondary/20 p-4 border border-secondary\">"
                },
                {
                    "type": "text",
                    "text": "+                            <h4 className=\"font-medium mb-2 flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+                              <Sparkles className=\"h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+                              AI Explanation:"
                },
                {
                    "type": "text",
                    "text": "+                            </h4>"
                },
                {
                    "type": "text",
                    "text": "+                            <div className=\"whitespace-pre-line\">{aiExplanations[solution.id]}</div>"
                },
                {
                    "type": "text",
                    "text": "+                          </div>"
                },
                {
                    "type": "text",
                    "text": "+                        )}"
                },
                {
                    "type": "text",
                    "text": "+                      </div>"
                },
                {
                    "type": "text",
                    "text": "+                    ) : ("
                },
                {
                    "type": "text",
                    "text": "+                      <div className=\"rounded-md bg-muted p-4 flex items-center justify-between\">"
                },
                {
                    "type": "text",
                    "text": "+                        <div className=\"flex items-center gap-2\">"
                },
                {
                    "type": "text",
                    "text": "+                          <Lock className=\"h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+                          <span>AI explanations are available for Pro and Goat users</span>"
                },
                {
                    "type": "text",
                    "text": "+                        </div>"
                },
                {
                    "type": "text",
                    "text": "+                        <Button size=\"sm\" variant=\"secondary\">"
                },
                {
                    "type": "text",
                    "text": "+                          Upgrade"
                },
                {
                    "type": "text",
                    "text": "+                        </Button>"
                },
                {
                    "type": "text",
                    "text": "+                      </div>"
                },
                {
                    "type": "text",
                    "text": "+                    )}"
                },
                {
                    "type": "text",
                    "text": "+                  </AccordionContent>"
                },
                {
                    "type": "text",
                    "text": "+                </AccordionItem>"
                },
                {
                    "type": "text",
                    "text": "+              ))}"
                },
                {
                    "type": "text",
                    "text": "+            </Accordion>"
                },
                {
                    "type": "text",
                    "text": "+          ) : ("
                },
                {
                    "type": "text",
                    "text": "+            <div className=\"text-center py-8\">"
                },
                {
                    "type": "text",
                    "text": "+              {filters.board && filters.class && filters.subject ? ("
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <p>No solutions found for the selected filters.</p>"
                },
                {
                    "type": "text",
                    "text": "+                  <p className=\"text-muted-foreground\">Try selecting different filters or check back later.</p>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+              ) : ("
                },
                {
                    "type": "text",
                    "text": "+                <div className=\"space-y-2\">"
                },
                {
                    "type": "text",
                    "text": "+                  <p>Select board, class, and subject to view solutions.</p>"
                },
                {
                    "type": "text",
                    "text": "+                  <p className=\"text-muted-foreground\">NCERT solutions will appear here.</p>"
                },
                {
                    "type": "text",
                    "text": "+                </div>"
                },
                {
                    "type": "text",
                    "text": "+              )}"
                },
                {
                    "type": "text",
                    "text": "+            </div>"
                },
                {
                    "type": "text",
                    "text": "+          )}"
                },
                {
                    "type": "text",
                    "text": "+        </CardContent>"
                },
                {
                    "type": "text",
                    "text": "+      </Card>"
                },
                {
                    "type": "text",
                    "text": "+    </div>"
                },
                {
                    "type": "text",
                    "text": "+  );"
                },
                {
                    "type": "text",
                    "text": "+};"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+export default NCERTSolutions;"
                },
                {
                    "type": "text",
                    "text": "Now let me create the API endpoint for fetching NCERT solutions:"
                },
                {
                    "type": "text",
                    "text": "--- api/ncert-solutions.js"
                },
                {
                    "type": "text",
                    "text": "+++ api/ncert-solutions.js"
                },
                {
                    "type": "text",
                    "text": "@@ -0,0 +1,142 @@"
                },
                {
                    "type": "text",
                    "text": "+// NCERT Solutions API - Handles fetching solutions from the database"
                },
                {
                    "type": "text",
                    "text": "+import { handleCors } from '../utils/cors.js';"
                },
                {
                    "type": "text",
                    "text": "+import { initializeFirebaseAdmin, getFirestoreAdminDb } from '../utils/firebase-admin.js';"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+// Get NCERT solutions based on filters"
                },
                {
                    "type": "text",
                    "text": "+async function getSolutions(req, res) {"
                },
                {
                    "type": "text",
                    "text": "+  if (req.method !== 'GET') {"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(405).json({ message: 'Method not allowed' });"
                },
                {
                    "type": "text",
                    "text": "+  }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+  try {"
                },
                {
                    "type": "text",
                    "text": "+    initializeFirebaseAdmin();"
                },
                {
                    "type": "text",
                    "text": "+    const db = getFirestoreAdminDb();"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    const { board, class: className, subject, chapter } = req.query;"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Validate required parameters"
                },
                {
                    "type": "text",
                    "text": "+    if (!board || !className || !subject) {"
                },
                {
                    "type": "text",
                    "text": "+      return res.status(400).json({"
                },
                {
                    "type": "text",
                    "text": "+        success: false,"
                },
                {
                    "type": "text",
                    "text": "+        message: 'Missing required parameters: board, class, and subject are required'"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    console.log(`🔍 Fetching NCERT solutions: ${board} | Class ${className} | ${subject}${chapter ? ` | ${chapter}` : ''}`);"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Build query"
                },
                {
                    "type": "text",
                    "text": "+    let query = db.collection('ncert_solutions')"
                },
                {
                    "type": "text",
                    "text": "+      .where('board', '==', board)"
                },
                {
                    "type": "text",
                    "text": "+      .where('class', '==', parseInt(className))"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750419926066,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectItem value=\"ICSE\">ICSE</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectItem value=\"State\">State Board</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Label htmlFor=\"class\">Class</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                value={filters.class}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                onValueChange={(value) => setFilters({...filters, class: value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                disabled={!filters.board}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectTrigger id=\"class\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectValue placeholder=\"Select Class\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  {[...Array(12)].map((_, i) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <SelectItem key={i + 1} value={(i + 1).toString()}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      Class {i + 1}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  ))}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Label htmlFor=\"subject\">Subject</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                value={filters.subject}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                onValueChange={(value) => setFilters({...filters, subject: value, chapter: ''})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                disabled={!filters.board || !filters.class || subjects.length === 0}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectTrigger id=\"subject\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectValue placeholder=\"Select Subject\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  {subjects.length > 0 ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    subjects.map((subject) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <SelectItem key={subject} value={subject}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        {subject}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    ))"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <SelectItem value=\"\" disabled>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      No subjects available"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Label htmlFor=\"chapter\">Chapter (Optional)</Label>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <Select"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                value={filters.chapter}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                onValueChange={(value) => setFilters({...filters, chapter: value})}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                disabled={!filters.board || !filters.class || !filters.subject || chapters.length === 0}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectTrigger id=\"chapter\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectValue placeholder=\"All Chapters\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <SelectItem value=\"\">All Chapters</SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  {chapters.map((chapter) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <SelectItem key={chapter} value={chapter}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      {chapter}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </SelectItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  ))}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </SelectContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              </Select>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </CardContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      </Card>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      {/* Solutions */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      <Card>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <CardHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <CardTitle className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <Book className=\"h-5 w-5\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            {loading ? 'Loading Solutions...' : "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              solutions.length > 0 ? `${solutions.length} Solutions Found` : 'NCERT Solutions'}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </CardTitle>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <CardDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            {filters.board && filters.class && filters.subject ? "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              `${filters.board} | Class ${filters.class} | ${filters.subject}${filters.chapter ? ` | ${filters.chapter}` : ''}` : "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              'Select filters to view solutions'}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </CardDescription>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </CardHeader>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        <CardContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          {loading ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            // Loading skeletons"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"space-y-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              {[...Array(5)].map((_, i) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div key={i} className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Skeleton className=\"h-6 w-full max-w-[80%]\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <Skeleton className=\"h-24 w-full\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              ))}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          ) : solutions.length > 0 ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <Accordion type=\"single\" collapsible className=\"w-full\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              {solutions.map((solution) => ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <AccordionItem key={solution.id} value={solution.id}>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <AccordionTrigger className=\"text-left\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <div className=\"flex flex-col gap-1\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <div className=\"font-medium\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        Q{solution.questionNumber}: {solution.question}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <Badge variant=\"outline\" className=\"text-xs\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          {solution.chapter}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        </Badge>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        {solution.difficulty && ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <Badge variant={"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            solution.difficulty === 'easy' ? 'secondary' :"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            solution.difficulty === 'medium' ? 'default' : 'destructive'"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          } className=\"text-xs\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            {solution.difficulty}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          </Badge>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </AccordionTrigger>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <AccordionContent className=\"space-y-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    <div className=\"rounded-md bg-muted p-4\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <h4 className=\"font-medium mb-2\">Answer:</h4>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <div className=\"whitespace-pre-line\">{solution.answer}</div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {/* AI Explanation Button - Only for Pro/Goat users */}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    {(user?.subscription === 'pro' || user?.subscription === 'goat') ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        {!aiExplanations[solution.id] ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <Button "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            variant=\"outline\" "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            className=\"w-full\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            onClick={() => getAIExplanation(solution.id, solution.question, solution.answer)}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            disabled={loadingExplanation[solution.id]}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            {loadingExplanation[solution.id] ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                              <Brain className=\"mr-2 h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            Get AI Help 🧠✨"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <div className=\"rounded-md bg-secondary/20 p-4 border border-secondary\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            <h4 className=\"font-medium mb-2 flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                              <Sparkles className=\"h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                              AI Explanation:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            </h4>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                            <div className=\"whitespace-pre-line\">{aiExplanations[solution.id]}</div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      <div className=\"rounded-md bg-muted p-4 flex items-center justify-between\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <div className=\"flex items-center gap-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <Lock className=\"h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          <span>AI explanations are available for Pro and Goat users</span>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        <Button size=\"sm\" variant=\"secondary\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                          Upgrade"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                        </Button>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                      </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                    )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  </AccordionContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </AccordionItem>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              ))}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </Accordion>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <div className=\"text-center py-8\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              {filters.board && filters.class && filters.subject ? ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p>No solutions found for the selected filters.</p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p className=\"text-muted-foreground\">Try selecting different filters or check back later.</p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              ) : ("
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                <div className=\"space-y-2\">"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p>Select board, class, and subject to view solutions.</p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                  <p className=\"text-muted-foreground\">NCERT solutions will appear here.</p>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+                </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          )}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        </CardContent>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      </Card>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  );"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+};"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+export default NCERTSolutions;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Now let me create the API endpoint for fetching NCERT solutions:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- api/ncert-solutions.js"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ api/ncert-solutions.js"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -0,0 +1,142 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// NCERT Solutions API - Handles fetching solutions from the database"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { handleCors } from '../utils/cors.js';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { initializeFirebaseAdmin, getFirestoreAdminDb } from '../utils/firebase-admin.js';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// Get NCERT solutions based on filters"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+async function getSolutions(req, res) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  if (req.method !== 'GET') {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(405).json({ message: 'Method not allowed' });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  try {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    initializeFirebaseAdmin();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const db = getFirestoreAdminDb();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const { board, class: className, subject, chapter } = req.query;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Validate required parameters"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!board || !className || !subject) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return res.status(400).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        success: false,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        message: 'Missing required parameters: board, class, and subject are required'"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.log(`🔍 Fetching NCERT solutions: ${board} | Class ${className} | ${subject}${chapter ? ` | ${chapter}` : ''}`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Build query"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    let query = db.collection('ncert_solutions')"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('board', '==', board)"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('class', '==', parseInt(className))"
                            }
                        ]
                    },
                    {
                        "type": "paragraph"
                    }
                ]
            }
        },
        {
            "id": "f2855467-744f-4474-bd01-d5ee36e66420",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "+      .where('subject', '==', subject)"
                },
                {
                    "type": "text",
                    "text": "+      .where('isApproved', '==', true);"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    if (chapter) {"
                },
                {
                    "type": "text",
                    "text": "+      query = query.where('chapter', '==', chapter);"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Execute query"
                },
                {
                    "type": "text",
                    "text": "+    const snapshot = await query.get();"
                },
                {
                    "type": "text",
                    "text": "+    const solutions = [];"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    snapshot.forEach(doc => {"
                },
                {
                    "type": "text",
                    "text": "+      const data = doc.data();"
                },
                {
                    "type": "text",
                    "text": "+      solutions.push({"
                },
                {
                    "type": "text",
                    "text": "+        id: doc.id,"
                },
                {
                    "type": "text",
                    "text": "+        ...data,"
                },
                {
                    "type": "text",
                    "text": "+        createdAt: data.createdAt?.toDate?.()?.toISOString?.() || data.createdAt,"
                },
                {
                    "type": "text",
                    "text": "+        updatedAt: data.updatedAt?.toDate?.()?.toISOString?.() || data.updatedAt"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Sort solutions by chapter and question number"
                },
                {
                    "type": "text",
                    "text": "+    solutions.sort((a, b) => {"
                },
                {
                    "type": "text",
                    "text": "+      if (a.chapter !== b.chapter) {"
                },
                {
                    "type": "text",
                    "text": "+        return a.chapter.localeCompare(b.chapter);"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+      return a.questionNumber - b.questionNumber;"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    console.log(`✅ Found ${solutions.length} solutions`);"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(200).json({"
                },
                {
                    "type": "text",
                    "text": "+      success: true,"
                },
                {
                    "type": "text",
                    "text": "+      solutions,"
                },
                {
                    "type": "text",
                    "text": "+      totalCount: solutions.length,"
                },
                {
                    "type": "text",
                    "text": "+      filters: {"
                },
                {
                    "type": "text",
                    "text": "+        board,"
                },
                {
                    "type": "text",
                    "text": "+        class: className,"
                },
                {
                    "type": "text",
                    "text": "+        subject,"
                },
                {
                    "type": "text",
                    "text": "+        chapter: chapter || null"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+  } catch (error) {"
                },
                {
                    "type": "text",
                    "text": "+    console.error('❌ Get solutions error:', error);"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(500).json({"
                },
                {
                    "type": "text",
                    "text": "+      success: false,"
                },
                {
                    "type": "text",
                    "text": "+      message: 'Failed to get solutions',"
                },
                {
                    "type": "text",
                    "text": "+      error: error.message"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+  }"
                },
                {
                    "type": "text",
                    "text": "+}"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+// Get available subjects for a board and class"
                },
                {
                    "type": "text",
                    "text": "+async function getSubjects(req, res) {"
                },
                {
                    "type": "text",
                    "text": "+  if (req.method !== 'GET') {"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(405).json({ message: 'Method not allowed' });"
                },
                {
                    "type": "text",
                    "text": "+  }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+  try {"
                },
                {
                    "type": "text",
                    "text": "+    initializeFirebaseAdmin();"
                },
                {
                    "type": "text",
                    "text": "+    const db = getFirestoreAdminDb();"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    const { board, class: className } = req.query;"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    if (!board || !className) {"
                },
                {
                    "type": "text",
                    "text": "+      return res.status(400).json({"
                },
                {
                    "type": "text",
                    "text": "+        success: false,"
                },
                {
                    "type": "text",
                    "text": "+        message: 'Missing required parameters: board and class are required'"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Get all approved solutions for the board and class"
                },
                {
                    "type": "text",
                    "text": "+    const snapshot = await db.collection('ncert_solutions')"
                },
                {
                    "type": "text",
                    "text": "+      .where('board', '==', board)"
                },
                {
                    "type": "text",
                    "text": "+      .where('class', '==', parseInt(className))"
                },
                {
                    "type": "text",
                    "text": "+      .where('isApproved', '==', true)"
                },
                {
                    "type": "text",
                    "text": "+      .get();"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Extract unique subjects"
                },
                {
                    "type": "text",
                    "text": "+    const subjectsSet = new Set();"
                },
                {
                    "type": "text",
                    "text": "+    snapshot.forEach(doc => {"
                },
                {
                    "type": "text",
                    "text": "+      const data = doc.data();"
                },
                {
                    "type": "text",
                    "text": "+      subjectsSet.add(data.subject);"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    const subjects = Array.from(subjectsSet).sort();"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(200).json({"
                },
                {
                    "type": "text",
                    "text": "+      success: true,"
                },
                {
                    "type": "text",
                    "text": "+      subjects,"
                },
                {
                    "type": "text",
                    "text": "+      totalCount: subjects.length,"
                },
                {
                    "type": "text",
                    "text": "+      filters: {"
                },
                {
                    "type": "text",
                    "text": "+        board,"
                },
                {
                    "type": "text",
                    "text": "+        class: className"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+  } catch (error) {"
                },
                {
                    "type": "text",
                    "text": "+    console.error('❌ Get subjects error:', error);"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(500).json({"
                },
                {
                    "type": "text",
                    "text": "+      success: false,"
                },
                {
                    "type": "text",
                    "text": "+      message: 'Failed to get subjects',"
                },
                {
                    "type": "text",
                    "text": "+      error: error.message"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+  }"
                },
                {
                    "type": "text",
                    "text": "+}"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+// Main handler with routing"
                },
                {
                    "type": "text",
                    "text": "+export default function handler(req, res) {"
                },
                {
                    "type": "text",
                    "text": "+  return handleCors(req, res, async (req, res) => {"
                },
                {
                    "type": "text",
                    "text": "+    const { path } = req.query;"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    if (path === 'subjects') {"
                },
                {
                    "type": "text",
                    "text": "+      return await getSubjects(req, res);"
                },
                {
                    "type": "text",
                    "text": "+    } else {"
                },
                {
                    "type": "text",
                    "text": "+      return await getSolutions(req, res);"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+  });"
                },
                {
                    "type": "text",
                    "text": "+}"
                },
                {
                    "type": "text",
                    "text": "Finally, let me create the API endpoint for AI explanations:"
                },
                {
                    "type": "text",
                    "text": "--- api/ai/explain.js"
                },
                {
                    "type": "text",
                    "text": "+++ api/ai/explain.js"
                },
                {
                    "type": "text",
                    "text": "@@ -0,0 +1,107 @@"
                },
                {
                    "type": "text",
                    "text": "+// AI Explanation API - Provides AI-powered explanations for NCERT solutions"
                },
                {
                    "type": "text",
                    "text": "+import { handleCors } from '../../utils/cors.js';"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+// Groq API configuration"
                },
                {
                    "type": "text",
                    "text": "+const GROQ_API_KEY = process.env.GROQ_API_KEY;"
                },
                {
                    "type": "text",
                    "text": "+const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';"
                },
                {
                    "type": "text",
                    "text": "+const GROQ_MODEL = 'llama-3.3-70b-versatile';"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+// Get AI explanation for a question and answer"
                },
                {
                    "type": "text",
                    "text": "+async function getExplanation(req, res) {"
                },
                {
                    "type": "text",
                    "text": "+  if (req.method !== 'POST') {"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(405).json({ message: 'Method not allowed' });"
                },
                {
                    "type": "text",
                    "text": "+  }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+  try {"
                },
                {
                    "type": "text",
                    "text": "+    const { question, answer, userClass, subject } = req.body;"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Validate required parameters"
                },
                {
                    "type": "text",
                    "text": "+    if (!question || !answer) {"
                },
                {
                    "type": "text",
                    "text": "+      return res.status(400).json({"
                },
                {
                    "type": "text",
                    "text": "+        success: false,"
                },
                {
                    "type": "text",
                    "text": "+        message: 'Missing required parameters: question and answer are required'"
                },
                {
                    "type": "text",
                    "text": "+      });"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Determine explanation level (one class higher than user's class)"
                },
                {
                    "type": "text",
                    "text": "+    const explanationLevel = userClass ? parseInt(userClass) + 1 : 10;"
                },
                {
                    "type": "text",
                    "text": "+    "
                },
                {
                    "type": "text",
                    "text": "+    console.log(`🧠 Generating AI explanation for question: \"${question.substring(0, 50)}...\"`);"
                },
                {
                    "type": "text",
                    "text": "+    console.log(`📚 Context: Class ${userClass}, Subject: ${subject}, Explanation Level: Class ${explanationLevel}`);"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Create prompt for AI"
                },
                {
                    "type": "text",
                    "text": "+    const prompt = `"
                },
                {
                    "type": "text",
                    "text": "+You are an expert educational tutor specializing in ${subject || 'all subjects'} for Class ${userClass || 'school'} students."
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+I need you to explain the following question and its answer in a way that a Class ${explanationLevel} student can understand."
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+Question: ${question}"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+Answer: ${answer}"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+Please provide:"
                },
                {
                    "type": "text",
                    "text": "+1. A clear, detailed explanation of the concept"
                },
                {
                    "type": "text",
                    "text": "+2. Break down complex parts into simpler terms"
                },
                {
                    "type": "text",
                    "text": "+3. Include relevant examples if helpful"
                },
                {
                    "type": "text",
                    "text": "+4. Highlight key points to remember"
                },
                {
                    "type": "text",
                    "text": "+5. Explain WHY this is the correct answer, not just WHAT the answer is"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+Your explanation should be educational, accurate, and engaging for a student."
                },
                {
                    "type": "text",
                    "text": "+`;"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    // Call Groq API"
                },
                {
                    "type": "text",
                    "text": "+    const response = await fetch(GROQ_API_URL, {"
                },
                {
                    "type": "text",
                    "text": "+      method: 'POST',"
                },
                {
                    "type": "text",
                    "text": "+      headers: {"
                },
                {
                    "type": "text",
                    "text": "+        'Authorization': `Bearer ${GROQ_API_KEY}`,"
                },
                {
                    "type": "text",
                    "text": "+        'Content-Type': 'application/json'"
                },
                {
                    "type": "text",
                    "text": "+      },"
                },
                {
                    "type": "text",
                    "text": "+      body: JSON.stringify({"
                },
                {
                    "type": "text",
                    "text": "+        model: GROQ_MODEL,"
                },
                {
                    "type": "text",
                    "text": "+        messages: ["
                },
                {
                    "type": "text",
                    "text": "+          {"
                },
                {
                    "type": "text",
                    "text": "+            role: 'system',"
                },
                {
                    "type": "text",
                    "text": "+            content: `You are an expert educational tutor for Class ${userClass || 'school'} students. Provide clear, detailed explanations that are educational and engaging.`"
                },
                {
                    "type": "text",
                    "text": "+          },"
                },
                {
                    "type": "text",
                    "text": "+          {"
                },
                {
                    "type": "text",
                    "text": "+            role: 'user',"
                },
                {
                    "type": "text",
                    "text": "+            content: prompt"
                },
                {
                    "type": "text",
                    "text": "+          }"
                },
                {
                    "type": "text",
                    "text": "+        ],"
                },
                {
                    "type": "text",
                    "text": "+        max_tokens: 1000,"
                },
                {
                    "type": "text",
                    "text": "+        temperature: 0.7"
                },
                {
                    "type": "text",
                    "text": "+      })"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    if (!response.ok) {"
                },
                {
                    "type": "text",
                    "text": "+      const errorData = await response.json();"
                },
                {
                    "type": "text",
                    "text": "+      throw new Error(`AI API error: ${errorData.error?.message || response.statusText}`);"
                },
                {
                    "type": "text",
                    "text": "+    }"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    const data = await response.json();"
                },
                {
                    "type": "text",
                    "text": "+    const explanation = data.choices[0].message.content;"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    console.log(`✅ Generated AI explanation (${explanation.length} chars)`);"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(200).json({"
                },
                {
                    "type": "text",
                    "text": "+      success: true,"
                },
                {
                    "type": "text",
                    "text": "+      explanation,"
                },
                {
                    "type": "text",
                    "text": "+      metadata: {"
                },
                {
                    "type": "text",
                    "text": "+        model: GROQ_MODEL,"
                },
                {
                    "type": "text",
                    "text": "+        generatedAt: new Date().toISOString(),"
                },
                {
                    "type": "text",
                    "text": "+        questionLength: question.length,"
                },
                {
                    "type": "text",
                    "text": "+        answerLength: answer.length,"
                },
                {
                    "type": "text",
                    "text": "+        explanationLength: explanation.length"
                },
                {
                    "type": "text",
                    "text": "+      }"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+  } catch (error) {"
                },
                {
                    "type": "text",
                    "text": "+    console.error('❌ AI explanation error:', error);"
                },
                {
                    "type": "text",
                    "text": "+    return res.status(500).json({"
                },
                {
                    "type": "text",
                    "text": "+      success: false,"
                },
                {
                    "type": "text",
                    "text": "+      message: 'Failed to generate AI explanation',"
                },
                {
                    "type": "text",
                    "text": "+      error: error.message"
                },
                {
                    "type": "text",
                    "text": "+    });"
                },
                {
                    "type": "text",
                    "text": "+  }"
                },
                {
                    "type": "text",
                    "text": "+}"
                },
                {
                    "type": "text",
                    "text": "+"
                },
                {
                    "type": "text",
                    "text": "+// Main handler"
                },
                {
                    "type": "text",
                    "text": "+export default function handler(req, res) {"
                },
                {
                    "type": "text",
                    "text": "+  return handleCors(req, res, async (req, res) => {"
                },
                {
                    "type": "text",
                    "text": "+    return await getExplanation(req, res);"
                },
                {
                    "type": "text",
                    "text": "+  });"
                },
                {
                    "type": "text",
                    "text": "+}"
                },
                {
                    "type": "text",
                    "text": "Now let me update the sidebar to include the NCERT Solutions link:"
                },
                {
                    "type": "text",
                    "text": "--- client/src/components/Sidebar.tsx"
                },
                {
                    "type": "text",
                    "text": "+++ client/src/components/Sidebar.tsx"
                },
                {
                    "type": "text",
                    "text": "@@ -15,6 +15,7 @@"
                },
                {
                    "type": "text",
                    "text": "   Newspaper,"
                },
                {
                    "type": "text",
                    "text": "   Lightbulb,"
                },
                {
                    "type": "text",
                    "text": "   Sparkles,"
                },
                {
                    "type": "text",
                    "text": "+  BookOpen,"
                },
                {
                    "type": "text",
                    "text": "   Settings,"
                },
                {
                    "type": "text",
                    "text": "   LogOut,"
                },
                {
                    "type": "text",
                    "text": "   ChevronDown,"
                },
                {
                    "type": "text",
                    "text": "@@ -118,6 +119,14 @@"
                },
                {
                    "type": "text",
                    "text": "               <span>Flashcards</span>"
                },
                {
                    "type": "text",
                    "text": "             </Link>"
                },
                {
                    "type": "text",
                    "text": "           </li>"
                },
                {
                    "type": "text",
                    "text": "+          <li>"
                },
                {
                    "type": "text",
                    "text": "+            <Link"
                },
                {
                    "type": "text",
                    "text": "+              to=\"/ncert-solutions\""
                },
                {
                    "type": "text",
                    "text": "+              className={`flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50 ${location.pathname === '/ncert-solutions' ? 'bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50' : ''}`}"
                },
                {
                    "type": "text",
                    "text": "+            >"
                },
                {
                    "type": "text",
                    "text": "+              <BookOpen className=\"h-4 w-4\" />"
                },
                {
                    "type": "text",
                    "text": "+              <span>NCERT Solutions 📘</span>"
                },
                {
                    "type": "text",
                    "text": "+            </Link>"
                },
                {
                    "type": "text",
                    "text": "+          </li>"
                },
                {
                    "type": "text",
                    "text": "           <li>"
                },
                {
                    "type": "text",
                    "text": "             <Link"
                },
                {
                    "type": "text",
                    "text": "               to=\"/news\""
                },
                {
                    "type": "text",
                    "text": "Finally, let me update the routes to include the NCERT Solutions page:"
                },
                {
                    "type": "text",
                    "text": "--- client/src/App.tsx"
                },
                {
                    "type": "text",
                    "text": "+++ client/src/App.tsx"
                },
                {
                    "type": "text",
                    "text": "@@ -20,6 +20,7 @@"
                },
                {
                    "type": "text",
                    "text": " const Flashcards = lazy(() => import('./pages/Flashcards'));"
                },
                {
                    "type": "text",
                    "text": " const News = lazy(() => import('./pages/News'));"
                },
                {
                    "type": "text",
                    "text": " const AdminDashboard = lazy(() => import('./pages/AdminDashboard'));"
                },
                {
                    "type": "text",
                    "text": "+const NCERTSolutions = lazy(() => import('./pages/NCERTSolutions'));"
                },
                {
                    "type": "text",
                    "text": " const AdminSolutions = lazy(() => import('./pages/AdminSolutions'));"
                },
                {
                    "type": "text",
                    "text": " const AdminUsers = lazy(() => import('./pages/AdminUsers'));"
                },
                {
                    "type": "text",
                    "text": " const AdminContent = lazy(() => import('./pages/AdminContent'));"
                },
                {
                    "type": "text",
                    "text": "@@ -59,6 +60,7 @@"
                },
                {
                    "type": "text",
                    "text": "             <Route path=\"/dashboard\" element={<Dashboard />} />"
                },
                {
                    "type": "text",
                    "text": "             <Route path=\"/study\" element={<Study />} />"
                },
                {
                    "type": "text",
                    "text": "             <Route path=\"/flashcards\" element={<Flashcards />} />"
                },
                {
                    "type": "text",
                    "text": "+            <Route path=\"/ncert-solutions\" element={<NCERTSolutions />} />"
                },
                {
                    "type": "text",
                    "text": "             <Route path=\"/news\" element={<News />} />"
                },
                {
                    "type": "text",
                    "text": "             <Route path=\"/settings\" element={<Settings />} />"
                },
                {
                    "type": "text",
                    "text": "             <Route path=\"/admin\" element={<AdminDashboard />} />"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750419945991,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('subject', '==', subject)"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('isApproved', '==', true);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (chapter) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      query = query.where('chapter', '==', chapter);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Execute query"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const snapshot = await query.get();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const solutions = [];"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    snapshot.forEach(doc => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const data = doc.data();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      solutions.push({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        id: doc.id,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        ...data,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        createdAt: data.createdAt?.toDate?.()?.toISOString?.() || data.createdAt,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        updatedAt: data.updatedAt?.toDate?.()?.toISOString?.() || data.updatedAt"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Sort solutions by chapter and question number"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    solutions.sort((a, b) => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      if (a.chapter !== b.chapter) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        return a.chapter.localeCompare(b.chapter);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return a.questionNumber - b.questionNumber;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.log(`✅ Found ${solutions.length} solutions`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(200).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      success: true,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      solutions,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      totalCount: solutions.length,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      filters: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        board,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        class: className,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        subject,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        chapter: chapter || null"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  } catch (error) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.error('❌ Get solutions error:', error);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(500).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      success: false,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      message: 'Failed to get solutions',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      error: error.message"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// Get available subjects for a board and class"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+async function getSubjects(req, res) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  if (req.method !== 'GET') {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(405).json({ message: 'Method not allowed' });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  try {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    initializeFirebaseAdmin();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const db = getFirestoreAdminDb();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const { board, class: className } = req.query;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!board || !className) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return res.status(400).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        success: false,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        message: 'Missing required parameters: board and class are required'"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Get all approved solutions for the board and class"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const snapshot = await db.collection('ncert_solutions')"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('board', '==', board)"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('class', '==', parseInt(className))"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .where('isApproved', '==', true)"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      .get();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Extract unique subjects"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const subjectsSet = new Set();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    snapshot.forEach(doc => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const data = doc.data();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      subjectsSet.add(data.subject);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const subjects = Array.from(subjectsSet).sort();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(200).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      success: true,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      subjects,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      totalCount: subjects.length,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      filters: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        board,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        class: className"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  } catch (error) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.error('❌ Get subjects error:', error);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(500).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      success: false,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      message: 'Failed to get subjects',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      error: error.message"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// Main handler with routing"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+export default function handler(req, res) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  return handleCors(req, res, async (req, res) => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const { path } = req.query;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (path === 'subjects') {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return await getSubjects(req, res);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    } else {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return await getSolutions(req, res);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Finally, let me create the API endpoint for AI explanations:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- api/ai/explain.js"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ api/ai/explain.js"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -0,0 +1,107 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// AI Explanation API - Provides AI-powered explanations for NCERT solutions"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+import { handleCors } from '../../utils/cors.js';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// Groq API configuration"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+const GROQ_API_KEY = process.env.GROQ_API_KEY;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+const GROQ_MODEL = 'llama-3.3-70b-versatile';"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// Get AI explanation for a question and answer"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+async function getExplanation(req, res) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  if (req.method !== 'POST') {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(405).json({ message: 'Method not allowed' });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  try {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const { question, answer, userClass, subject } = req.body;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Validate required parameters"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!question || !answer) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      return res.status(400).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        success: false,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        message: 'Missing required parameters: question and answer are required'"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Determine explanation level (one class higher than user's class)"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const explanationLevel = userClass ? parseInt(userClass) + 1 : 10;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.log(`🧠 Generating AI explanation for question: \"${question.substring(0, 50)}...\"`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.log(`📚 Context: Class ${userClass}, Subject: ${subject}, Explanation Level: Class ${explanationLevel}`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Create prompt for AI"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const prompt = `"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+You are an expert educational tutor specializing in ${subject || 'all subjects'} for Class ${userClass || 'school'} students."
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+I need you to explain the following question and its answer in a way that a Class ${explanationLevel} student can understand."
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+Question: ${question}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+Answer: ${answer}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+Please provide:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+1. A clear, detailed explanation of the concept"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+2. Break down complex parts into simpler terms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+3. Include relevant examples if helpful"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+4. Highlight key points to remember"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+5. Explain WHY this is the correct answer, not just WHAT the answer is"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+Your explanation should be educational, accurate, and engaging for a student."
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+`;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    // Call Groq API"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const response = await fetch(GROQ_API_URL, {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      method: 'POST',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      headers: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        'Authorization': `Bearer ${GROQ_API_KEY}`,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        'Content-Type': 'application/json'"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      body: JSON.stringify({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        model: GROQ_MODEL,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        messages: ["
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            role: 'system',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            content: `You are an expert educational tutor for Class ${userClass || 'school'} students. Provide clear, detailed explanations that are educational and engaging.`"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            role: 'user',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            content: prompt"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        ],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        max_tokens: 1000,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        temperature: 0.7"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      })"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    if (!response.ok) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      const errorData = await response.json();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      throw new Error(`AI API error: ${errorData.error?.message || response.statusText}`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const data = await response.json();"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    const explanation = data.choices[0].message.content;"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.log(`✅ Generated AI explanation (${explanation.length} chars)`);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(200).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      success: true,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      explanation,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      metadata: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        model: GROQ_MODEL,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        generatedAt: new Date().toISOString(),"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        questionLength: question.length,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        answerLength: answer.length,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+        explanationLength: explanation.length"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  } catch (error) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    console.error('❌ AI explanation error:', error);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return res.status(500).json({"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      success: false,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      message: 'Failed to generate AI explanation',"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+      error: error.message"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+// Main handler"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+export default function handler(req, res) {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  return handleCors(req, res, async (req, res) => {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+    return await getExplanation(req, res);"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  });"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Now let me update the sidebar to include the NCERT Solutions link:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- client/src/components/Sidebar.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ client/src/components/Sidebar.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -15,6 +15,7 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "   Newspaper,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "   Lightbulb,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "   Sparkles,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+  BookOpen,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "   Settings,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "   LogOut,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "   ChevronDown,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -118,6 +119,14 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               <span>Flashcards</span>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             </Link>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "           </li>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          <li>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <Link"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              to=\"/ncert-solutions\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              className={`flex items-center gap-3 rounded-lg px-3 py-2 text-gray-500 transition-all hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50 ${location.pathname === '/ncert-solutions' ? 'bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50' : ''}`}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            >"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <BookOpen className=\"h-4 w-4\" />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+              <span>NCERT Solutions 📘</span>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            </Link>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+          </li>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "           <li>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Link"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "               to=\"/news\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Finally, let me update the routes to include the NCERT Solutions page:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "--- client/src/App.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+++ client/src/App.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -20,6 +20,7 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " const Flashcards = lazy(() => import('./pages/Flashcards'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " const News = lazy(() => import('./pages/News'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " const AdminDashboard = lazy(() => import('./pages/AdminDashboard'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+const NCERTSolutions = lazy(() => import('./pages/NCERTSolutions'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " const AdminSolutions = lazy(() => import('./pages/AdminSolutions'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " const AdminUsers = lazy(() => import('./pages/AdminUsers'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " const AdminContent = lazy(() => import('./pages/AdminContent'));"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "@@ -59,6 +60,7 @@"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Route path=\"/dashboard\" element={<Dashboard />} />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Route path=\"/study\" element={<Study />} />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Route path=\"/flashcards\" element={<Flashcards />} />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "+            <Route path=\"/ncert-solutions\" element={<NCERTSolutions />} />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Route path=\"/news\" element={<News />} />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Route path=\"/settings\" element={<Settings />} />"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "             <Route path=\"/admin\" element={<AdminDashboard />} />"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "4892e115-9865-4dcb-841e-a396d307b6b7",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "make all these edits in the files"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750419959367,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "make all these edits in the files"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "75c973f5-993a-4f08-b27f-a270aa65d166",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "I'll help you implement the Smart PDF Upload system by making all the necessary edits to the files. Let me start by examining the current state of the files before making changes."
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01X3frru2VBbAp6o3RrqyGJD",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me check the rest of the file to understand the structure better:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01NtvUdmomPtryrFkvhesxbD",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Now let me check the upload dialog section:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01TywnZmL1wbXax8AHJLZNWY",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me find the upload dialog section:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01N2SyMrD7T9Q63MSNv8bpAi",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me find the upload dialog section:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_015zDocwrLrjEZZgPhPHYhsg",
                    "title": "Fulltext search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me try a different search:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_0112LAJ642RA9JWFxBgkQKyG",
                    "title": "Fulltext search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me check the file structure more directly:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01DYH7aZoXD4CWYvMAqhLfNv",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me find the upload dialog section:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01P6Nxibck1TbakeriftoHJ9",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Now I'll check the end of the upload dialog:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01MSVF5jaL7wTgbBKbYH8NzM",
                    "title": "",
                    "statusText": "Invalid range",
                    "status": "WARNING",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me check the end of the file:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01Tgt4DZG1WtdedoC7d1TdmS",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Now I have a better understanding of the file structure. Let me implement the requested changes:\n\n1. First, let's update the upload dialog to include the smart PDF upload functionality:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01PfpZH7NdaKwgU9HpRdeBed",
                    "title": "",
                    "statusText": "Text to replace not found",
                    "status": "WARNING",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me try a different approach by checking the exact content of the file:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_015xM2YLupGJuStWTnYrMHew",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me implement the changes according to the line numbers in the request:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01EjbJc1hWVyAkhQBwAhu2Xu",
                    "title": "",
                    "statusText": "Text to replace not found",
                    "status": "WARNING",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let me try a different approach by creating a new file with all the changes:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01KYCrhqJSbaKSCCirnEX7qC",
                    "statusText": "Change generated",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/AdminSolutions.tsx.new",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\AdminSolutions.tsx.new"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "codeHunk",
                    "lineBasedDiff": "--- client/src/pages/AdminSolutions.tsx.new\n+++ client/src/pages/AdminSolutions.tsx.new\n@@ -0,0 +1,1109 @@\n+import React, { useState, useEffect } from 'react';\n+import { Helmet } from 'react-helmet';\n+import { useAuth } from '@/hooks/useAuth';\n+import { config } from '@/config';\n+import {\n+  Card,\n+  CardContent,\n+  CardDescription,\n+  CardHeader,\n+  CardTitle,\n+} from '@/components/ui/card';\n+import {\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableHead,\n+  TableHeader,\n+  TableRow,\n+} from '@/components/ui/table';\n+import {\n+  Dialog,\n+  DialogContent,\n+  DialogDescription,\n+  DialogFooter,\n+  DialogHeader,\n+  DialogTitle,\n+} from \"@/components/ui/dialog\";\n+import {\n+  Tabs,\n+  TabsContent,\n+  TabsList,\n+  TabsTrigger,\n+} from \"@/components/ui/tabs\";\n+import { Button } from '@/components/ui/button';\n+import { Input } from '@/components/ui/input';\n+import { Label } from '@/components/ui/label';\n+import { Textarea } from '@/components/ui/textarea';\n+import {\n+  Select,\n+  SelectContent,\n+  SelectItem,\n+  SelectTrigger,\n+  SelectValue,\n+} from '@/components/ui/select';\n+import { Badge } from '@/components/ui/badge';\n+import {\n+  Upload,\n+  Plus,\n+  Eye,\n+  Edit,\n+  Trash2,\n+  FileText,\n+  BookOpen,\n+  Users,\n+  TrendingUp,\n+  Loader2,\n+  CheckCircle,\n+  AlertCircle,\n+  Brain,\n+  Database,\n+  Download,\n+  RefreshCw\n+} from 'lucide-react';\n+import { useToast } from '@/hooks/use-toast';\n+\n+interface SolutionStats {\n+  totalSolutions: number;\n+  availableSolutions: number;\n+  easySolutions: number;\n+  mediumSolutions: number;\n+  hardSolutions: number;\n+  totalViews: number;\n+}\n+\n+interface NCERTSolution {\n+  id: string;\n+  board: string;\n+  class: string;\n+  subject: string;\n+  chapter: string;\n+  chapterNumber: number;\n+  exercise: string;\n+  totalQuestions: number;\n+  difficulty: 'easy' | 'medium' | 'hard';\n+  isAvailable: boolean;\n+  viewCount: number;\n+  lastUpdated: string;\n+  createdBy: string;\n+  solutionFile?: string;\n+  contentExtracted?: boolean;\n+}\n+\n+interface QAPair {\n+  question: string;\n+  answer: string;\n+  questionNumber: number;\n+  board: string;\n+  class: string;\n+  subject: string;\n+  chapter: string;\n+  confidence: number;\n+}\n+\n+interface ProcessingSession {\n+  sessionId: string;\n+  status: 'pending_review' | 'uploaded_to_database' | 'rejected';\n+  metadata: {\n+    board: string;\n+    class: string;\n+    subject: string;\n+    chapter: string;\n+    originalFilename: string;\n+    fileSize: number;\n+    uploadedAt: string;\n+  };\n+  qaPairs: QAPair[];\n+  totalQuestions: number;\n+  createdAt: string;\n+}\n+\n+const AdminSolutions: React.FC = () => {\n+  const { user } = useAuth();\n+  const { toast } = useToast();\n+\n+  // State\n+  const [solutions, setSolutions] = useState<NCERTSolution[]>([]);\n+  const [stats, setStats] = useState<SolutionStats | null>(null);\n+  const [loading, setLoading] = useState(true);\n+  const [isUploadDialogOpen, setIsUploadDialogOpen] = useState(false);\n+  const [uploadLoading, setUploadLoading] = useState(false);\n+  \n+  // Smart PDF Upload State\n+  const [processingSessions, setProcessingSessions] = useState<ProcessingSession[]>([]);\n+  const [selectedSession, setSelectedSession] = useState<ProcessingSession | null>(null);\n+  const [isReviewDialogOpen, setIsReviewDialogOpen] = useState(false);\n+  const [uploadingToDatabase, setUploadingToDatabase] = useState(false);\n+  \n+  // Upload form state\n+  const [uploadData, setUploadData] = useState({\n+    board: '',\n+    class: '',\n+    subject: '',\n+    chapter: '',\n+    chapterNumber: 1,\n+    exercise: '',\n+    difficulty: 'medium' as 'easy' | 'medium' | 'hard',\n+    file: null as File | null,\n+    thumbnailImage: null as File | null\n+  });\n+\n+  // Smart PDF upload form state\n+  const [smartUploadData, setSmartUploadData] = useState({\n+    board: '',\n+    class: '',\n+    subject: '',\n+    chapter: '',\n+    pdfFile: null as File | null\n+  });\n+\n+  // Check admin access\n+  useEffect(() => {\n+    if (user && user.role !== 'admin') {\n+      toast({\n+        title: \"Access Denied\",\n+        description: \"Admin access required\",\n+        variant: \"destructive\",\n+      });\n+      // Redirect to dashboard or solutions page\n+      window.location.href = '/dashboard';\n+    }\n+  }, [user]);\n+\n+  // Fetch solutions and stats\n+  const fetchData = async () => {\n+    setLoading(true);\n+    try {\n+      const [solutionsResponse, statsResponse] = await Promise.all([\n+        fetch(`${config.apiUrl}/api/ncert-solutions?limit=100`, {\n+          headers: {\n+            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n+            'Content-Type': 'application/json',\n+          },\n+        }),\n+        fetch(`${config.apiUrl}/api/ncert-solutions/stats`, {\n+          headers: {\n+            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n+            'Content-Type': 'application/json',\n+          },\n+        })\n+      ]);\n+\n+      if (solutionsResponse.ok) {\n+        const solutionsData = await solutionsResponse.json();\n+        setSolutions(solutionsData.solutions || []);\n+      }\n+\n+      if (statsResponse.ok) {\n+        const statsData = await statsResponse.json();\n+        setStats(statsData);\n+      }\n+\n+    } catch (error) {\n+      console.error('Error fetching data:', error);\n+      toast({\n+        title: \"Error\",\n+        description: \"Failed to load solutions data\",\n+        variant: \"destructive\",\n+      });\n+    } finally {\n+      setLoading(false);\n+    }\n+  };\n+\n+  // Handle solution upload\n+  const handleUploadSolution = async () => {\n+    if (!uploadData.file) {\n+      toast({\n+        title: \"Error\",\n+        description: \"Please select a solution file to upload\",\n+        variant: \"destructive\",\n+      });\n+      return;\n+    }\n+\n+    setUploadLoading(true);\n+    \n+    try {\n+      const formData = new FormData();\n+      formData.append('board', uploadData.board);\n+      formData.append('class', uploadData.class);\n+      formData.append('subject', uploadData.subject);\n+      formData.append('chapter', uploadData.chapter);\n+      formData.append('chapterNumber', uploadData.chapterNumber.toString());\n+      formData.append('exercise', uploadData.exercise);\n+      formData.append('difficulty', uploadData.difficulty);\n+      formData.append('solutionFile', uploadData.file);\n+      \n+      if (uploadData.thumbnailImage) {\n+        formData.append('thumbnailImage', uploadData.thumbnailImage);\n+      }\n+\n+      const response = await fetch(`${config.apiUrl}/api/ncert-solutions/upload`, {\n+        method: 'POST',\n+        headers: {\n+          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n+        },\n+        body: formData,\n+      });\n+\n+      if (!response.ok) {\n+        throw new Error('Failed to upload solution');\n+      }\n+\n+      const result = await response.json();\n+      \n+      toast({\n+        title: \"Success\",\n+        description: result.pdfProcessing?.success \n+          ? `Solution uploaded and ${result.pdfProcessing.questionsProcessed} questions extracted!`\n+          : \"Solution uploaded successfully!\",\n+      });\n+\n+      setIsUploadDialogOpen(false);\n+      setUploadData({\n+        board: '',\n+        class: '',\n+        subject: '',\n+        chapter: '',\n+        chapterNumber: 1,\n+        exercise: '',\n+        difficulty: 'medium',\n+        file: null,\n+        thumbnailImage: null\n+      });\n+      \n+      // Refresh data\n+      fetchData();\n+\n+    } catch (err) {\n+      console.error('Error uploading solution:', err);\n+      toast({\n+        title: \"Error\",\n+        description: err instanceof Error ? err.message : \"Failed to upload solution\",\n+        variant: \"destructive\",\n+      });\n+    } finally {\n+      setUploadLoading(false);\n+    }\n+  };\n+\n+  // Handle smart PDF upload\n+  const handleSmartPDFUpload = async () => {\n+    if (!smartUploadData.pdfFile || !smartUploadData.board || !smartUploadData.class || \n+        !smartUploadData.subject || !smartUploadData.chapter) {\n+      toast({\n+        title: \"Error\",\n+        description: \"Please fill all fields and select a PDF file\",\n+        variant: \"destructive\",\n+      });\n+      return;\n+    }\n+\n+    setUploadLoading(true);\n+    \n+    try {\n+      const formData = new FormData();\n+      formData.append('board', smartUploadData.board);\n+      formData.append('class', smartUploadData.class);\n+      formData.append('subject', smartUploadData.subject);\n+      formData.append('chapter', smartUploadData.chapter);\n+      formData.append('pdfFile', smartUploadData.pdfFile);\n+\n+      const response = await fetch(`${config.apiUrl}/api/smart-pdf-upload?action=upload`, {\n+        method: 'POST',\n+        headers: {\n+          'x-user-id': user?.uid || 'admin',\n+        },\n+        body: formData,\n+      });\n+\n+      if (!response.ok) {\n+        throw new Error('Failed to process PDF');\n+      }\n+\n+      const result = await response.json();\n+      \n+      if (result.success) {\n+        toast({\n+          title: \"PDF Processed Successfully! 🎉\",\n+          description: `Extracted ${result.totalQuestions} Q&A pairs. Ready for review.`,\n+        });\n+\n+        // Reset form\n+        setSmartUploadData({\n+          board: '',\n+          class: '',\n+          subject: '',\n+          chapter: '',\n+          pdfFile: null\n+        });\n+\n+        // Refresh processing sessions\n+        fetchProcessingSessions();\n+      } else {\n+        throw new Error(result.message || 'Failed to process PDF');\n+      }\n+\n+    } catch (err) {\n+      console.error('Error processing PDF:', err);\n+      toast({\n+        title: \"Error\",\n+        description: err instanceof Error ? err.message : \"Failed to process PDF\",\n+        variant: \"destructive\",\n+      });\n+    } finally {\n+      setUploadLoading(false);\n+    }\n+  };\n+\n+  // Fetch processing sessions\n+  const fetchProcessingSessions = async () => {\n+    try {\n+      const response = await fetch(`${config.apiUrl}/api/smart-pdf-upload?action=sessions`, {\n+        headers: {\n+          'x-user-id': user?.uid || 'admin',\n+        },\n+      });\n+\n+      if (response.ok) {\n+        const data = await response.json();\n+        setProcessingSessions(data.sessions || []);\n+      }\n+    } catch (error) {\n+      console.error('Error fetching processing sessions:', error);\n+    }\n+  };\n+\n+  // Handle upload to database\n+  const handleUploadToDatabase = async (sessionId: string) => {\n+    setUploadingToDatabase(true);\n+    \n+    try {\n+      const response = await fetch(`${config.apiUrl}/api/smart-pdf-upload?action=upload-to-database`, {\n+        method: 'POST',\n+        headers: {\n+          'Content-Type': 'application/json',\n+          'x-user-id': user?.uid || 'admin',\n+        },\n+        body: JSON.stringify({ sessionId }),\n+      });\n+\n+      if (!response.ok) {\n+        throw new Error('Failed to upload to database');\n+      }\n+\n+      const result = await response.json();\n+      \n+      if (result.success) {\n+        toast({\n+          title: \"Success! 🚀\",\n+          description: `Uploaded ${result.uploadedCount} Q&A pairs to database`,\n+        });\n+\n+        // Refresh data\n+        fetchProcessingSessions();\n+        fetchData();\n+        setIsReviewDialogOpen(false);\n+      } else {\n+        throw new Error(result.message || 'Failed to upload to database');\n+      }\n+\n+    } catch (err) {\n+      console.error('Error uploading to database:', err);\n+      toast({\n+        title: \"Error\",\n+        description: err instanceof Error ? err.message : \"Failed to upload to database\",\n+        variant: \"destructive\",\n+      });\n+    } finally {\n+      setUploadingToDatabase(false);\n+    }\n+  };\n+\n+  // Open review dialog\n+  const openReviewDialog = (session: ProcessingSession) => {\n+    setSelectedSession(session);\n+    setIsReviewDialogOpen(true);\n+  };\n+\n+  // Initial load\n+  useEffect(() => {\n+    if (user?.role === 'admin') {\n+      fetchData();\n+      fetchProcessingSessions();\n+    }\n+  }, [user]);\n+\n+  if (user?.role !== 'admin') {\n+    return (\n+      <div className=\"container mx-auto py-8\">\n+        <div className=\"text-center\">\n+          <AlertCircle className=\"h-12 w-12 mx-auto mb-4 text-red-500\" />\n+          <h1 className=\"text-2xl font-bold mb-2\">Access Denied</h1>\n+          <p className=\"text-muted-foreground\">Admin access required to view this page.</p>\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <>\n+      <Helmet>\n+        <title>Admin Solutions - LearnQuest</title>\n+        <meta name=\"description\" content=\"Manage NCERT solutions and content.\" />\n+      </Helmet>\n+\n+      <div className=\"container mx-auto py-8 space-y-8\">\n+        {/* Header */}\n+        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n+          <div>\n+            <h1 className=\"text-3xl font-bold\">Solutions Management</h1>\n+            <p className=\"text-muted-foreground\">\n+              Upload and manage NCERT solutions for students\n+            </p>\n+          </div>\n+          \n+          <div className=\"flex gap-2\">\n+            <Button onClick={() => setIsUploadDialogOpen(true)}>\n+              <Brain className=\"w-4 h-4 mr-2\" />\n+              Smart PDF Upload\n+            </Button>\n+            <Button variant=\"outline\" onClick={() => {fetchData(); fetchProcessingSessions();}}>\n+              <RefreshCw className=\"w-4 h-4 mr-2\" />\n+              Refresh\n+            </Button>\n+          </div>\n+        </div>\n+\n+        {/* Stats Cards */}\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n+          <Card>\n+            <CardHeader className=\"pb-2\">\n+              <CardTitle className=\"text-sm font-medium\">Total Solutions</CardTitle>\n+            </CardHeader>\n+            <CardContent>\n+              <div className=\"text-2xl font-bold\">\n+                {loading ? '...' : stats?.totalSolutions || 0}\n+              </div>\n+              <p className=\"text-xs text-muted-foreground mt-1\">\n+                Total NCERT solutions in database\n+              </p>\n+            </CardContent>\n+          </Card>\n+          \n+          <Card>\n+            <CardHeader className=\"pb-2\">\n+              <CardTitle className=\"text-sm font-medium\">Available Solutions</CardTitle>\n+            </CardHeader>\n+            <CardContent>\n+              <div className=\"text-2xl font-bold\">\n+                {loading ? '...' : stats?.availableSolutions || 0}\n+              </div>\n+              <p className=\"text-xs text-muted-foreground mt-1\">\n+                Solutions available to students\n+              </p>\n+            </CardContent>\n+          </Card>\n+          \n+          <Card>\n+            <CardHeader className=\"pb-2\">\n+              <CardTitle className=\"text-sm font-medium\">Total Views</CardTitle>\n+            </CardHeader>\n+            <CardContent>\n+              <div className=\"text-2xl font-bold\">\n+                {loading ? '...' : stats?.totalViews || 0}\n+              </div>\n+              <p className=\"text-xs text-muted-foreground mt-1\">\n+                Total solution views by students\n+              </p>\n+            </CardContent>\n+          </Card>\n+          \n+          <Card>\n+            <CardHeader className=\"pb-2\">\n+              <CardTitle className=\"text-sm font-medium\">Difficulty Breakdown</CardTitle>\n+            </CardHeader>\n+            <CardContent>\n+              <div className=\"flex items-center gap-2\">\n+                <Badge variant=\"default\">\n+                  Easy: {loading ? '...' : stats?.easySolutions || 0}\n+                </Badge>\n+                <Badge variant=\"secondary\">\n+                  Medium: {loading ? '...' : stats?.mediumSolutions || 0}\n+                </Badge>\n+                <Badge variant=\"destructive\">\n+                  Hard: {loading ? '...' : stats?.hardSolutions || 0}\n+                </Badge>\n+              </div>\n+            </CardContent>\n+          </Card>\n+        </div>\n+        \n+        {/* Processing Sessions */}\n+        <Card>\n+          <CardHeader>\n+            <CardTitle className=\"flex items-center gap-2\">\n+              <Brain className=\"h-5 w-5\" />\n+              Smart PDF Processing Sessions\n+            </CardTitle>\n+            <CardDescription>\n+              Review and manage PDF processing sessions\n+            </CardDescription>\n+          </CardHeader>\n+          <CardContent>\n+            {processingSessions.length === 0 ? (\n+              <div className=\"text-center py-8\">\n+                <p className=\"text-muted-foreground\">No processing sessions found</p>\n+                <p className=\"text-sm text-muted-foreground mt-2\">\n+                  Upload a PDF using Smart PDF Upload to get started\n+                </p>\n+              </div>\n+            ) : (\n+              <Table>\n+                <TableHeader>\n+                  <TableRow>\n+                    <TableHead>Date</TableHead>\n+                    <TableHead>File</TableHead>\n+                    <TableHead>Details</TableHead>\n+                    <TableHead>Questions</TableHead>\n+                    <TableHead>Status</TableHead>\n+                    <TableHead>Actions</TableHead>\n+                  </TableRow>\n+                </TableHeader>\n+                <TableBody>\n+                  {processingSessions.map((session) => (\n+                    <TableRow key={session.sessionId}>\n+                      <TableCell>\n+                        {new Date(session.createdAt).toLocaleDateString()}\n+                      </TableCell>\n+                      <TableCell className=\"font-medium\">\n+                        {session.metadata.originalFilename}\n+                      </TableCell>\n+                      <TableCell>\n+                        {session.metadata.board} | Class {session.metadata.class} | {session.metadata.subject}\n+                      </TableCell>\n+                      <TableCell>{session.totalQuestions}</TableCell>\n+                      <TableCell>\n+                        <Badge variant={\n+                          session.status === 'pending_review' ? 'default' :\n+                          session.status === 'uploaded_to_database' ? 'secondary' : 'destructive'\n+                        }>\n+                          {session.status === 'pending_review' ? 'Pending Review' :\n+                           session.status === 'uploaded_to_database' ? 'Uploaded' : 'Rejected'}\n+                        </Badge>\n+                      </TableCell>\n+                      <TableCell>\n+                        <div className=\"flex items-center gap-2\">\n+                          <Button size=\"sm\" variant=\"outline\" onClick={() => openReviewDialog(session)}>\n+                            <Eye className=\"w-4 h-4 mr-2\" />\n+                            Review\n+                          </Button>\n+                          {session.status === 'pending_review' && (\n+                            <Button size=\"sm\" onClick={() => handleUploadToDatabase(session.sessionId)}>\n+                              <Database className=\"w-4 h-4 mr-2\" />\n+                              Upload\n+                            </Button>\n+                          )}\n+                        </div>\n+                      </TableCell>\n+                    </TableRow>\n+                  ))}\n+                </TableBody>\n+              </Table>\n+            )}\n+          </CardContent>\n+        </Card>\n+\n+        {/* Solutions Table */}\n+        <Card>\n+          <CardHeader>\n+            <CardTitle className=\"flex items-center gap-2\">\n+              <BookOpen className=\"h-5 w-5\" />\n+              NCERT Solutions\n+            </CardTitle>\n+            <CardDescription>\n+              Manage uploaded NCERT solutions\n+            </CardDescription>\n+          </CardHeader>\n+          <CardContent>\n+            {loading ? (\n+              <div className=\"text-center py-8\">\n+                <Loader2 className=\"h-8 w-8 mx-auto animate-spin text-muted-foreground\" />\n+                <p className=\"mt-2 text-muted-foreground\">Loading solutions...</p>\n+              </div>\n+            ) : solutions.length === 0 ? (\n+              <div className=\"text-center py-8\">\n+                <p className=\"text-muted-foreground\">No solutions found</p>\n+                <p className=\"text-sm text-muted-foreground mt-2\">\n+                  Upload a solution to get started\n+                </p>\n+              </div>\n+            ) : (\n+              <Table>\n+                <TableHeader>\n+                  <TableRow>\n+                    <TableHead>Subject</TableHead>\n+                    <TableHead>Class</TableHead>\n+                    <TableHead>Chapter</TableHead>\n+                    <TableHead>Exercise</TableHead>\n+                    <TableHead>Difficulty</TableHead>\n+                    <TableHead>Questions</TableHead>\n+                    <TableHead>Views</TableHead>\n+                    <TableHead>Status</TableHead>\n+                    <TableHead>Actions</TableHead>\n+                  </TableRow>\n+                </TableHeader>\n+                <TableBody>\n+                  {solutions.map((solution) => (\n+                    <TableRow key={solution.id}>\n+                      <TableCell className=\"font-medium\">{solution.subject}</TableCell>\n+                      <TableCell>{solution.class}</TableCell>\n+                      <TableCell>{solution.chapter}</TableCell>\n+                      <TableCell>{solution.exercise}</TableCell>\n+                      <TableCell>\n+                        <Badge variant={\n+                          solution.difficulty === 'easy' ? 'default' :\n+                          solution.difficulty === 'medium' ? 'secondary' : 'destructive'\n+                        }>\n+                          {solution.difficulty}\n+                        </Badge>\n+                      </TableCell>\n+                      <TableCell>{solution.totalQuestions}</TableCell>\n+                      <TableCell>{solution.viewCount}</TableCell>\n+                      <TableCell>\n+                        <div className=\"flex items-center gap-2\">\n+                          {solution.isAvailable ? (\n+                            <Badge className=\"bg-green-600\">Available</Badge>\n+                          ) : (\n+                            <Badge variant=\"secondary\">Draft</Badge>\n+                          )}\n+                          {solution.contentExtracted && (\n+                            <Badge variant=\"outline\">Processed</Badge>\n+                          )}\n+                        </div>\n+                      </TableCell>\n+                      <TableCell>\n+                        <div className=\"flex items-center gap-2\">\n+                          <Button size=\"sm\" variant=\"outline\">\n+                            <Eye className=\"w-4 h-4\" />\n+                          </Button>\n+                          <Button size=\"sm\" variant=\"outline\">\n+                            <Edit className=\"w-4 h-4\" />\n+                          </Button>\n+                        </div>\n+                      </TableCell>\n+                    </TableRow>\n+                  ))}\n+                </TableBody>\n+              </Table>\n+            )}\n+          </CardContent>\n+        </Card>\n+\n+        {/* Upload Dialog */}\n+        <Dialog open={isUploadDialogOpen} onOpenChange={setIsUploadDialogOpen}>\n+          <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">\n+            <DialogHeader className=\"mb-4\">\n+              <DialogTitle className=\"flex items-center gap-2\">\n+                <Upload className=\"h-5 w-5\" />\n+                Upload NCERT Solution\n+              </DialogTitle>\n+              <DialogDescription>\n+                Add a new NCERT solution to the database\n+              </DialogDescription>\n+            </DialogHeader>\n+            \n+            <Tabs defaultValue=\"smart-upload\" className=\"w-full\">\n+              <TabsList className=\"grid w-full grid-cols-2\">\n+                <TabsTrigger value=\"smart-upload\" className=\"flex items-center gap-2\">\n+                  <Brain className=\"h-4 w-4\" />\n+                  Smart PDF Upload\n+                </TabsTrigger>\n+                <TabsTrigger value=\"manual-upload\" className=\"flex items-center gap-2\">\n+                  <FileText className=\"h-4 w-4\" />\n+                  Manual Upload\n+                </TabsTrigger>\n+              </TabsList>\n+              \n+              {/* Smart PDF Upload Tab */}\n+              <TabsContent value=\"smart-upload\" className=\"mt-4\">\n+                <div className=\"space-y-4\">\n+                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n+                    <div className=\"space-y-2\">\n+                      <Label htmlFor=\"smart-board\">Board</Label>\n+                      <Select\n+                        value={smartUploadData.board}\n+                        onValueChange={(value) => setSmartUploadData({...smartUploadData, board: value})}\n+                      >\n+                        <SelectTrigger id=\"smart-board\">\n+                          <SelectValue placeholder=\"Select Board\" />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          <SelectItem value=\"CBSE\">CBSE</SelectItem>\n+                          <SelectItem value=\"ICSE\">ICSE</SelectItem>\n+                          <SelectItem value=\"State\">State Board</SelectItem>\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                    \n+                    <div className=\"space-y-2\">\n+                      <Label htmlFor=\"smart-class\">Class</Label>\n+                      <Select\n+                        value={smartUploadData.class}\n+                        onValueChange={(value) => setSmartUploadData({...smartUploadData, class: value})}\n+                      >\n+                        <SelectTrigger id=\"smart-class\">\n+                          <SelectValue placeholder=\"Select Class\" />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          {[...Array(12)].map((_, i) => (\n+                            <SelectItem key={i + 1} value={(i + 1).toString()}>\n+                              Class {i + 1}\n+                            </SelectItem>\n+                          ))}\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                  </div>\n+                  \n+                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n+                    <div className=\"space-y-2\">\n+                      <Label htmlFor=\"smart-subject\">Subject</Label>\n+                      <Select\n+                        value={smartUploadData.subject}\n+                        onValueChange={(value) => setSmartUploadData({...smartUploadData, subject: value})}\n+                      >\n+                        <SelectTrigger id=\"smart-subject\">\n+                          <SelectValue placeholder=\"Select Subject\" />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          <SelectItem value=\"Mathematics\">Mathematics</SelectItem>\n+                          <SelectItem value=\"Science\">Science</SelectItem>\n+                          <SelectItem value=\"Physics\">Physics</SelectItem>\n+                          <SelectItem value=\"Chemistry\">Chemistry</SelectItem>\n+                          <SelectItem value=\"Biology\">Biology</SelectItem>\n+                          <SelectItem value=\"English\">English</SelectItem>\n+                          <SelectItem value=\"Hindi\">Hindi</SelectItem>\n+                          <SelectItem value=\"Social Science\">Social Science</SelectItem>\n+                          <SelectItem value=\"History\">History</SelectItem>\n+                          <SelectItem value=\"Geography\">Geography</SelectItem>\n+                          <SelectItem value=\"Civics\">Civics</SelectItem>\n+                          <SelectItem value=\"Economics\">Economics</SelectItem>\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                    \n+                    <div className=\"space-y-2\">\n+                      <Label htmlFor=\"smart-chapter\">Chapter</Label>\n+                      <Input\n+                        id=\"smart-chapter\"\n+                        placeholder=\"Enter Chapter Name\"\n+                        value={smartUploadData.chapter}\n+                        onChange={(e) => setSmartUploadData({...smartUploadData, chapter: e.target.value})}\n+                      />\n+                    </div>\n+                  </div>\n+                  \n+                  <div className=\"space-y-2\">\n+                    <Label htmlFor=\"smart-pdf-file\">PDF File</Label>\n+                    <Input\n+                      id=\"smart-pdf-file\"\n+                      type=\"file\"\n+                      accept=\".pdf\"\n+                      onChange={(e) => {\n+                        const file = e.target.files?.[0] || null;\n+                        setSmartUploadData({...smartUploadData, pdfFile: file});\n+                      }}\n+                    />\n+                    <p className=\"text-sm text-muted-foreground\">\n+                      Upload a PDF file containing NCERT solutions. The system will automatically extract questions and answers.\n+                    </p>\n+                  </div>\n+                  \n+                  <Button \n+                    className=\"w-full\" \n+                    onClick={handleSmartPDFUpload}\n+                    disabled={uploadLoading}\n+                  >\n+                    {uploadLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Brain className=\"mr-2 h-4 w-4\" />}\n+                    Process PDF & Extract Q&A Pairs\n+                  </Button>\n+                </div>\n+              </TabsContent>\n+\n+              {/* Manual Upload Tab */}\n+              <TabsContent value=\"manual-upload\" className=\"mt-4\">\n+                <div className=\"space-y-4\">\n+                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n+                    <div>\n+                      <Label htmlFor=\"board\">Board</Label>\n+                      <Select \n+                        value={uploadData.board} \n+                        onValueChange={(value) => setUploadData(prev => ({ ...prev, board: value }))}\n+                      >\n+                        <SelectTrigger>\n+                          <SelectValue placeholder=\"Select Board\" />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          <SelectItem value=\"CBSE\">CBSE</SelectItem>\n+                          <SelectItem value=\"NCERT\">NCERT</SelectItem>\n+                          <SelectItem value=\"State Board\">State Board</SelectItem>\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                    \n+                    <div>\n+                      <Label htmlFor=\"class\">Class</Label>\n+                      <Select \n+                        value={uploadData.class} \n+                        onValueChange={(value) => setUploadData(prev => ({ ...prev, class: value }))}\n+                      >\n+                        <SelectTrigger>\n+                          <SelectValue placeholder=\"Select Class\" />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          {Array.from({length: 7}, (_, i) => i + 6).map(cls => (\n+                            <SelectItem key={cls} value={cls.toString()}>Class {cls}</SelectItem>\n+                          ))}\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                  </div>\n+                  \n+                  <div>\n+                    <Label htmlFor=\"subject\">Subject</Label>\n+                    <Select \n+                      value={uploadData.subject} \n+                      onValueChange={(value) => setUploadData(prev => ({ ...prev, subject: value }))}\n+                    >\n+                      <SelectTrigger>\n+                        <SelectValue placeholder=\"Select Subject\" />\n+                      </SelectTrigger>\n+                      <SelectContent>\n+                        <SelectItem value=\"Mathematics\">Mathematics</SelectItem>\n+                        <SelectItem value=\"Science\">Science</SelectItem>\n+                        <SelectItem value=\"Physics\">Physics</SelectItem>\n+                        <SelectItem value=\"Chemistry\">Chemistry</SelectItem>\n+                        <SelectItem value=\"Biology\">Biology</SelectItem>\n+                        <SelectItem value=\"English\">English</SelectItem>\n+                        <SelectItem value=\"Hindi\">Hindi</SelectItem>\n+                        <SelectItem value=\"Social Science\">Social Science</SelectItem>\n+                      </SelectContent>\n+                    </Select>\n+                  </div>\n+                  \n+                  <div>\n+                    <Label htmlFor=\"chapter\">Chapter Title</Label>\n+                    <Input\n+                      id=\"chapter\"\n+                      value={uploadData.chapter}\n+                      onChange={(e) => setUploadData(prev => ({ ...prev, chapter: e.target.value }))}\n+                      placeholder=\"e.g., Chapter 1: Rational Numbers\"\n+                    />\n+                  </div>\n+                  \n+                  <div className=\"grid grid-cols-2 gap-4\">\n+                    <div>\n+                      <Label htmlFor=\"chapterNumber\">Chapter Number</Label>\n+                      <Input\n+                        id=\"chapterNumber\"\n+                        type=\"number\"\n+                        min=\"1\"\n+                        max=\"20\"\n+                        value={uploadData.chapterNumber}\n+                        onChange={(e) => setUploadData(prev => ({ ...prev, chapterNumber: parseInt(e.target.value) || 1 }))}\n+                      />\n+                    </div>\n+                    \n+                    <div>\n+                      <Label htmlFor=\"difficulty\">Difficulty</Label>\n+                      <Select \n+                        value={uploadData.difficulty} \n+                        onValueChange={(value: 'easy' | 'medium' | 'hard') => setUploadData(prev => ({ ...prev, difficulty: value }))}\n+                      >\n+                        <SelectTrigger>\n+                          <SelectValue />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          <SelectItem value=\"easy\">Easy</SelectItem>\n+                          <SelectItem value=\"medium\">Medium</SelectItem>\n+                          <SelectItem value=\"hard\">Hard</SelectItem>\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                  </div>\n+                  \n+                  <div>\n+                    <Label htmlFor=\"exercise\">Exercise (Optional)</Label>\n+                    <Input\n+                      id=\"exercise\"\n+                      value={uploadData.exercise}\n+                      onChange={(e) => setUploadData(prev => ({ ...prev, exercise: e.target.value }))}\n+                      placeholder=\"e.g., Exercise 1.2\"\n+                    />\n+                  </div>\n+                  \n+                  <div>\n+                    <Label htmlFor=\"solution-file\">Solution PDF</Label>\n+                    <Input\n+                      id=\"solution-file\"\n+                      type=\"file\"\n+                      accept=\".pdf\"\n+                      onChange={(e) => {\n+                        const file = e.target.files?.[0] || null;\n+                        setUploadData(prev => ({ ...prev, file }));\n+                      }}\n+                    />\n+                    <p className=\"text-sm text-muted-foreground mt-1\">\n+                      Upload a PDF file containing NCERT solutions\n+                    </p>\n+                  </div>\n+                  \n+                  <div>\n+                    <Label htmlFor=\"thumbnail\">Thumbnail Image (Optional)</Label>\n+                    <Input\n+                      id=\"thumbnail\"\n+                      type=\"file\"\n+                      accept=\"image/*\"\n+                      onChange={(e) => {\n+                        const file = e.target.files?.[0] || null;\n+                        setUploadData(prev => ({ ...prev, thumbnailImage: file }));\n+                      }}\n+                    />\n+                    <p className=\"text-sm text-muted-foreground mt-1\">\n+                      Upload a thumbnail image for this solution\n+                    </p>\n+                  </div>\n+                  \n+                  <Button \n+                    onClick={handleUploadSolution}\n+                    disabled={uploadLoading || !uploadData.file}\n+                    className=\"w-full\"\n+                  >\n+                    {uploadLoading ? (\n+                      <>\n+                        <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n+                        Uploading...\n+                      </>\n+                    ) : (\n+                      <>\n+                        <Upload className=\"w-4 h-4 mr-2\" />\n+                        Upload Solution\n+                      </>\n+                    )}\n+                  </Button>\n+                </div>\n+              </TabsContent>\n+            </Tabs>\n+          </DialogContent>\n+        </Dialog>\n+\n+        {/* Review Dialog */}\n+        <Dialog open={isReviewDialogOpen} onOpenChange={setIsReviewDialogOpen}>\n+          <DialogContent className=\"max-w-5xl max-h-[90vh] overflow-y-auto\">\n+            <DialogHeader>\n+              <DialogTitle className=\"flex items-center gap-2\">\n+                <Brain className=\"h-5 w-5\" />\n+                Review Extracted Q&A Pairs\n+              </DialogTitle>\n+              <DialogDescription>\n+                {selectedSession && (\n+                  <div className=\"flex flex-col gap-1 mt-2\">\n+                    <p>\n+                      <strong>PDF:</strong> {selectedSession.metadata.originalFilename}\n+                    </p>\n+                    <p>\n+                      <strong>Details:</strong> {selectedSession.metadata.board} | Class {selectedSession.metadata.class} | {selectedSession.metadata.subject} | {selectedSession.metadata.chapter}\n+                    </p>\n+                    <p>\n+                      <strong>Extracted:</strong> {selectedSession.totalQuestions} Q&A pairs\n+                    </p>\n+                  </div>\n+                )}\n+              </DialogDescription>\n+            </DialogHeader>\n+\n+            {selectedSession && (\n+              <div className=\"space-y-6 mt-4\">\n+                <div className=\"flex justify-between items-center\">\n+                  <div className=\"flex items-center gap-2\">\n+                    <Badge variant=\"outline\" className=\"text-sm\">\n+                      {selectedSession.qaPairs.length} Q&A Pairs\n+                    </Badge>\n+                    <Badge variant={\n+                      selectedSession.status === 'pending_review' ? 'default' :\n+                      selectedSession.status === 'uploaded_to_database' ? 'secondary' : 'destructive'\n+                    }>\n+                      {selectedSession.status === 'pending_review' ? 'Pending Review' :\n+                       selectedSession.status === 'uploaded_to_database' ? 'Uploaded' : 'Rejected'}\n+                    </Badge>\n+                  </div>\n+                  \n+                  {selectedSession.status === 'pending_review' && (\n+                    <Button \n+                      onClick={() => handleUploadToDatabase(selectedSession.sessionId)}\n+                      disabled={uploadingToDatabase}\n+                    >\n+                      {uploadingToDatabase ? (\n+                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n+                      ) : (\n+                        <Database className=\"mr-2 h-4 w-4\" />\n+                      )}\n+                      Upload All to Database\n+                    </Button>\n+                  )}\n+                </div>\n+                \n+                <div className=\"border rounded-md\">\n+                  <Table>\n+                    <TableHeader>\n+                      <TableRow>\n+                        <TableHead className=\"w-[80px]\">#</TableHead>\n+                        <TableHead className=\"w-[40%]\">Question</TableHead>\n+                        <TableHead>Answer</TableHead>\n+                      </TableRow>\n+                    </TableHeader>\n+                    <TableBody>\n+                      {selectedSession.qaPairs.map((pair, index) => (\n+                        <TableRow key={index}>\n+                          <TableCell className=\"font-medium\">\n+                            {pair.questionNumber || index + 1}\n+                          </TableCell>\n+                          <TableCell className=\"align-top\">\n+                            <div className=\"max-h-[200px] overflow-y-auto\">\n+                              {pair.question}\n+                            </div>\n+                          </TableCell>\n+                          <TableCell className=\"align-top\">\n+                            <div className=\"max-h-[200px] overflow-y-auto\">\n+                              {pair.answer}\n+                            </div>\n+                          </TableCell>\n+                        </TableRow>\n+                      ))}\n+                    </TableBody>\n+                  </Table>\n+                </div>\n+                \n+                <div className=\"flex justify-end gap-2\">\n+                  <Button variant=\"outline\" onClick={() => setIsReviewDialogOpen(false)}>\n+                    Close\n+                  </Button>\n+                  {selectedSession.status === 'pending_review' && (\n+                    <Button onClick={() => handleUploadToDatabase(selectedSession.sessionId)} disabled={uploadingToDatabase}>\n+                      {uploadingToDatabase ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Database className=\"mr-2 h-4 w-4\" />}\n+                      Upload to Database\n+                    </Button>\n+                  )}\n+                </div>\n+              </div>\n+            )}\n+          </DialogContent>\n+        </Dialog>\n+      </div>\n+    </>\n+  );\n+};\n+\n+export default AdminSolutions;",
                    "refToolCallId": "toolu_01KYCrhqJSbaKSCCirnEX7qC"
                },
                {
                    "type": "text",
                    "text": "Now let's create the NCERTSolutions.tsx file:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01NuKpewaSN2xUXPZfncXUZE",
                    "title": "",
                    "statusText": "File already exists",
                    "status": "WARNING",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/NCERTSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\NCERTSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's check if the file already exists and what it contains:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_019aQTmcCjorGoaUjbGr1ZZX",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/NCERTSolutions.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\pages\\NCERTSolutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's create the API endpoints for NCERT solutions:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_016DH1smVATy3cKxGetc2jpQ",
                    "statusText": "Change generated",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "api/ncert-solutions.js",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\api\\ncert-solutions.js"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "codeHunk",
                    "lineBasedDiff": "--- api/ncert-solutions.js\n+++ api/ncert-solutions.js\n@@ -0,0 +1,150 @@\n+// NCERT Solutions API - Handles fetching solutions from the database\n+import { handleCors } from '../utils/cors.js';\n+import { initializeFirebaseAdmin, getFirestoreAdminDb } from '../utils/firebase-admin.js';\n+\n+// Get NCERT solutions based on filters\n+async function getSolutions(req, res) {\n+  if (req.method !== 'GET') {\n+    return res.status(405).json({ message: 'Method not allowed' });\n+  }\n+\n+  try {\n+    initializeFirebaseAdmin();\n+    const db = getFirestoreAdminDb();\n+\n+    const { board, class: className, subject, chapter } = req.query;\n+\n+    // Validate required parameters\n+    if (!board || !className || !subject) {\n+      return res.status(400).json({\n+        success: false,\n+        message: 'Missing required parameters: board, class, and subject are required'\n+      });\n+    }\n+\n+    console.log(`🔍 Fetching NCERT solutions: ${board} | Class ${className} | ${subject}${chapter ? ` | ${chapter}` : ''}`);\n+\n+    // Build query\n+    let query = db.collection('ncert_solutions')\n+      .where('board', '==', board)\n+      .where('class', '==', parseInt(className))\n+      .where('subject', '==', subject)\n+      .where('isApproved', '==', true);\n+\n+    if (chapter) {\n+      query = query.where('chapter', '==', chapter);\n+    }\n+\n+    // Execute query\n+    const snapshot = await query.get();\n+    const solutions = [];\n+\n+    snapshot.forEach(doc => {\n+      const data = doc.data();\n+      solutions.push({\n+        id: doc.id,\n+        ...data,\n+        createdAt: data.createdAt?.toDate?.()?.toISOString?.() || data.createdAt,\n+        updatedAt: data.updatedAt?.toDate?.()?.toISOString?.() || data.updatedAt\n+      });\n+    });\n+\n+    // Sort solutions by chapter and question number\n+    solutions.sort((a, b) => {\n+      if (a.chapter !== b.chapter) {\n+        return a.chapter.localeCompare(b.chapter);\n+      }\n+      return a.questionNumber - b.questionNumber;\n+    });\n+\n+    console.log(`✅ Found ${solutions.length} solutions`);\n+\n+    return res.status(200).json({\n+      success: true,\n+      solutions,\n+      totalCount: solutions.length,\n+      filters: {\n+        board,\n+        class: className,\n+        subject,\n+        chapter: chapter || null\n+      }\n+    });\n+\n+  } catch (error) {\n+    console.error('❌ Get solutions error:', error);\n+    return res.status(500).json({\n+      success: false,\n+      message: 'Failed to get solutions',\n+      error: error.message\n+    });\n+  }\n+}\n+\n+// Get available subjects for a board and class\n+async function getSubjects(req, res) {\n+  if (req.method !== 'GET') {\n+    return res.status(405).json({ message: 'Method not allowed' });\n+  }\n+\n+  try {\n+    initializeFirebaseAdmin();\n+    const db = getFirestoreAdminDb();\n+\n+    const { board, class: className } = req.query;\n+\n+    if (!board || !className) {\n+      return res.status(400).json({\n+        success: false,\n+        message: 'Missing required parameters: board and class are required'\n+      });\n+    }\n+\n+    // Get all approved solutions for the board and class\n+    const snapshot = await db.collection('ncert_solutions')\n+      .where('board', '==', board)\n+      .where('class', '==', parseInt(className))\n+      .where('isApproved', '==', true)\n+      .get();\n+\n+    // Extract unique subjects\n+    const subjectsSet = new Set();\n+    snapshot.forEach(doc => {\n+      const data = doc.data();\n+      subjectsSet.add(data.subject);\n+    });\n+\n+    const subjects = Array.from(subjectsSet).sort();\n+\n+    return res.status(200).json({\n+      success: true,\n+      subjects,\n+      totalCount: subjects.length,\n+      filters: {\n+        board,\n+        class: className\n+      }\n+    });\n+\n+  } catch (error) {\n+    console.error('❌ Get subjects error:', error);\n+    return res.status(500).json({\n+      success: false,\n+      message: 'Failed to get subjects',\n+      error: error.message\n+    });\n+  }\n+}\n+\n+// Main handler with routing\n+export default function handler(req, res) {\n+  return handleCors(req, res, async (req, res) => {\n+    const { path } = req.query;\n+\n+    if (path === 'subjects') {\n+      return await getSubjects(req, res);\n+    } else {\n+      return await getSolutions(req, res);\n+    }\n+  });\n+}",
                    "refToolCallId": "toolu_016DH1smVATy3cKxGetc2jpQ"
                },
                {
                    "type": "text",
                    "text": "Now let's create the AI explanation API endpoint:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01La43FmkBY5f1QtEReHC3hm",
                    "statusText": "Change generated",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "api/ai/explain.js",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\api\\ai\\explain.js"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "codeHunk",
                    "lineBasedDiff": "--- api/ai/explain.js\n+++ api/ai/explain.js\n@@ -0,0 +1,113 @@\n+// AI Explanation API - Provides AI-powered explanations for NCERT solutions\n+import { handleCors } from '../../utils/cors.js';\n+\n+// Groq API configuration\n+const GROQ_API_KEY = process.env.GROQ_API_KEY;\n+const GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';\n+const GROQ_MODEL = 'llama-3.3-70b-versatile';\n+\n+// Get AI explanation for a question and answer\n+async function getExplanation(req, res) {\n+  if (req.method !== 'POST') {\n+    return res.status(405).json({ message: 'Method not allowed' });\n+  }\n+\n+  try {\n+    const { question, answer, userClass, subject } = req.body;\n+\n+    // Validate required parameters\n+    if (!question || !answer) {\n+      return res.status(400).json({\n+        success: false,\n+        message: 'Missing required parameters: question and answer are required'\n+      });\n+    }\n+\n+    // Determine explanation level (one class higher than user's class)\n+    const explanationLevel = userClass ? parseInt(userClass) + 1 : 10;\n+    \n+    console.log(`🧠 Generating AI explanation for question: \"${question.substring(0, 50)}...\"`);\n+    console.log(`📚 Context: Class ${userClass}, Subject: ${subject}, Explanation Level: Class ${explanationLevel}`);\n+\n+    // Create prompt for AI\n+    const prompt = `\n+You are an expert educational tutor specializing in ${subject || 'all subjects'} for Class ${userClass || 'school'} students.\n+\n+I need you to explain the following question and its answer in a way that a Class ${explanationLevel} student can understand.\n+\n+Question: ${question}\n+\n+Answer: ${answer}\n+\n+Please provide:\n+1. A clear, detailed explanation of the concept\n+2. Break down complex parts into simpler terms\n+3. Include relevant examples if helpful\n+4. Highlight key points to remember\n+5. Explain WHY this is the correct answer, not just WHAT the answer is\n+\n+Your explanation should be educational, accurate, and engaging for a student.\n+`;\n+\n+    // Call Groq API\n+    const response = await fetch(GROQ_API_URL, {\n+      method: 'POST',\n+      headers: {\n+        'Authorization': `Bearer ${GROQ_API_KEY}`,\n+        'Content-Type': 'application/json'\n+      },\n+      body: JSON.stringify({\n+        model: GROQ_MODEL,\n+        messages: [\n+          {\n+            role: 'system',\n+            content: `You are an expert educational tutor for Class ${userClass || 'school'} students. Provide clear, detailed explanations that are educational and engaging.`\n+          },\n+          {\n+            role: 'user',\n+            content: prompt\n+          }\n+        ],\n+        max_tokens: 1000,\n+        temperature: 0.7\n+      })\n+    });\n+\n+    if (!response.ok) {\n+      const errorData = await response.json();\n+      throw new Error(`AI API error: ${errorData.error?.message || response.statusText}`);\n+    }\n+\n+    const data = await response.json();\n+    const explanation = data.choices[0].message.content;\n+\n+    console.log(`✅ Generated AI explanation (${explanation.length} chars)`);\n+\n+    return res.status(200).json({\n+      success: true,\n+      explanation,\n+      metadata: {\n+        model: GROQ_MODEL,\n+        generatedAt: new Date().toISOString(),\n+        questionLength: question.length,\n+        answerLength: answer.length,\n+        explanationLength: explanation.length\n+      }\n+    });\n+\n+  } catch (error) {\n+    console.error('❌ AI explanation error:', error);\n+    return res.status(500).json({\n+      success: false,\n+      message: 'Failed to generate AI explanation',\n+      error: error.message\n+    });\n+  }\n+}\n+\n+// Main handler\n+export default function handler(req, res) {\n+  return handleCors(req, res, async (req, res) => {\n+    return await getExplanation(req, res);\n+  });\n+}",
                    "refToolCallId": "toolu_01La43FmkBY5f1QtEReHC3hm"
                },
                {
                    "type": "text",
                    "text": "Now let's update the sidebar to include the NCERT Solutions link:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01A3tSEkpa35avqoXamzpqEz",
                    "title": "",
                    "statusText": "File not found",
                    "status": "WARNING",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/components/Sidebar.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\components\\Sidebar.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's search for the sidebar component:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01QAQ8iVG2rtvbsJo1e9xSk8",
                    "title": "File search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's search for navigation components:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01QU6FoyGpZ6hxwSHMSAfDaM",
                    "title": "File search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's check the App.tsx file to see how the routing is set up:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_019N1nHHYxDKs9TQ9WZKYXhU",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/App.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\App.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's check the MainLayout component to find the navigation:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_0194wsQJXfpvz2iaNycLtZAc",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/components/layout/MainLayout.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\components\\layout\\MainLayout.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Let's check the SlidingSidebar component:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_018oqKCzrm8iW5ce6ji7UDEp",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/components/layout/SlidingSidebar.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\components\\layout\\SlidingSidebar.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Great! I can see that the NCERT Solutions link is already in the sidebar at line 47-51. Now let's update the App.tsx file to include the route for the updated NCERTSolutions page:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01HTXr4jo9o18jbyWS416SgL",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/App.tsx",
                                "fsPath": "E:\\LearnQuest\\LearnQuest\\client\\src\\App.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "I can see that the route for NCERTSolutions is already set up. Let's update the AdminSolutions.tsx file with our changes:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01XLGePZV3zsR4DGwXdP2HY7",
                    "status": "IN_PROGRESS",
                    "isHidden": true,
                    "localResult": "{\"status\":\"SUCCESS\",\"exitCode\":0,\"output\":\"\\u001b[?9001h\\u001b[?1004h\\u001b[?25l\\u001b[2J\\u001b[m\\u001b[H\\u001b]0;C:\\\\WINDOWS\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\u0007\\u001b[?25h\"}"
                },
                {
                    "type": "codePatch",
                    "diffs": [
                        {
                            "path": "client/src/pages/AdminSolutions.tsx.new",
                            "patch": "@@ -0,0 +1,42362 @@\n+import React, %7B useState, useEffect %7D from 'react';%0D%0Aimport %7B Helmet %7D from 'react-helmet';%0D%0Aimport %7B useAuth %7D from '@/hooks/useAuth';%0D%0Aimport %7B config %7D from '@/config';%0D%0Aimport %7B%0D%0A  Card,%0D%0A  CardContent,%0D%0A  CardDescription,%0D%0A  CardHeader,%0D%0A  CardTitle,%0D%0A%7D from '@/components/ui/card';%0D%0Aimport %7B%0D%0A  Table,%0D%0A  TableBody,%0D%0A  TableCell,%0D%0A  TableHead,%0D%0A  TableHeader,%0D%0A  TableRow,%0D%0A%7D from '@/components/ui/table';%0D%0Aimport %7B%0D%0A  Dialog,%0D%0A  DialogContent,%0D%0A  DialogDescription,%0D%0A  DialogFooter,%0D%0A  DialogHeader,%0D%0A  DialogTitle,%0D%0A%7D from %22@/components/ui/dialog%22;%0D%0Aimport %7B%0D%0A  Tabs,%0D%0A  TabsContent,%0D%0A  TabsList,%0D%0A  TabsTrigger,%0D%0A%7D from %22@/components/ui/tabs%22;%0D%0Aimport %7B Button %7D from '@/components/ui/button';%0D%0Aimport %7B Input %7D from '@/components/ui/input';%0D%0Aimport %7B Label %7D from '@/components/ui/label';%0D%0Aimport %7B Textarea %7D from '@/components/ui/textarea';%0D%0Aimport %7B%0D%0A  Select,%0D%0A  SelectContent,%0D%0A  SelectItem,%0D%0A  SelectTrigger,%0D%0A  SelectValue,%0D%0A%7D from '@/components/ui/select';%0D%0Aimport %7B Badge %7D from '@/components/ui/badge';%0D%0Aimport %7B%0D%0A  Upload,%0D%0A  Plus,%0D%0A  Eye,%0D%0A  Edit,%0D%0A  Trash2,%0D%0A  FileText,%0D%0A  BookOpen,%0D%0A  Users,%0D%0A  TrendingUp,%0D%0A  Loader2,%0D%0A  CheckCircle,%0D%0A  AlertCircle,%0D%0A  Brain,%0D%0A  Database,%0D%0A  Download,%0D%0A  RefreshCw%0D%0A%7D from 'lucide-react';%0D%0Aimport %7B useToast %7D from '@/hooks/use-toast';%0D%0A%0D%0Ainterface SolutionStats %7B%0D%0A  totalSolutions: number;%0D%0A  availableSolutions: number;%0D%0A  easySolutions: number;%0D%0A  mediumSolutions: number;%0D%0A  hardSolutions: number;%0D%0A  totalViews: number;%0D%0A%7D%0D%0A%0D%0Ainterface NCERTSolution %7B%0D%0A  id: string;%0D%0A  board: string;%0D%0A  class: string;%0D%0A  subject: string;%0D%0A  chapter: string;%0D%0A  chapterNumber: number;%0D%0A  exercise: string;%0D%0A  totalQuestions: number;%0D%0A  difficulty: 'easy' %7C 'medium' %7C 'hard';%0D%0A  isAvailable: boolean;%0D%0A  viewCount: number;%0D%0A  lastUpdated: string;%0D%0A  createdBy: string;%0D%0A  solutionFile?: string;%0D%0A  contentExtracted?: boolean;%0D%0A%7D%0D%0A%0D%0Ainterface QAPair %7B%0D%0A  question: string;%0D%0A  answer: string;%0D%0A  questionNumber: number;%0D%0A  board: string;%0D%0A  class: string;%0D%0A  subject: string;%0D%0A  chapter: string;%0D%0A  confidence: number;%0D%0A%7D%0D%0A%0D%0Ainterface ProcessingSession %7B%0D%0A  sessionId: string;%0D%0A  status: 'pending_review' %7C 'uploaded_to_database' %7C 'rejected';%0D%0A  metadata: %7B%0D%0A    board: string;%0D%0A    class: string;%0D%0A    subject: string;%0D%0A    chapter: string;%0D%0A    originalFilename: string;%0D%0A    fileSize: number;%0D%0A    uploadedAt: string;%0D%0A  %7D;%0D%0A  qaPairs: QAPair%5B%5D;%0D%0A  totalQuestions: number;%0D%0A  createdAt: string;%0D%0A%7D%0D%0A%0D%0Aconst AdminSolutions: React.FC = () =%3E %7B%0D%0A  const %7B user %7D = useAuth();%0D%0A  const %7B toast %7D = useToast();%0D%0A%0D%0A  // State%0D%0A  const %5Bsolutions, setSolutions%5D = useState%3CNCERTSolution%5B%5D%3E(%5B%5D);%0D%0A  const %5Bstats, setStats%5D = useState%3CSolutionStats %7C null%3E(null);%0D%0A  const %5Bloading, setLoading%5D = useState(true);%0D%0A  const %5BisUploadDialogOpen, setIsUploadDialogOpen%5D = useState(false);%0D%0A  const %5BuploadLoading, setUploadLoading%5D = useState(false);%0D%0A  %0D%0A  // Smart PDF Upload State%0D%0A  const %5BprocessingSessions, setProcessingSessions%5D = useState%3CProcessingSession%5B%5D%3E(%5B%5D);%0D%0A  const %5BselectedSession, setSelectedSession%5D = useState%3CProcessingSession %7C null%3E(null);%0D%0A  const %5BisReviewDialogOpen, setIsReviewDialogOpen%5D = useState(false);%0D%0A  const %5BuploadingToDatabase, setUploadingToDatabase%5D = useState(false);%0D%0A  %0D%0A  // Upload form state%0D%0A  const %5BuploadData, setUploadData%5D = useState(%7B%0D%0A    board: '',%0D%0A    class: '',%0D%0A    subject: '',%0D%0A    chapter: '',%0D%0A    chapterNumber: 1,%0D%0A    exercise: '',%0D%0A    difficulty: 'medium' as 'easy' %7C 'medium' %7C 'hard',%0D%0A    file: null as File %7C null,%0D%0A    thumbnailImage: null as File %7C null%0D%0A  %7D);%0D%0A%0D%0A  // Smart PDF upload form state%0D%0A  const %5BsmartUploadData, setSmartUploadData%5D = useState(%7B%0D%0A    board: '',%0D%0A    class: '',%0D%0A    subject: '',%0D%0A    chapter: '',%0D%0A    pdfFile: null as File %7C null%0D%0A  %7D);%0D%0A%0D%0A  // Check admin access%0D%0A  useEffect(() =%3E %7B%0D%0A    if (user && user.role !== 'admin') %7B%0D%0A      toast(%7B%0D%0A        title: %22Access Denied%22,%0D%0A        description: %22Admin access required%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A      // Redirect to dashboard or solutions page%0D%0A      window.location.href = '/dashboard';%0D%0A    %7D%0D%0A  %7D, %5Buser%5D);%0D%0A%0D%0A  // Fetch solutions and stats%0D%0A  const fetchData = async () =%3E %7B%0D%0A    setLoading(true);%0D%0A    try %7B%0D%0A      const %5BsolutionsResponse, statsResponse%5D = await Promise.all(%5B%0D%0A        fetch(%60$%7Bconfig.apiUrl%7D/api/ncert-solutions?limit=100%60, %7B%0D%0A          headers: %7B%0D%0A            'Authorization': %60Bearer $%7BlocalStorage.getItem('token')%7D%60,%0D%0A            'Content-Type': 'application/json',%0D%0A          %7D,%0D%0A        %7D),%0D%0A        fetch(%60$%7Bconfig.apiUrl%7D/api/ncert-solutions/stats%60, %7B%0D%0A          headers: %7B%0D%0A            'Authorization': %60Bearer $%7BlocalStorage.getItem('token')%7D%60,%0D%0A            'Content-Type': 'application/json',%0D%0A          %7D,%0D%0A        %7D)%0D%0A      %5D);%0D%0A%0D%0A      if (solutionsResponse.ok) %7B%0D%0A        const solutionsData = await solutionsResponse.json();%0D%0A        setSolutions(solutionsData.solutions %7C%7C %5B%5D);%0D%0A      %7D%0D%0A%0D%0A      if (statsResponse.ok) %7B%0D%0A        const statsData = await statsResponse.json();%0D%0A        setStats(statsData);%0D%0A      %7D%0D%0A%0D%0A    %7D catch (error) %7B%0D%0A      console.error('Error fetching data:', error);%0D%0A      toast(%7B%0D%0A        title: %22Error%22,%0D%0A        description: %22Failed to load solutions data%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A    %7D finally %7B%0D%0A      setLoading(false);%0D%0A    %7D%0D%0A  %7D;%0D%0A%0D%0A  // Handle solution upload%0D%0A  const handleUploadSolution = async () =%3E %7B%0D%0A    if (!uploadData.file) %7B%0D%0A      toast(%7B%0D%0A        title: %22Error%22,%0D%0A        description: %22Please select a solution file to upload%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A      return;%0D%0A    %7D%0D%0A%0D%0A    setUploadLoading(true);%0D%0A    %0D%0A    try %7B%0D%0A      const formData = new FormData();%0D%0A      formData.append('board', uploadData.board);%0D%0A      formData.append('class', uploadData.class);%0D%0A      formData.append('subject', uploadData.subject);%0D%0A      formData.append('chapter', uploadData.chapter);%0D%0A      formData.append('chapterNumber', uploadData.chapterNumber.toString());%0D%0A      formData.append('exercise', uploadData.exercise);%0D%0A      formData.append('difficulty', uploadData.difficulty);%0D%0A      formData.append('solutionFile', uploadData.file);%0D%0A      %0D%0A      if (uploadData.thumbnailImage) %7B%0D%0A        formData.append('thumbnailImage', uploadData.thumbnailImage);%0D%0A      %7D%0D%0A%0D%0A      const response = await fetch(%60$%7Bconfig.apiUrl%7D/api/ncert-solutions/upload%60, %7B%0D%0A        method: 'POST',%0D%0A        headers: %7B%0D%0A          'Authorization': %60Bearer $%7BlocalStorage.getItem('token')%7D%60,%0D%0A        %7D,%0D%0A        body: formData,%0D%0A      %7D);%0D%0A%0D%0A      if (!response.ok) %7B%0D%0A        throw new Error('Failed to upload solution');%0D%0A      %7D%0D%0A%0D%0A      const result = await response.json();%0D%0A      %0D%0A      toast(%7B%0D%0A        title: %22Success%22,%0D%0A        description: result.pdfProcessing?.success %0D%0A          ? %60Solution uploaded and $%7Bresult.pdfProcessing.questionsProcessed%7D questions extracted!%60%0D%0A          : %22Solution uploaded successfully!%22,%0D%0A      %7D);%0D%0A%0D%0A      setIsUploadDialogOpen(false);%0D%0A      setUploadData(%7B%0D%0A        board: '',%0D%0A        class: '',%0D%0A        subject: '',%0D%0A        chapter: '',%0D%0A        chapterNumber: 1,%0D%0A        exercise: '',%0D%0A        difficulty: 'medium',%0D%0A        file: null,%0D%0A        thumbnailImage: null%0D%0A      %7D);%0D%0A      %0D%0A      // Refresh data%0D%0A      fetchData();%0D%0A%0D%0A    %7D catch (err) %7B%0D%0A      console.error('Error uploading solution:', err);%0D%0A      toast(%7B%0D%0A        title: %22Error%22,%0D%0A        description: err instanceof Error ? err.message : %22Failed to upload solution%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A    %7D finally %7B%0D%0A      setUploadLoading(false);%0D%0A    %7D%0D%0A  %7D;%0D%0A%0D%0A  // Handle smart PDF upload%0D%0A  const handleSmartPDFUpload = async () =%3E %7B%0D%0A    if (!smartUploadData.pdfFile %7C%7C !smartUploadData.board %7C%7C !smartUploadData.class %7C%7C %0D%0A        !smartUploadData.subject %7C%7C !smartUploadData.chapter) %7B%0D%0A      toast(%7B%0D%0A        title: %22Error%22,%0D%0A        description: %22Please fill all fields and select a PDF file%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A      return;%0D%0A    %7D%0D%0A%0D%0A    setUploadLoading(true);%0D%0A    %0D%0A    try %7B%0D%0A      const formData = new FormData();%0D%0A      formData.append('board', smartUploadData.board);%0D%0A      formData.append('class', smartUploadData.class);%0D%0A      formData.append('subject', smartUploadData.subject);%0D%0A      formData.append('chapter', smartUploadData.chapter);%0D%0A      formData.append('pdfFile', smartUploadData.pdfFile);%0D%0A%0D%0A      const response = await fetch(%60$%7Bconfig.apiUrl%7D/api/smart-pdf-upload?action=upload%60, %7B%0D%0A        method: 'POST',%0D%0A        headers: %7B%0D%0A          'x-user-id': user?.uid %7C%7C 'admin',%0D%0A        %7D,%0D%0A        body: formData,%0D%0A      %7D);%0D%0A%0D%0A      if (!response.ok) %7B%0D%0A        throw new Error('Failed to process PDF');%0D%0A      %7D%0D%0A%0D%0A      const result = await response.json();%0D%0A      %0D%0A      if (result.success) %7B%0D%0A        toast(%7B%0D%0A          title: %22PDF Processed Successfully! %F0%9F%8E%89%22,%0D%0A          description: %60Extracted $%7Bresult.totalQuestions%7D Q&A pairs. Ready for review.%60,%0D%0A        %7D);%0D%0A%0D%0A        // Reset form%0D%0A        setSmartUploadData(%7B%0D%0A          board: '',%0D%0A          class: '',%0D%0A          subject: '',%0D%0A          chapter: '',%0D%0A          pdfFile: null%0D%0A        %7D);%0D%0A%0D%0A        // Refresh processing sessions%0D%0A        fetchProcessingSessions();%0D%0A      %7D else %7B%0D%0A        throw new Error(result.message %7C%7C 'Failed to process PDF');%0D%0A      %7D%0D%0A%0D%0A    %7D catch (err) %7B%0D%0A      console.error('Error processing PDF:', err);%0D%0A      toast(%7B%0D%0A        title: %22Error%22,%0D%0A        description: err instanceof Error ? err.message : %22Failed to process PDF%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A    %7D finally %7B%0D%0A      setUploadLoading(false);%0D%0A    %7D%0D%0A  %7D;%0D%0A%0D%0A  // Fetch processing sessions%0D%0A  const fetchProcessingSessions = async () =%3E %7B%0D%0A    try %7B%0D%0A      const response = await fetch(%60$%7Bconfig.apiUrl%7D/api/smart-pdf-upload?action=sessions%60, %7B%0D%0A        headers: %7B%0D%0A          'x-user-id': user?.uid %7C%7C 'admin',%0D%0A        %7D,%0D%0A      %7D);%0D%0A%0D%0A      if (response.ok) %7B%0D%0A        const data = await response.json();%0D%0A        setProcessingSessions(data.sessions %7C%7C %5B%5D);%0D%0A      %7D%0D%0A    %7D catch (error) %7B%0D%0A      console.error('Error fetching processing sessions:', error);%0D%0A    %7D%0D%0A  %7D;%0D%0A%0D%0A  // Handle upload to database%0D%0A  const handleUploadToDatabase = async (sessionId: string) =%3E %7B%0D%0A    setUploadingToDatabase(true);%0D%0A    %0D%0A    try %7B%0D%0A      const response = await fetch(%60$%7Bconfig.apiUrl%7D/api/smart-pdf-upload?action=upload-to-database%60, %7B%0D%0A        method: 'POST',%0D%0A        headers: %7B%0D%0A          'Content-Type': 'application/json',%0D%0A          'x-user-id': user?.uid %7C%7C 'admin',%0D%0A        %7D,%0D%0A        body: JSON.stringify(%7B sessionId %7D),%0D%0A      %7D);%0D%0A%0D%0A      if (!response.ok) %7B%0D%0A        throw new Error('Failed to upload to database');%0D%0A      %7D%0D%0A%0D%0A      const result = await response.json();%0D%0A      %0D%0A      if (result.success) %7B%0D%0A        toast(%7B%0D%0A          title: %22Success! %F0%9F%9A%80%22,%0D%0A          description: %60Uploaded $%7Bresult.uploadedCount%7D Q&A pairs to database%60,%0D%0A        %7D);%0D%0A%0D%0A        // Refresh data%0D%0A        fetchProcessingSessions();%0D%0A        fetchData();%0D%0A        setIsReviewDialogOpen(false);%0D%0A      %7D else %7B%0D%0A        throw new Error(result.message %7C%7C 'Failed to upload to database');%0D%0A      %7D%0D%0A%0D%0A    %7D catch (err) %7B%0D%0A      console.error('Error uploading to database:', err);%0D%0A      toast(%7B%0D%0A        title: %22Error%22,%0D%0A        description: err instanceof Error ? err.message : %22Failed to upload to database%22,%0D%0A        variant: %22destructive%22,%0D%0A      %7D);%0D%0A    %7D finally %7B%0D%0A      setUploadingToDatabase(false);%0D%0A    %7D%0D%0A  %7D;%0D%0A%0D%0A  // Open review dialog%0D%0A  const openReviewDialog = (session: ProcessingSession) =%3E %7B%0D%0A    setSelectedSession(session);%0D%0A    setIsReviewDialogOpen(true);%0D%0A  %7D;%0D%0A%0D%0A  // Initial load%0D%0A  useEffect(() =%3E %7B%0D%0A    if (user?.role === 'admin') %7B%0D%0A      fetchData();%0D%0A      fetchProcessingSessions();%0D%0A    %7D%0D%0A  %7D, %5Buser%5D);%0D%0A%0D%0A  if (user?.role !== 'admin') %7B%0D%0A    return (%0D%0A      %3Cdiv className=%22container mx-auto py-8%22%3E%0D%0A        %3Cdiv className=%22text-center%22%3E%0D%0A          %3CAlertCircle className=%22h-12 w-12 mx-auto mb-4 text-red-500%22 /%3E%0D%0A          %3Ch1 className=%22text-2xl font-bold mb-2%22%3EAccess Denied%3C/h1%3E%0D%0A          %3Cp className=%22text-muted-foreground%22%3EAdmin access required to view this page.%3C/p%3E%0D%0A        %3C/div%3E%0D%0A      %3C/div%3E%0D%0A    );%0D%0A  %7D%0D%0A%0D%0A  return (%0D%0A    %3C%3E%0D%0A      %3CHelmet%3E%0D%0A        %3Ctitle%3EAdmin Solutions - LearnQuest%3C/title%3E%0D%0A        %3Cmeta name=%22description%22 content=%22Manage NCERT solutions and content.%22 /%3E%0D%0A      %3C/Helmet%3E%0D%0A%0D%0A      %3Cdiv className=%22container mx-auto py-8 space-y-8%22%3E%0D%0A        %7B/* Header */%7D%0D%0A        %3Cdiv className=%22flex flex-col md:flex-row md:items-center md:justify-between gap-4%22%3E%0D%0A          %3Cdiv%3E%0D%0A            %3Ch1 className=%22text-3xl font-bold%22%3ESolutions Management%3C/h1%3E%0D%0A            %3Cp className=%22text-muted-foreground%22%3E%0D%0A              Upload and manage NCERT solutions for students%0D%0A            %3C/p%3E%0D%0A          %3C/div%3E%0D%0A          %0D%0A          %3Cdiv className=%22flex gap-2%22%3E%0D%0A            %3CButton onClick=%7B() =%3E setIsUploadDialogOpen(true)%7D%3E%0D%0A              %3CBrain className=%22w-4 h-4 mr-2%22 /%3E%0D%0A              Smart PDF Upload%0D%0A            %3C/Button%3E%0D%0A            %3CButton variant=%22outline%22 onClick=%7B() =%3E %7BfetchData(); fetchProcessingSessions();%7D%7D%3E%0D%0A              %3CRefreshCw className=%22w-4 h-4 mr-2%22 /%3E%0D%0A              Refresh%0D%0A            %3C/Button%3E%0D%0A          %3C/div%3E%0D%0A        %3C/div%3E%0D%0A%0D%0A        %7B/* Stats Cards */%7D%0D%0A        %3Cdiv className=%22grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4%22%3E%0D%0A          %3CCard%3E%0D%0A            %3CCardHeader className=%22pb-2%22%3E%0D%0A              %3CCardTitle className=%22text-sm font-medium%22%3ETotal Solutions%3C/CardTitle%3E%0D%0A            %3C/CardHeader%3E%0D%0A            %3CCardContent%3E%0D%0A              %3Cdiv className=%22text-2xl font-bold%22%3E%0D%0A                %7Bloading ? '...' : stats?.totalSolutions %7C%7C 0%7D%0D%0A              %3C/div%3E%0D%0A              %3Cp className=%22text-xs text-muted-foreground mt-1%22%3E%0D%0A                Total NCERT solutions in database%0D%0A              %3C/p%3E%0D%0A            %3C/CardContent%3E%0D%0A          %3C/Card%3E%0D%0A          %0D%0A          %3CCard%3E%0D%0A            %3CCardHeader className=%22pb-2%22%3E%0D%0A              %3CCardTitle className=%22text-sm font-medium%22%3EAvailable Solutions%3C/CardTitle%3E%0D%0A            %3C/CardHeader%3E%0D%0A            %3CCardContent%3E%0D%0A              %3Cdiv className=%22text-2xl font-bold%22%3E%0D%0A                %7Bloading ? '...' : stats?.availableSolutions %7C%7C 0%7D%0D%0A              %3C/div%3E%0D%0A              %3Cp className=%22text-xs text-muted-foreground mt-1%22%3E%0D%0A                Solutions available to students%0D%0A              %3C/p%3E%0D%0A            %3C/CardContent%3E%0D%0A          %3C/Card%3E%0D%0A          %0D%0A          %3CCard%3E%0D%0A            %3CCardHeader className=%22pb-2%22%3E%0D%0A              %3CCardTitle className=%22text-sm font-medium%22%3ETotal Views%3C/CardTitle%3E%0D%0A            %3C/CardHeader%3E%0D%0A            %3CCardContent%3E%0D%0A              %3Cdiv className=%22text-2xl font-bold%22%3E%0D%0A                %7Bloading ? '...' : stats?.totalViews %7C%7C 0%7D%0D%0A              %3C/div%3E%0D%0A              %3Cp className=%22text-xs text-muted-foreground mt-1%22%3E%0D%0A                Total solution views by students%0D%0A              %3C/p%3E%0D%0A            %3C/CardContent%3E%0D%0A          %3C/Card%3E%0D%0A          %0D%0A          %3CCard%3E%0D%0A            %3CCardHeader className=%22pb-2%22%3E%0D%0A              %3CCardTitle className=%22text-sm font-medium%22%3EDifficulty Breakdown%3C/CardTitle%3E%0D%0A            %3C/CardHeader%3E%0D%0A            %3CCardContent%3E%0D%0A              %3Cdiv className=%22flex items-center gap-2%22%3E%0D%0A                %3CBadge variant=%22default%22%3E%0D%0A                  Easy: %7Bloading ? '...' : stats?.easySolutions %7C%7C 0%7D%0D%0A                %3C/Badge%3E%0D%0A                %3CBadge variant=%22secondary%22%3E%0D%0A                  Medium: %7Bloading ? '...' : stats?.mediumSolutions %7C%7C 0%7D%0D%0A                %3C/Badge%3E%0D%0A                %3CBadge variant=%22destructive%22%3E%0D%0A                  Hard: %7Bloading ? '...' : stats?.hardSolutions %7C%7C 0%7D%0D%0A                %3C/Badge%3E%0D%0A              %3C/div%3E%0D%0A            %3C/CardContent%3E%0D%0A          %3C/Card%3E%0D%0A        %3C/div%3E%0D%0A        %0D%0A        %7B/* Processing Sessions */%7D%0D%0A        %3CCard%3E%0D%0A          %3CCardHeader%3E%0D%0A            %3CCardTitle className=%22flex items-center gap-2%22%3E%0D%0A              %3CBrain className=%22h-5 w-5%22 /%3E%0D%0A              Smart PDF Processing Sessions%0D%0A            %3C/CardTitle%3E%0D%0A            %3CCardDescription%3E%0D%0A              Review and manage PDF processing sessions%0D%0A            %3C/CardDescription%3E%0D%0A          %3C/CardHeader%3E%0D%0A          %3CCardContent%3E%0D%0A            %7BprocessingSessions.length === 0 ? (%0D%0A              %3Cdiv className=%22text-center py-8%22%3E%0D%0A                %3Cp className=%22text-muted-foreground%22%3ENo processing sessions found%3C/p%3E%0D%0A                %3Cp className=%22text-sm text-muted-foreground mt-2%22%3E%0D%0A                  Upload a PDF using Smart PDF Upload to get started%0D%0A                %3C/p%3E%0D%0A              %3C/div%3E%0D%0A            ) : (%0D%0A              %3CTable%3E%0D%0A                %3CTableHeader%3E%0D%0A                  %3CTableRow%3E%0D%0A                    %3CTableHead%3EDate%3C/TableHead%3E%0D%0A                    %3CTableHead%3EFile%3C/TableHead%3E%0D%0A                    %3CTableHead%3EDetails%3C/TableHead%3E%0D%0A                    %3CTableHead%3EQuestions%3C/TableHead%3E%0D%0A                    %3CTableHead%3EStatus%3C/TableHead%3E%0D%0A                    %3CTableHead%3EActions%3C/TableHead%3E%0D%0A                  %3C/TableRow%3E%0D%0A                %3C/TableHeader%3E%0D%0A                %3CTableBody%3E%0D%0A                  %7BprocessingSessions.map((session) =%3E (%0D%0A                    %3CTableRow key=%7Bsession.sessionId%7D%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %7Bnew Date(session.createdAt).toLocaleDateString()%7D%0D%0A                      %3C/TableCell%3E%0D%0A                      %3CTableCell className=%22font-medium%22%3E%0D%0A                        %7Bsession.metadata.originalFilename%7D%0D%0A                      %3C/TableCell%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %7Bsession.metadata.board%7D %7C Class %7Bsession.metadata.class%7D %7C %7Bsession.metadata.subject%7D%0D%0A                      %3C/TableCell%3E%0D%0A                      %3CTableCell%3E%7Bsession.totalQuestions%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %3CBadge variant=%7B%0D%0A                          session.status === 'pending_review' ? 'default' :%0D%0A                          session.status === 'uploaded_to_database' ? 'secondary' : 'destructive'%0D%0A                        %7D%3E%0D%0A                          %7Bsession.status === 'pending_review' ? 'Pending Review' :%0D%0A                           session.status === 'uploaded_to_database' ? 'Uploaded' : 'Rejected'%7D%0D%0A                        %3C/Badge%3E%0D%0A                      %3C/TableCell%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %3Cdiv className=%22flex items-center gap-2%22%3E%0D%0A                          %3CButton size=%22sm%22 variant=%22outline%22 onClick=%7B() =%3E openReviewDialog(session)%7D%3E%0D%0A                            %3CEye className=%22w-4 h-4 mr-2%22 /%3E%0D%0A                            Review%0D%0A                          %3C/Button%3E%0D%0A                          %7Bsession.status === 'pending_review' && (%0D%0A                            %3CButton size=%22sm%22 onClick=%7B() =%3E handleUploadToDatabase(session.sessionId)%7D%3E%0D%0A                              %3CDatabase className=%22w-4 h-4 mr-2%22 /%3E%0D%0A                              Upload%0D%0A                            %3C/Button%3E%0D%0A                          )%7D%0D%0A                        %3C/div%3E%0D%0A                      %3C/TableCell%3E%0D%0A                    %3C/TableRow%3E%0D%0A                  ))%7D%0D%0A                %3C/TableBody%3E%0D%0A              %3C/Table%3E%0D%0A            )%7D%0D%0A          %3C/CardContent%3E%0D%0A        %3C/Card%3E%0D%0A%0D%0A        %7B/* Solutions Table */%7D%0D%0A        %3CCard%3E%0D%0A          %3CCardHeader%3E%0D%0A            %3CCardTitle className=%22flex items-center gap-2%22%3E%0D%0A              %3CBookOpen className=%22h-5 w-5%22 /%3E%0D%0A              NCERT Solutions%0D%0A            %3C/CardTitle%3E%0D%0A            %3CCardDescription%3E%0D%0A              Manage uploaded NCERT solutions%0D%0A            %3C/CardDescription%3E%0D%0A          %3C/CardHeader%3E%0D%0A          %3CCardContent%3E%0D%0A            %7Bloading ? (%0D%0A              %3Cdiv className=%22text-center py-8%22%3E%0D%0A                %3CLoader2 className=%22h-8 w-8 mx-auto animate-spin text-muted-foreground%22 /%3E%0D%0A                %3Cp className=%22mt-2 text-muted-foreground%22%3ELoading solutions...%3C/p%3E%0D%0A              %3C/div%3E%0D%0A            ) : solutions.length === 0 ? (%0D%0A              %3Cdiv className=%22text-center py-8%22%3E%0D%0A                %3Cp className=%22text-muted-foreground%22%3ENo solutions found%3C/p%3E%0D%0A                %3Cp className=%22text-sm text-muted-foreground mt-2%22%3E%0D%0A                  Upload a solution to get started%0D%0A                %3C/p%3E%0D%0A              %3C/div%3E%0D%0A            ) : (%0D%0A              %3CTable%3E%0D%0A                %3CTableHeader%3E%0D%0A                  %3CTableRow%3E%0D%0A                    %3CTableHead%3ESubject%3C/TableHead%3E%0D%0A                    %3CTableHead%3EClass%3C/TableHead%3E%0D%0A                    %3CTableHead%3EChapter%3C/TableHead%3E%0D%0A                    %3CTableHead%3EExercise%3C/TableHead%3E%0D%0A                    %3CTableHead%3EDifficulty%3C/TableHead%3E%0D%0A                    %3CTableHead%3EQuestions%3C/TableHead%3E%0D%0A                    %3CTableHead%3EViews%3C/TableHead%3E%0D%0A                    %3CTableHead%3EStatus%3C/TableHead%3E%0D%0A                    %3CTableHead%3EActions%3C/TableHead%3E%0D%0A                  %3C/TableRow%3E%0D%0A                %3C/TableHeader%3E%0D%0A                %3CTableBody%3E%0D%0A                  %7Bsolutions.map((solution) =%3E (%0D%0A                    %3CTableRow key=%7Bsolution.id%7D%3E%0D%0A                      %3CTableCell className=%22font-medium%22%3E%7Bsolution.subject%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%7Bsolution.class%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%7Bsolution.chapter%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%7Bsolution.exercise%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %3CBadge variant=%7B%0D%0A                          solution.difficulty === 'easy' ? 'default' :%0D%0A                          solution.difficulty === 'medium' ? 'secondary' : 'destructive'%0D%0A                        %7D%3E%0D%0A                          %7Bsolution.difficulty%7D%0D%0A                        %3C/Badge%3E%0D%0A                      %3C/TableCell%3E%0D%0A                      %3CTableCell%3E%7Bsolution.totalQuestions%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%7Bsolution.viewCount%7D%3C/TableCell%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %3Cdiv className=%22flex items-center gap-2%22%3E%0D%0A                          %7Bsolution.isAvailable ? (%0D%0A                            %3CBadge className=%22bg-green-600%22%3EAvailable%3C/Badge%3E%0D%0A                          ) : (%0D%0A                            %3CBadge variant=%22secondary%22%3EDraft%3C/Badge%3E%0D%0A                          )%7D%0D%0A                          %7Bsolution.contentExtracted && (%0D%0A                            %3CBadge variant=%22outline%22%3EProcessed%3C/Badge%3E%0D%0A                          )%7D%0D%0A                        %3C/div%3E%0D%0A                      %3C/TableCell%3E%0D%0A                      %3CTableCell%3E%0D%0A                        %3Cdiv className=%22flex items-center gap-2%22%3E%0D%0A                          %3CButton size=%22sm%22 variant=%22outline%22%3E%0D%0A                            %3CEye className=%22w-4 h-4%22 /%3E%0D%0A                          %3C/Button%3E%0D%0A                          %3CButton size=%22sm%22 variant=%22outline%22%3E%0D%0A                            %3CEdit className=%22w-4 h-4%22 /%3E%0D%0A                          %3C/Button%3E%0D%0A                        %3C/div%3E%0D%0A                      %3C/TableCell%3E%0D%0A                    %3C/TableRow%3E%0D%0A                  ))%7D%0D%0A                %3C/TableBody%3E%0D%0A              %3C/Table%3E%0D%0A            )%7D%0D%0A          %3C/CardContent%3E%0D%0A        %3C/Card%3E%0D%0A%0D%0A        %7B/* Upload Dialog */%7D%0D%0A        %3CDialog open=%7BisUploadDialogOpen%7D onOpenChange=%7BsetIsUploadDialogOpen%7D%3E%0D%0A          %3CDialogContent className=%22max-w-3xl max-h-%5B90vh%5D overflow-y-auto%22%3E%0D%0A            %3CDialogHeader className=%22mb-4%22%3E%0D%0A              %3CDialogTitle className=%22flex items-center gap-2%22%3E%0D%0A                %3CUpload className=%22h-5 w-5%22 /%3E%0D%0A                Upload NCERT Solution%0D%0A              %3C/DialogTitle%3E%0D%0A              %3CDialogDescription%3E%0D%0A                Add a new NCERT solution to the database%0D%0A              %3C/DialogDescription%3E%0D%0A            %3C/DialogHeader%3E%0D%0A            %0D%0A            %3CTabs defaultValue=%22smart-upload%22 className=%22w-full%22%3E%0D%0A              %3CTabsList className=%22grid w-full grid-cols-2%22%3E%0D%0A                %3CTabsTrigger value=%22smart-upload%22 className=%22flex items-center gap-2%22%3E%0D%0A                  %3CBrain className=%22h-4 w-4%22 /%3E%0D%0A                  Smart PDF Upload%0D%0A                %3C/TabsTrigger%3E%0D%0A                %3CTabsTrigger value=%22manual-upload%22 className=%22flex items-center gap-2%22%3E%0D%0A                  %3CFileText className=%22h-4 w-4%22 /%3E%0D%0A                  Manual Upload%0D%0A                %3C/TabsTrigger%3E%0D%0A              %3C/TabsList%3E%0D%0A              %0D%0A              %7B/* Smart PDF Upload Tab */%7D%0D%0A              %3CTabsContent value=%22smart-upload%22 className=%22mt-4%22%3E%0D%0A                %3Cdiv className=%22space-y-4%22%3E%0D%0A                  %3Cdiv className=%22grid grid-cols-1 gap-4 md:grid-cols-2%22%3E%0D%0A                    %3Cdiv className=%22space-y-2%22%3E%0D%0A                      %3CLabel htmlFor=%22smart-board%22%3EBoard%3C/Label%3E%0D%0A                      %3CSelect%0D%0A                        value=%7BsmartUploadData.board%7D%0D%0A                        onValueChange=%7B(value) =%3E setSmartUploadData(%7B...smartUploadData, board: value%7D)%7D%0D%0A                      %3E%0D%0A                        %3CSelectTrigger id=%22smart-board%22%3E%0D%0A                          %3CSelectValue placeholder=%22Select Board%22 /%3E%0D%0A                        %3C/SelectTrigger%3E%0D%0A                        %3CSelectContent%3E%0D%0A                          %3CSelectItem value=%22CBSE%22%3ECBSE%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22ICSE%22%3EICSE%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22State%22%3EState Board%3C/SelectItem%3E%0D%0A                        %3C/SelectContent%3E%0D%0A                      %3C/Select%3E%0D%0A                    %3C/div%3E%0D%0A                    %0D%0A                    %3Cdiv className=%22space-y-2%22%3E%0D%0A                      %3CLabel htmlFor=%22smart-class%22%3EClass%3C/Label%3E%0D%0A                      %3CSelect%0D%0A                        value=%7BsmartUploadData.class%7D%0D%0A                        onValueChange=%7B(value) =%3E setSmartUploadData(%7B...smartUploadData, class: value%7D)%7D%0D%0A                      %3E%0D%0A                        %3CSelectTrigger id=%22smart-class%22%3E%0D%0A                          %3CSelectValue placeholder=%22Select Class%22 /%3E%0D%0A                        %3C/SelectTrigger%3E%0D%0A                        %3CSelectContent%3E%0D%0A                          %7B%5B...Array(12)%5D.map((_, i) =%3E (%0D%0A                            %3CSelectItem key=%7Bi + 1%7D value=%7B(i + 1).toString()%7D%3E%0D%0A                              Class %7Bi + 1%7D%0D%0A                            %3C/SelectItem%3E%0D%0A                          ))%7D%0D%0A                        %3C/SelectContent%3E%0D%0A                      %3C/Select%3E%0D%0A                    %3C/div%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv className=%22grid grid-cols-1 gap-4 md:grid-cols-2%22%3E%0D%0A                    %3Cdiv className=%22space-y-2%22%3E%0D%0A                      %3CLabel htmlFor=%22smart-subject%22%3ESubject%3C/Label%3E%0D%0A                      %3CSelect%0D%0A                        value=%7BsmartUploadData.subject%7D%0D%0A                        onValueChange=%7B(value) =%3E setSmartUploadData(%7B...smartUploadData, subject: value%7D)%7D%0D%0A                      %3E%0D%0A                        %3CSelectTrigger id=%22smart-subject%22%3E%0D%0A                          %3CSelectValue placeholder=%22Select Subject%22 /%3E%0D%0A                        %3C/SelectTrigger%3E%0D%0A                        %3CSelectContent%3E%0D%0A                          %3CSelectItem value=%22Mathematics%22%3EMathematics%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Science%22%3EScience%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Physics%22%3EPhysics%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Chemistry%22%3EChemistry%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Biology%22%3EBiology%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22English%22%3EEnglish%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Hindi%22%3EHindi%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Social Science%22%3ESocial Science%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22History%22%3EHistory%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Geography%22%3EGeography%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Civics%22%3ECivics%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22Economics%22%3EEconomics%3C/SelectItem%3E%0D%0A                        %3C/SelectContent%3E%0D%0A                      %3C/Select%3E%0D%0A                    %3C/div%3E%0D%0A                    %0D%0A                    %3Cdiv className=%22space-y-2%22%3E%0D%0A                      %3CLabel htmlFor=%22smart-chapter%22%3EChapter%3C/Label%3E%0D%0A                      %3CInput%0D%0A                        id=%22smart-chapter%22%0D%0A                        placeholder=%22Enter Chapter Name%22%0D%0A                        value=%7BsmartUploadData.chapter%7D%0D%0A                        onChange=%7B(e) =%3E setSmartUploadData(%7B...smartUploadData, chapter: e.target.value%7D)%7D%0D%0A                      /%3E%0D%0A                    %3C/div%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv className=%22space-y-2%22%3E%0D%0A                    %3CLabel htmlFor=%22smart-pdf-file%22%3EPDF File%3C/Label%3E%0D%0A                    %3CInput%0D%0A                      id=%22smart-pdf-file%22%0D%0A                      type=%22file%22%0D%0A                      accept=%22.pdf%22%0D%0A                      onChange=%7B(e) =%3E %7B%0D%0A                        const file = e.target.files?.%5B0%5D %7C%7C null;%0D%0A                        setSmartUploadData(%7B...smartUploadData, pdfFile: file%7D);%0D%0A                      %7D%7D%0D%0A                    /%3E%0D%0A                    %3Cp className=%22text-sm text-muted-foreground%22%3E%0D%0A                      Upload a PDF file containing NCERT solutions. The system will automatically extract questions and answers.%0D%0A                    %3C/p%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3CButton %0D%0A                    className=%22w-full%22 %0D%0A                    onClick=%7BhandleSmartPDFUpload%7D%0D%0A                    disabled=%7BuploadLoading%7D%0D%0A                  %3E%0D%0A                    %7BuploadLoading ? %3CLoader2 className=%22mr-2 h-4 w-4 animate-spin%22 /%3E : %3CBrain className=%22mr-2 h-4 w-4%22 /%3E%7D%0D%0A                    Process PDF & Extract Q&A Pairs%0D%0A                  %3C/Button%3E%0D%0A                %3C/div%3E%0D%0A              %3C/TabsContent%3E%0D%0A%0D%0A              %7B/* Manual Upload Tab */%7D%0D%0A              %3CTabsContent value=%22manual-upload%22 className=%22mt-4%22%3E%0D%0A                %3Cdiv className=%22space-y-4%22%3E%0D%0A                  %3Cdiv className=%22grid grid-cols-1 gap-4 md:grid-cols-2%22%3E%0D%0A                    %3Cdiv%3E%0D%0A                      %3CLabel htmlFor=%22board%22%3EBoard%3C/Label%3E%0D%0A                      %3CSelect %0D%0A                        value=%7BuploadData.board%7D %0D%0A                        onValueChange=%7B(value) =%3E setUploadData(prev =%3E (%7B ...prev, board: value %7D))%7D%0D%0A                      %3E%0D%0A                        %3CSelectTrigger%3E%0D%0A                          %3CSelectValue placeholder=%22Select Board%22 /%3E%0D%0A                        %3C/SelectTrigger%3E%0D%0A                        %3CSelectContent%3E%0D%0A                          %3CSelectItem value=%22CBSE%22%3ECBSE%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22NCERT%22%3ENCERT%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22State Board%22%3EState Board%3C/SelectItem%3E%0D%0A                        %3C/SelectContent%3E%0D%0A                      %3C/Select%3E%0D%0A                    %3C/div%3E%0D%0A                    %0D%0A                    %3Cdiv%3E%0D%0A                      %3CLabel htmlFor=%22class%22%3EClass%3C/Label%3E%0D%0A                      %3CSelect %0D%0A                        value=%7BuploadData.class%7D %0D%0A                        onValueChange=%7B(value) =%3E setUploadData(prev =%3E (%7B ...prev, class: value %7D))%7D%0D%0A                      %3E%0D%0A                        %3CSelectTrigger%3E%0D%0A                          %3CSelectValue placeholder=%22Select Class%22 /%3E%0D%0A                        %3C/SelectTrigger%3E%0D%0A                        %3CSelectContent%3E%0D%0A                          %7BArray.from(%7Blength: 7%7D, (_, i) =%3E i + 6).map(cls =%3E (%0D%0A                            %3CSelectItem key=%7Bcls%7D value=%7Bcls.toString()%7D%3EClass %7Bcls%7D%3C/SelectItem%3E%0D%0A                          ))%7D%0D%0A                        %3C/SelectContent%3E%0D%0A                      %3C/Select%3E%0D%0A                    %3C/div%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv%3E%0D%0A                    %3CLabel htmlFor=%22subject%22%3ESubject%3C/Label%3E%0D%0A                    %3CSelect %0D%0A                      value=%7BuploadData.subject%7D %0D%0A                      onValueChange=%7B(value) =%3E setUploadData(prev =%3E (%7B ...prev, subject: value %7D))%7D%0D%0A                    %3E%0D%0A                      %3CSelectTrigger%3E%0D%0A                        %3CSelectValue placeholder=%22Select Subject%22 /%3E%0D%0A                      %3C/SelectTrigger%3E%0D%0A                      %3CSelectContent%3E%0D%0A                        %3CSelectItem value=%22Mathematics%22%3EMathematics%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22Science%22%3EScience%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22Physics%22%3EPhysics%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22Chemistry%22%3EChemistry%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22Biology%22%3EBiology%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22English%22%3EEnglish%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22Hindi%22%3EHindi%3C/SelectItem%3E%0D%0A                        %3CSelectItem value=%22Social Science%22%3ESocial Science%3C/SelectItem%3E%0D%0A                      %3C/SelectContent%3E%0D%0A                    %3C/Select%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv%3E%0D%0A                    %3CLabel htmlFor=%22chapter%22%3EChapter Title%3C/Label%3E%0D%0A                    %3CInput%0D%0A                      id=%22chapter%22%0D%0A                      value=%7BuploadData.chapter%7D%0D%0A                      onChange=%7B(e) =%3E setUploadData(prev =%3E (%7B ...prev, chapter: e.target.value %7D))%7D%0D%0A                      placeholder=%22e.g., Chapter 1: Rational Numbers%22%0D%0A                    /%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv className=%22grid grid-cols-2 gap-4%22%3E%0D%0A                    %3Cdiv%3E%0D%0A                      %3CLabel htmlFor=%22chapterNumber%22%3EChapter Number%3C/Label%3E%0D%0A                      %3CInput%0D%0A                        id=%22chapterNumber%22%0D%0A                        type=%22number%22%0D%0A                        min=%221%22%0D%0A                        max=%2220%22%0D%0A                        value=%7BuploadData.chapterNumber%7D%0D%0A                        onChange=%7B(e) =%3E setUploadData(prev =%3E (%7B ...prev, chapterNumber: parseInt(e.target.value) %7C%7C 1 %7D))%7D%0D%0A                      /%3E%0D%0A                    %3C/div%3E%0D%0A                    %0D%0A                    %3Cdiv%3E%0D%0A                      %3CLabel htmlFor=%22difficulty%22%3EDifficulty%3C/Label%3E%0D%0A                      %3CSelect %0D%0A                        value=%7BuploadData.difficulty%7D %0D%0A                        onValueChange=%7B(value: 'easy' %7C 'medium' %7C 'hard') =%3E setUploadData(prev =%3E (%7B ...prev, difficulty: value %7D))%7D%0D%0A                      %3E%0D%0A                        %3CSelectTrigger%3E%0D%0A                          %3CSelectValue /%3E%0D%0A                        %3C/SelectTrigger%3E%0D%0A                        %3CSelectContent%3E%0D%0A                          %3CSelectItem value=%22easy%22%3EEasy%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22medium%22%3EMedium%3C/SelectItem%3E%0D%0A                          %3CSelectItem value=%22hard%22%3EHard%3C/SelectItem%3E%0D%0A                        %3C/SelectContent%3E%0D%0A                      %3C/Select%3E%0D%0A                    %3C/div%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv%3E%0D%0A                    %3CLabel htmlFor=%22exercise%22%3EExercise (Optional)%3C/Label%3E%0D%0A                    %3CInput%0D%0A                      id=%22exercise%22%0D%0A                      value=%7BuploadData.exercise%7D%0D%0A                      onChange=%7B(e) =%3E setUploadData(prev =%3E (%7B ...prev, exercise: e.target.value %7D))%7D%0D%0A                      placeholder=%22e.g., Exercise 1.2%22%0D%0A                    /%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv%3E%0D%0A                    %3CLabel htmlFor=%22solution-file%22%3ESolution PDF%3C/Label%3E%0D%0A                    %3CInput%0D%0A                      id=%22solution-file%22%0D%0A                      type=%22file%22%0D%0A                      accept=%22.pdf%22%0D%0A                      onChange=%7B(e) =%3E %7B%0D%0A                        const file = e.target.files?.%5B0%5D %7C%7C null;%0D%0A                        setUploadData(prev =%3E (%7B ...prev, file %7D));%0D%0A                      %7D%7D%0D%0A                    /%3E%0D%0A                    %3Cp className=%22text-sm text-muted-foreground mt-1%22%3E%0D%0A                      Upload a PDF file containing NCERT solutions%0D%0A                    %3C/p%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3Cdiv%3E%0D%0A                    %3CLabel htmlFor=%22thumbnail%22%3EThumbnail Image (Optional)%3C/Label%3E%0D%0A                    %3CInput%0D%0A                      id=%22thumbnail%22%0D%0A                      type=%22file%22%0D%0A                      accept=%22image/*%22%0D%0A                      onChange=%7B(e) =%3E %7B%0D%0A                        const file = e.target.files?.%5B0%5D %7C%7C null;%0D%0A                        setUploadData(prev =%3E (%7B ...prev, thumbnailImage: file %7D));%0D%0A                      %7D%7D%0D%0A                    /%3E%0D%0A                    %3Cp className=%22text-sm text-muted-foreground mt-1%22%3E%0D%0A                      Upload a thumbnail image for this solution%0D%0A                    %3C/p%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %3CButton %0D%0A                    onClick=%7BhandleUploadSolution%7D%0D%0A                    disabled=%7BuploadLoading %7C%7C !uploadData.file%7D%0D%0A                    className=%22w-full%22%0D%0A                  %3E%0D%0A                    %7BuploadLoading ? (%0D%0A                      %3C%3E%0D%0A                        %3CLoader2 className=%22w-4 h-4 mr-2 animate-spin%22 /%3E%0D%0A                        Uploading...%0D%0A                      %3C/%3E%0D%0A                    ) : (%0D%0A                      %3C%3E%0D%0A                        %3CUpload className=%22w-4 h-4 mr-2%22 /%3E%0D%0A                        Upload Solution%0D%0A                      %3C/%3E%0D%0A                    )%7D%0D%0A                  %3C/Button%3E%0D%0A                %3C/div%3E%0D%0A              %3C/TabsContent%3E%0D%0A            %3C/Tabs%3E%0D%0A          %3C/DialogContent%3E%0D%0A        %3C/Dialog%3E%0D%0A%0D%0A        %7B/* Review Dialog */%7D%0D%0A        %3CDialog open=%7BisReviewDialogOpen%7D onOpenChange=%7BsetIsReviewDialogOpen%7D%3E%0D%0A          %3CDialogContent className=%22max-w-5xl max-h-%5B90vh%5D overflow-y-auto%22%3E%0D%0A            %3CDialogHeader%3E%0D%0A              %3CDialogTitle className=%22flex items-center gap-2%22%3E%0D%0A                %3CBrain className=%22h-5 w-5%22 /%3E%0D%0A                Review Extracted Q&A Pairs%0D%0A              %3C/DialogTitle%3E%0D%0A              %3CDialogDescription%3E%0D%0A                %7BselectedSession && (%0D%0A                  %3Cdiv className=%22flex flex-col gap-1 mt-2%22%3E%0D%0A                    %3Cp%3E%0D%0A                      %3Cstrong%3EPDF:%3C/strong%3E %7BselectedSession.metadata.originalFilename%7D%0D%0A                    %3C/p%3E%0D%0A                    %3Cp%3E%0D%0A                      %3Cstrong%3EDetails:%3C/strong%3E %7BselectedSession.metadata.board%7D %7C Class %7BselectedSession.metadata.class%7D %7C %7BselectedSession.metadata.subject%7D %7C %7BselectedSession.metadata.chapter%7D%0D%0A                    %3C/p%3E%0D%0A                    %3Cp%3E%0D%0A                      %3Cstrong%3EExtracted:%3C/strong%3E %7BselectedSession.totalQuestions%7D Q&A pairs%0D%0A                    %3C/p%3E%0D%0A                  %3C/div%3E%0D%0A                )%7D%0D%0A              %3C/DialogDescription%3E%0D%0A            %3C/DialogHeader%3E%0D%0A%0D%0A            %7BselectedSession && (%0D%0A              %3Cdiv className=%22space-y-6 mt-4%22%3E%0D%0A                %3Cdiv className=%22flex justify-between items-center%22%3E%0D%0A                  %3Cdiv className=%22flex items-center gap-2%22%3E%0D%0A                    %3CBadge variant=%22outline%22 className=%22text-sm%22%3E%0D%0A                      %7BselectedSession.qaPairs.length%7D Q&A Pairs%0D%0A                    %3C/Badge%3E%0D%0A                    %3CBadge variant=%7B%0D%0A                      selectedSession.status === 'pending_review' ? 'default' :%0D%0A                      selectedSession.status === 'uploaded_to_database' ? 'secondary' : 'destructive'%0D%0A                    %7D%3E%0D%0A                      %7BselectedSession.status === 'pending_review' ? 'Pending Review' :%0D%0A                       selectedSession.status === 'uploaded_to_database' ? 'Uploaded' : 'Rejected'%7D%0D%0A                    %3C/Badge%3E%0D%0A                  %3C/div%3E%0D%0A                  %0D%0A                  %7BselectedSession.status === 'pending_review' && (%0D%0A                    %3CButton %0D%0A                      onClick=%7B() =%3E handleUploadToDatabase(selectedSession.sessionId)%7D%0D%0A                      disabled=%7BuploadingToDatabase%7D%0D%0A                    %3E%0D%0A                      %7BuploadingToDatabase ? (%0D%0A                        %3CLoader2 className=%22mr-2 h-4 w-4 animate-spin%22 /%3E%0D%0A                      ) : (%0D%0A                        %3CDatabase className=%22mr-2 h-4 w-4%22 /%3E%0D%0A                      )%7D%0D%0A                      Upload All to Database%0D%0A                    %3C/Button%3E%0D%0A                  )%7D%0D%0A                %3C/div%3E%0D%0A                %0D%0A                %3Cdiv className=%22border rounded-md%22%3E%0D%0A                  %3CTable%3E%0D%0A                    %3CTableHeader%3E%0D%0A                      %3CTableRow%3E%0D%0A                        %3CTableHead className=%22w-%5B80px%5D%22%3E#%3C/TableHead%3E%0D%0A                        %3CTableHead className=%22w-%5B40%25%5D%22%3EQuestion%3C/TableHead%3E%0D%0A                        %3CTableHead%3EAnswer%3C/TableHead%3E%0D%0A                      %3C/TableRow%3E%0D%0A                    %3C/TableHeader%3E%0D%0A                    %3CTableBody%3E%0D%0A                      %7BselectedSession.qaPairs.map((pair, index) =%3E (%0D%0A                        %3CTableRow key=%7Bindex%7D%3E%0D%0A                          %3CTableCell className=%22font-medium%22%3E%0D%0A                            %7Bpair.questionNumber %7C%7C index + 1%7D%0D%0A                          %3C/TableCell%3E%0D%0A                          %3CTableCell className=%22align-top%22%3E%0D%0A                            %3Cdiv className=%22max-h-%5B200px%5D overflow-y-auto%22%3E%0D%0A                              %7Bpair.question%7D%0D%0A                            %3C/div%3E%0D%0A                          %3C/TableCell%3E%0D%0A                          %3CTableCell className=%22align-top%22%3E%0D%0A                            %3Cdiv className=%22max-h-%5B200px%5D overflow-y-auto%22%3E%0D%0A                              %7Bpair.answer%7D%0D%0A                            %3C/div%3E%0D%0A                          %3C/TableCell%3E%0D%0A                        %3C/TableRow%3E%0D%0A                      ))%7D%0D%0A                    %3C/TableBody%3E%0D%0A                  %3C/Table%3E%0D%0A                %3C/div%3E%0D%0A                %0D%0A                %3Cdiv className=%22flex justify-end gap-2%22%3E%0D%0A                  %3CButton variant=%22outline%22 onClick=%7B() =%3E setIsReviewDialogOpen(false)%7D%3E%0D%0A                    Close%0D%0A                  %3C/Button%3E%0D%0A                  %7BselectedSession.status === 'pending_review' && (%0D%0A                    %3CButton onClick=%7B() =%3E handleUploadToDatabase(selectedSession.sessionId)%7D disabled=%7BuploadingToDatabase%7D%3E%0D%0A                      %7BuploadingToDatabase ? %3CLoader2 className=%22mr-2 h-4 w-4 animate-spin%22 /%3E : %3CDatabase className=%22mr-2 h-4 w-4%22 /%3E%7D%0D%0A                      Upload to Database%0D%0A                    %3C/Button%3E%0D%0A                  )%7D%0D%0A                %3C/div%3E%0D%0A              %3C/div%3E%0D%0A            )%7D%0D%0A          %3C/DialogContent%3E%0D%0A        %3C/Dialog%3E%0D%0A      %3C/div%3E%0D%0A    %3C/%3E%0D%0A  );%0D%0A%7D;%0D%0A%0D%0Aexport default AdminSolutions;\n",
                            "isNew": true,
                            "isApplied": true
                        },
                        {
                            "path": "api/ncert-solutions.js",
                            "patch": "@@ -0,0 +1,4182 @@\n+// NCERT Solutions API - Handles fetching solutions from the database%0D%0Aimport %7B handleCors %7D from '../utils/cors.js';%0D%0Aimport %7B initializeFirebaseAdmin, getFirestoreAdminDb %7D from '../utils/firebase-admin.js';%0D%0A%0D%0A// Get NCERT solutions based on filters%0D%0Aasync function getSolutions(req, res) %7B%0D%0A  if (req.method !== 'GET') %7B%0D%0A    return res.status(405).json(%7B message: 'Method not allowed' %7D);%0D%0A  %7D%0D%0A%0D%0A  try %7B%0D%0A    initializeFirebaseAdmin();%0D%0A    const db = getFirestoreAdminDb();%0D%0A%0D%0A    const %7B board, class: className, subject, chapter %7D = req.query;%0D%0A%0D%0A    // Validate required parameters%0D%0A    if (!board %7C%7C !className %7C%7C !subject) %7B%0D%0A      return res.status(400).json(%7B%0D%0A        success: false,%0D%0A        message: 'Missing required parameters: board, class, and subject are required'%0D%0A      %7D);%0D%0A    %7D%0D%0A%0D%0A    console.log(%60%F0%9F%94%8D Fetching NCERT solutions: $%7Bboard%7D %7C Class $%7BclassName%7D %7C $%7Bsubject%7D$%7Bchapter ? %60 %7C $%7Bchapter%7D%60 : ''%7D%60);%0D%0A%0D%0A    // Build query%0D%0A    let query = db.collection('ncert_solutions')%0D%0A      .where('board', '==', board)%0D%0A      .where('class', '==', parseInt(className))%0D%0A      .where('subject', '==', subject)%0D%0A      .where('isApproved', '==', true);%0D%0A%0D%0A    if (chapter) %7B%0D%0A      query = query.where('chapter', '==', chapter);%0D%0A    %7D%0D%0A%0D%0A    // Execute query%0D%0A    const snapshot = await query.get();%0D%0A    const solutions = %5B%5D;%0D%0A%0D%0A    snapshot.forEach(doc =%3E %7B%0D%0A      const data = doc.data();%0D%0A      solutions.push(%7B%0D%0A        id: doc.id,%0D%0A        ...data,%0D%0A        createdAt: data.createdAt?.toDate?.()?.toISOString?.() %7C%7C data.createdAt,%0D%0A        updatedAt: data.updatedAt?.toDate?.()?.toISOString?.() %7C%7C data.updatedAt%0D%0A      %7D);%0D%0A    %7D);%0D%0A%0D%0A    // Sort solutions by chapter and question number%0D%0A    solutions.sort((a, b) =%3E %7B%0D%0A      if (a.chapter !== b.chapter) %7B%0D%0A        return a.chapter.localeCompare(b.chapter);%0D%0A      %7D%0D%0A      return a.questionNumber - b.questionNumber;%0D%0A    %7D);%0D%0A%0D%0A    console.log(%60%E2%9C%85 Found $%7Bsolutions.length%7D solutions%60);%0D%0A%0D%0A    return res.status(200).json(%7B%0D%0A      success: true,%0D%0A      solutions,%0D%0A      totalCount: solutions.length,%0D%0A      filters: %7B%0D%0A        board,%0D%0A        class: className,%0D%0A        subject,%0D%0A        chapter: chapter %7C%7C null%0D%0A      %7D%0D%0A    %7D);%0D%0A%0D%0A  %7D catch (error) %7B%0D%0A    console.error('%E2%9D%8C Get solutions error:', error);%0D%0A    return res.status(500).json(%7B%0D%0A      success: false,%0D%0A      message: 'Failed to get solutions',%0D%0A      error: error.message%0D%0A    %7D);%0D%0A  %7D%0D%0A%7D%0D%0A%0D%0A// Get available subjects for a board and class%0D%0Aasync function getSubjects(req, res) %7B%0D%0A  if (req.method !== 'GET') %7B%0D%0A    return res.status(405).json(%7B message: 'Method not allowed' %7D);%0D%0A  %7D%0D%0A%0D%0A  try %7B%0D%0A    initializeFirebaseAdmin();%0D%0A    const db = getFirestoreAdminDb();%0D%0A%0D%0A    const %7B board, class: className %7D = req.query;%0D%0A%0D%0A    if (!board %7C%7C !className) %7B%0D%0A      return res.status(400).json(%7B%0D%0A        success: false,%0D%0A        message: 'Missing required parameters: board and class are required'%0D%0A      %7D);%0D%0A    %7D%0D%0A%0D%0A    // Get all approved solutions for the board and class%0D%0A    const snapshot = await db.collection('ncert_solutions')%0D%0A      .where('board', '==', board)%0D%0A      .where('class', '==', parseInt(className))%0D%0A      .where('isApproved', '==', true)%0D%0A      .get();%0D%0A%0D%0A    // Extract unique subjects%0D%0A    const subjectsSet = new Set();%0D%0A    snapshot.forEach(doc =%3E %7B%0D%0A      const data = doc.data();%0D%0A      subjectsSet.add(data.subject);%0D%0A    %7D);%0D%0A%0D%0A    const subjects = Array.from(subjectsSet).sort();%0D%0A%0D%0A    return res.status(200).json(%7B%0D%0A      success: true,%0D%0A      subjects,%0D%0A      totalCount: subjects.length,%0D%0A      filters: %7B%0D%0A        board,%0D%0A        class: className%0D%0A      %7D%0D%0A    %7D);%0D%0A%0D%0A  %7D catch (error) %7B%0D%0A    console.error('%E2%9D%8C Get subjects error:', error);%0D%0A    return res.status(500).json(%7B%0D%0A      success: false,%0D%0A      message: 'Failed to get subjects',%0D%0A      error: error.message%0D%0A    %7D);%0D%0A  %7D%0D%0A%7D%0D%0A%0D%0A// Main handler with routing%0D%0Aexport default function handler(req, res) %7B%0D%0A  return handleCors(req, res, async (req, res) =%3E %7B%0D%0A    const %7B path %7D = req.query;%0D%0A%0D%0A    if (path === 'subjects') %7B%0D%0A      return await getSubjects(req, res);%0D%0A    %7D else %7B%0D%0A      return await getSolutions(req, res);%0D%0A    %7D%0D%0A  %7D);%0D%0A%7D\n",
                            "isNew": true,
                            "isApplied": true
                        },
                        {
                            "path": "api/ai/explain.js",
                            "patch": "@@ -0,0 +1,3684 @@\n+// AI Explanation API - Provides AI-powered explanations for NCERT solutions%0D%0Aimport %7B handleCors %7D from '../../utils/cors.js';%0D%0A%0D%0A// Groq API configuration%0D%0Aconst GROQ_API_KEY = process.env.GROQ_API_KEY;%0D%0Aconst GROQ_API_URL = 'https://api.groq.com/openai/v1/chat/completions';%0D%0Aconst GROQ_MODEL = 'llama-3.3-70b-versatile';%0D%0A%0D%0A// Get AI explanation for a question and answer%0D%0Aasync function getExplanation(req, res) %7B%0D%0A  if (req.method !== 'POST') %7B%0D%0A    return res.status(405).json(%7B message: 'Method not allowed' %7D);%0D%0A  %7D%0D%0A%0D%0A  try %7B%0D%0A    const %7B question, answer, userClass, subject %7D = req.body;%0D%0A%0D%0A    // Validate required parameters%0D%0A    if (!question %7C%7C !answer) %7B%0D%0A      return res.status(400).json(%7B%0D%0A        success: false,%0D%0A        message: 'Missing required parameters: question and answer are required'%0D%0A      %7D);%0D%0A    %7D%0D%0A%0D%0A    // Determine explanation level (one class higher than user's class)%0D%0A    const explanationLevel = userClass ? parseInt(userClass) + 1 : 10;%0D%0A    %0D%0A    console.log(%60%F0%9F%A7%A0 Generating AI explanation for question: %22$%7Bquestion.substring(0, 50)%7D...%22%60);%0D%0A    console.log(%60%F0%9F%93%9A Context: Class $%7BuserClass%7D, Subject: $%7Bsubject%7D, Explanation Level: Class $%7BexplanationLevel%7D%60);%0D%0A%0D%0A    // Create prompt for AI%0D%0A    const prompt = %60%0D%0AYou are an expert educational tutor specializing in $%7Bsubject %7C%7C 'all subjects'%7D for Class $%7BuserClass %7C%7C 'school'%7D students.%0D%0A%0D%0AI need you to explain the following question and its answer in a way that a Class $%7BexplanationLevel%7D student can understand.%0D%0A%0D%0AQuestion: $%7Bquestion%7D%0D%0A%0D%0AAnswer: $%7Banswer%7D%0D%0A%0D%0APlease provide:%0D%0A1. A clear, detailed explanation of the concept%0D%0A2. Break down complex parts into simpler terms%0D%0A3. Include relevant examples if helpful%0D%0A4. Highlight key points to remember%0D%0A5. Explain WHY this is the correct answer, not just WHAT the answer is%0D%0A%0D%0AYour explanation should be educational, accurate, and engaging for a student.%0D%0A%60;%0D%0A%0D%0A    // Call Groq API%0D%0A    const response = await fetch(GROQ_API_URL, %7B%0D%0A      method: 'POST',%0D%0A      headers: %7B%0D%0A        'Authorization': %60Bearer $%7BGROQ_API_KEY%7D%60,%0D%0A        'Content-Type': 'application/json'%0D%0A      %7D,%0D%0A      body: JSON.stringify(%7B%0D%0A        model: GROQ_MODEL,%0D%0A        messages: %5B%0D%0A          %7B%0D%0A            role: 'system',%0D%0A            content: %60You are an expert educational tutor for Class $%7BuserClass %7C%7C 'school'%7D students. Provide clear, detailed explanations that are educational and engaging.%60%0D%0A          %7D,%0D%0A          %7B%0D%0A            role: 'user',%0D%0A            content: prompt%0D%0A          %7D%0D%0A        %5D,%0D%0A        max_tokens: 1000,%0D%0A        temperature: 0.7%0D%0A      %7D)%0D%0A    %7D);%0D%0A%0D%0A    if (!response.ok) %7B%0D%0A      const errorData = await response.json();%0D%0A      throw new Error(%60AI API error: $%7BerrorData.error?.message %7C%7C response.statusText%7D%60);%0D%0A    %7D%0D%0A%0D%0A    const data = await response.json();%0D%0A    const explanation = data.choices%5B0%5D.message.content;%0D%0A%0D%0A    console.log(%60%E2%9C%85 Generated AI explanation ($%7Bexplanation.length%7D chars)%60);%0D%0A%0D%0A    return res.status(200).json(%7B%0D%0A      success: true,%0D%0A      explanation,%0D%0A      metadata: %7B%0D%0A        model: GROQ_MODEL,%0D%0A        generatedAt: new Date().toISOString(),%0D%0A        questionLength: question.length,%0D%0A        answerLength: answer.length,%0D%0A        explanationLength: explanation.length%0D%0A      %7D%0D%0A    %7D);%0D%0A%0D%0A  %7D catch (error) %7B%0D%0A    console.error('%E2%9D%8C AI explanation error:', error);%0D%0A    return res.status(500).json(%7B%0D%0A      success: false,%0D%0A      message: 'Failed to generate AI explanation',%0D%0A      error: error.message%0D%0A    %7D);%0D%0A  %7D%0D%0A%7D%0D%0A%0D%0A// Main handler%0D%0Aexport default function handler(req, res) %7B%0D%0A  return handleCors(req, res, async (req, res) =%3E %7B%0D%0A    return await getExplanation(req, res);%0D%0A  %7D);%0D%0A%7D\n",
                            "isNew": true,
                            "isApplied": true
                        }
                    ]
                },
                {
                    "type": "shellCommand",
                    "command": "copy E:/LearnQuest/LearnQuest/client/src/pages/AdminSolutions.tsx.new E:/LearnQuest/LearnQuest/client/src/pages/AdminSolutions.tsx",
                    "id": "4974b2e5-3d77-4ba6-ad7a-f81c9a7c8627",
                    "status": "SUCCESS",
                    "toolCallId": "toolu_01XLGePZV3zsR4DGwXdP2HY7",
                    "commandsRequiringConfirmation": [
                        {
                            "name": "copy",
                            "arguments": [
                                "E:/LearnQuest/LearnQuest/client/src/pages/AdminSolutions.tsx.new",
                                "E:/LearnQuest/LearnQuest/client/src/pages/AdminSolutions.tsx"
                            ]
                        }
                    ],
                    "exitCode": 0,
                    "output": "\u001b[?9001h\u001b[?1004h\u001b[?25l\u001b[2J\u001b[m\u001b[H\u001b]0;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0007\u001b[?25h",
                    "outputPath": ".zencoder/Zencoder-bcaaeeeb-082f-4948-b849-24898e3434bd.log"
                }
            ],
            "context": {
                "author": "Coding Agent",
                "operationId": "8f554f29-cd21-4bc9-9f97-41f74b9ed779"
            },
            "createdAt": 1750419962576,
            "isInternal": false
        },
        {
            "id": "b9369ef1-4174-4ff7-ae87-1ec20c06a994",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "are all  the edits don and now will the admin be able to upload pdf's and users acess the solutions properly without facing any errors ?"
                }
            ],
            "context": {
                "codebaseEnabled": true
            },
            "createdAt": 1750420604428,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "are all  the edits don and now will the admin be able to upload pdf's and users acess the solutions properly without facing any errors ?"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "id": "c982109b-42a6-4e0d-b264-796cb11f6fd6",
            "role": "system",
            "content": [
                {
                    "type": "errorText",
                    "text": "Rate limit exceeded. You can try again on June 21 at 17:01.",
                    "allowRegenerate": true,
                    "actions": [
                        {
                            "type": "upgradePlan",
                            "waitSeconds": 84887
                        }
                    ]
                }
            ],
            "createdAt": 1750420605354,
            "isInternal": false
        }
    ],
    "isAgent": true,
    "isNameGenerated": true,
    "isCustomAgent": false,
    "isUnitTestsAgent": false,
    "isE2EAgent": false,
    "autoApply": false,
    "isLongChatWarningDismissed": true
}
}